{"version":3,"sources":["components/TactileButtonNotification.jsx","components/ErrorSnackbar.jsx","components/LogTable.jsx","components/ExperimentSummary.jsx","components/Chart.jsx","components/PioreactorIcon.jsx","components/UnderlineSpan.jsx","components/MediaCard.jsx","ExperimentOverview.jsx","ExportData.jsx","components/AutomationForm.jsx","components/ChangeAutomationsDialog.jsx","components/ActionDosingForm.jsx","components/ActionLEDForm.jsx","Pioreactors.jsx","PioreactorUnit.jsx","components/StartSensors.jsx","components/StartCalculations.jsx","StartNewExperiment.jsx","EditConfig.jsx","Updates.jsx","Plugins.jsx","Analysis.jsx","Feedback.jsx","components/SideNavAndHeader.jsx","components/ErrorBoundary.jsx","App.jsx","utilities.js","serviceWorker.js","index.js"],"names":["TactileButtonNotification","props","React","useState","unit","setUnit","renamedUnit","setRenamedUnit","open","setOpen","useEffect","config","client","remote","ws_url","Client","Math","random","connect","onSuccess","subscribe","join","qos","timeout","reconnect","onMessageArrived","msg","payloadString","topic","split","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","key","transitionDuration","enter","Alert","severity","variant","icon","AlertTitle","style","fontSize","ErrorSnackbar","setMsg","level","setLevel","task","setTask","handleClose","event","reason","message","payload","JSON","parse","endsWith","maxWidth","toLowerCase","whiteSpace","levelMappingToOrdinal","NOTSET","DEBUG","INFO","WARNING","ERROR","CRITICAL","LogTable","state","listOfLogs","onConnect","bind","a","fetch","URLSearchParams","min_level","this","logging","ui_log_level","then","response","json","data","setState","catch","e","console","log","getData","prevProps","experiment","length","pop","unshift","timestamp","moment","utc","format","pioreactor_unit","String","is_error","is_warning","renameMap","classes","Card","CardContent","Typography","component","Box","fontWeight","TableContainer","height","width","overflowY","Table","stickyHeader","size","aria-label","TableHead","TableRow","TableCell","className","clsx","headerCell","TableBody","map","i","tightCell","smallText","errorLog","warningLog","title","local","renameUnit","replace","Component","withStyles","theme","padding","backgroundColor","tightRight","textAlign","useStyles","makeStyles","cardContent","pos","marginBottom","textIcon","verticalAlign","margin","headerMenu","display","justifyContent","breakpoints","down","flexFlow","flexDirection","headerButtons","EditableDescription","saveToDatabaseOrSkip","recentChange","setTimeout","method","body","stringify","description","desc","headers","res","status","savingLoopActive","onFocus","evt","target","scrollHeight","handleChange","value","render","InputLabel","htmlFor","OutlinedInput","placeholder","id","multiline","fullWidth","onChange","fontFamily","overflow","contentEditable","createRef","ButtonConfirmNewExperimentDialog","Fragment","Button","textTransform","float","color","onClick","root","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","href","autoFocus","ButtonConfirmStopProcessDialog","ExperimentSummary","experimentMetadata","organism","organism_used","media","media_used","startedAt","deltaHours","delta_hours","marginRight","Divider","colors","primary","colorMaps","getColorFromName","name","sensorRe","test","match","newPallete","shift","Chart","createToolTip","d","datum","x","renameAndFormatSeries","childName","round","yTransformation","y","fixedDecimals","seriesMap","hiddenSeries","Set","names","legendEvents","fetched","selectLegendData","selectVictoryLines","dataSource","filter_mod_N","max","floor","min","lookback","initialSeriesMap","entries","v","item","Object","keys","createLegendEvents","forceUpdate","set","delete","eventHandlers","_","eventKey","mutation","has","prevState","deleteAndReturnSet","add","retained","parseFloat","payloadKey","isODReading","push","newSeriesMap","error","string","slice","results","index","sensor","breakString","reformattedName","symbol","fill","marker","interpolation","labels","stroke","strokeWidth","parent","border","maxHeight","domainPadding","left","right","bottom","top","events","scale","VictoryTheme","material","containerComponent","responsive","voronoiBlacklist","labelComponent","cornerRadius","flyoutStyle","text","textAnchor","tickLabels","offsetY","orientation","crossAxis","dependentAxis","domain","yAxisDomain","tickFormat","t","toFixed","label","yAxisLabel","axisLabelComponent","dy","symbolSpacer","itemsPerRow","borderPadding","cursor","gutter","rowGutter","PioreactorIcon","SvgIcon","fillColor","fillRule","transform","cx","cy","r","UnderlineSpan","underlineSpan","children","MediaCard","mediaThroughputPerUnit","altMediaThroughputPerUnit","mediaThroughput","altMediaThroughput","rates","all","mediaRate","altMediaRate","activeUnits","getRecentRates","filter","hash","object","hasOwnProperty","topicParts","destinationName","objectRef","totalRef","addOrUpdate","total","values","reduce","b","align","scope","Overview","setExperimentMetadata","setRenameMap","document","Grid","container","spacing","xs","md","marginTop","formControl","caption","marginLeft","ExperimentSelection","experiments","setExperiments","FormControl","Select","native","inputProps","CheckboxesGroup","FormLabel","FormGroup","FormControlLabel","control","Checkbox","checked","isChecked","growth_rates","gutterBottom","od_readings_raw","od_readings_filtered","temperature_readings","alt_media_fractions","dosing_events","dosing_automation_settings","led_events","led_automation_settings","temperature_automation_settings","kalman_filter_outputs","stirring_rates","logs","ExportDataContainer","isRunning","setIsRunning","isError","setIsError","errorMsg","setErrorMsg","experimentSelection","datasetCheckbox","alt_media_fraction","errorFeedbackOrDefault","LoadingButton","type","loading","preventDefault","some","link","createElement","filename","setAttribute","appendChild","click","remove","rel","ExportData","textFieldCompact","AutomationForm","defaults","assign","fields","field","default","updateParent","onSettingsChange","listOfTextField","TextField","autoComplete","defaultValue","InputProps","endAdornment","InputAdornment","position","onKeyPress","unitTitle","unitTitleDialog","suptitle","defaultAutomations","temperature","dosing","led","ChangeAutomationsDialog","automationType","automationTypeForDisplay","automationName","setAutomationName","skip_first_run","algoSettings","setAlgoSettings","setClient","automations","setAutomations","openSnackbar","setOpenSnackbar","ok","Error","listOfAuto","auto","automation_name","onFinished","PaperProps","rename","IconButton","sx","palette","grey","no_skip_first_run","display_name","setting","Boolean","isJobRunning","Message","publish","actionTextField","actionForm","actionToAct","ActionPumpForm","mL","setML","duration","setDuration","isMLDisabled","setIsMLDisabled","isDurationDisabled","setIsDurationDisabled","snackbarMsg","setSnackbarMsg","textfieldError","setTextfieldError","clicked","setClicked","formErrorDuration","setFormErrorDuration","formErrorML","setFormErrorML","action","disabled","job","params","ml","source_of_event","continuously","ActionLEDForm","intensity","setIntensity","errorForm","setErrorForm","channel","pioreactorCard","disabledText","textbox","textboxLabel","footnote","textField","textFieldWide","slider","divider","jobButton","paddingRight","paddingLeft","unitSettingsSubtext","unitSettingsSubtextEmpty","minHeight","ledBlock","rowOfUnitSettingDisplay","flexWrap","alignItems","alignContent","testingListItemIcon","minWidth","testingListItem","paddingTop","paddingBottom","cardHeaderSettings","cardHeaderButtons","TabPanel","other","role","hidden","UnitSettingDisplaySubtext","subtext","UnitSettingDisplay","stateDisplay","prettyPrint","isStateSetting","isUnitActive","displaySettings","isLEDIntensity","ledIntensities","LEDMap","renamedA","renamedB","renamedC","renamedD","precision","measurementUnit","AddNewPioreactor","snackbarOpen","setSnackbarOpen","setName","expectedPathMsg","setExpectedPathMsg","runningFeedback","CircularProgress","required","startAdornment","newPioreactorName","PioreactorHeader","SettingsActionsDialogAll","PatientButton","buttonText","setButtonText","disableElevation","CalibrateDialog","tabValue","setTabValue","startPioreactorJob","createUserButtonsBasedOnState","jobState","blankODButton","odBlankJobState","stirringCalibrationButton","stirringCalibrationState","Tabs","newValue","indicatorColor","textColor","Tab","odBlankReading","k","SelfTestDialog","displayIcon","selfTestTests","colorOfIcon","selfTestButton","selfTestState","List","subheader","ListSubheader","lineHeight","disableSticky","disableGutters","ListItem","ListItemIcon","ListItemText","secondary","led_pd","SettingsActionsDialog","snackbarMessage","setSnackbarMessage","openChangeDosingDialog","setOpenChangeDosingDialog","openChangeLEDDialog","setOpenChangeLEDDialog","openChangeTemperatureDialog","setOpenChangeTemperatureDialog","setPioreactorJobState","setPioreactorJobAttr","stopPioreactorJob","job_attr","buttons","fromEntries","jobs","job_key","isLargeScreen","useMediaQuery","dosingControlJob","dosing_control","dosingControlJobRunning","includes","ledControlJob","led_control","ledControlJobRunning","temperatureControlJob","temperature_control","temperatureControlJobRunning","scrollButtons","allowScrollButtonsMobile","metadata","source","dangerouslySetInnerHTML","__html","renamedTo","window","location","reload","add_media","remove_waste","add_alt_media","resumeHideDuration","setJobs","listOfJobs","jobs_","metaData_","job_name","prev","sendMessage","setPioreactorJobAttrOnEnter","backgroundImage","ActiveUnits","units","PioreactorCard","FlashLEDButton","flashing","setFlashing","blinkled","fetchComplete","setFetchComplete","monitor","is_testing","parsedFloat","isNaN","experimentName","indicatorDotColor","indicatorDotShadow","getIndicatorDotShadow","indicatorLabel","isActive","getInicatorLabel","sm","Tooltip","placement","boxShadow","mean","InactiveUnits","Pioreactors","inactiveUnits","PioreactorUnit","useParams","StartHeating","isClicked","setIsClicked","StartStirring","StartODReading","StartSensors","direction","fontScale","StartGrowthRate","StartCalculations","setExperiment","deltaHour","button","instructions","createFilterOptions","FreeSoloCreateOption","setValue","options","updateParentCallback","Autocomplete","inputValue","filterOptions","filtered","isExisting","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","ExperimentSummaryForm","formError","setFormError","helperText","setHelperText","expName","setExpName","setTimestamp","setDescription","organismUsed","setOrganismUsed","mediaUsed","setMediaUsed","historicalMediaUsed","setHistoricalMediaUsed","historicalOrganismUsed","setHistoricalOrganismUsed","InputLabelProps","shrink","maxRows","trim","toISOString","publishExpNameToMQTT","handleNext","StartNewExperimentContainer","activeStep","setActiveStep","skipped","setSkipped","isStepOptional","steps","optional","isStepSkipped","step","newSkipped","prevActiveStep","scrollTo","content","Stepper","stepProps","labelProps","completed","Step","StepLabel","prevSkipped","StartNewExperiment","EditableCodeDiv","onSelectionChange","getConfig","getCodeFlaskRef","codeFlask","onTextChange","code","hasChangedSinceSave","handleSnackbarClose","availableConfigs","saveCurrentCode","deleteConfig","getListOfConfigFiles","letterSpacing","editorRef","language","EditConfigContainer","EditConfig","ConfirmDialog","PageHeader","version","setVersion","latestVersion","setLatestVersion","getCurrentAppVersion","getLatestAppVersion","Link","underline","ChangelogContainer","changelog","setChangelog","markdown","Updates","pluginList","secondaryActionButton","ListAvailablePlugins","alreadyInstalledPluginsNames","availablePlugins","setAvailablePlugins","dense","plugin","ListItemAvatar","Avatar","ListItemSecondaryAction","plugin_name","endIcon","homepage","ListInstalledPlugins","installedPlugins","PluginContainer","setInstalledPlugins","Plugins","Analysis","setExperimentSelection","halfTextField","FeedbackContainer","email","setEmail","feedback","setFeedback","sending","setSending","hasBeenSent","setHasBeenSent","minRows","Feedback","drawer","up","flexShrink","menuButton","drawerPaper","flexGrow","appBarRoot","zIndex","listItemIcon","SideNavAndHeader","mobileOpen","setMobileOpen","getCurrentApp","getLatestVersion","handleDrawerToggle","isSelected","path","pathname","helpNode","list","drawerContainer","selected","primaryTypographyProps","viewBox","Badge","invisible","AppBar","Toolbar","edge","alt","src","Drawer","anchor","paper","ModalProps","keepMounted","ErrorBoundary","hasError","errorInfo","createTheme","background","main","MainSite","setConfig","regex","section","param","comment","lines","forEach","line","parseINIString","ExperimentOverview","exact","App","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7a014dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nfunction TactileButtonNotification(props) {\n  var [unit, setUnit] = React.useState(\"\")\n  var [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  var [open, setOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    if (!props.config['network.topology']){\n      return\n    }\n\n    const onMessageArrived = (msg) => {\n      if (msg.payloadString === \"True\"){\n        var unit = msg.topic.split(\"/\")[1]\n        setUnit(unit)\n        try {\n          setRenamedUnit(props.config['ui.rename'][unit])\n        }\n        catch {}\n        setOpen(true)\n      }\n      else {\n        setOpen(false)\n      }\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"$experiment\",\n        \"monitor\",\n        \"button_down\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_TactileButtonNotification\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_TactileButtonNotification\" + Math.random()\n      );\n    }\n    client.connect({onSuccess: onSuccess, timeout: 180, reconnect: true});\n    client.onMessageArrived = onMessageArrived;\n\n  },[props.config])\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={null}\n      onClose={() => {}}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      key={\"button-tactile-snackbar\"}\n      transitionDuration={{enter: 10}}\n    >\n    <Alert severity=\"info\" variant=\"filled\" icon={false}>\n      <AlertTitle style={{fontSize: 25}}>{unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      Holding <b>{unit}</b>'s button down\n    </Alert>\n    </Snackbar>\n)}\n\nexport default TactileButtonNotification;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nfunction ErrorSnackbar(props) {\n  var [open, setOpen] = React.useState(false)\n  var [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  var [unit, setUnit] = React.useState(\"\")\n  var [msg, setMsg] = React.useState(\"\")\n  var [level, setLevel] = React.useState(\"error\")\n  var [task, setTask] = React.useState(\"\")\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    if (!props.config['network.topology']){\n      return\n    }\n\n    const onMessageArrived = (message) => {\n      const payload = JSON.parse(message.payloadString)\n\n      if ((payload.level === \"ERROR\" || payload.level === \"WARNING\") && (!message.topic.endsWith(\"/ui\"))){\n        const unit = message.topic.split(\"/\")[1]\n        try {\n          setRenamedUnit(props.config['ui.rename'][unit])\n        }\n        catch {}\n        setMsg(payload.message)\n        setTask(payload.task)\n        setLevel(payload.level)\n        setUnit(unit)\n        setOpen(true)\n      }\n\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"+\",\n        \"logs\",\n        \"+\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ErrorSnackbarNotification\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ErrorSnackbarNotification\" + Math.random()\n      );\n    }\n    client.connect({onSuccess: onSuccess, timeout: 180, reconnect: true});\n    client.onMessageArrived = onMessageArrived;\n\n  },[props.config])\n\n  return (\n    <Snackbar\n      open={open}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}}\n      key=\"error-snackbar\"\n      autoHideDuration={11000}\n      style={{maxWidth: \"500px\"}}\n      onClose={handleClose}\n    >\n    <Alert variant=\"standard\" severity={level.toLowerCase()} onClose={handleClose}>\n      <AlertTitle style={{fontSize: 15}}>{task} encountered the following {level.toLowerCase()} in {unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      <span style={{whiteSpace: 'pre-wrap'}}>{msg}</span>\n    </Alert>\n    </Snackbar>\n)}\n\nexport default ErrorSnackbar;\n","import React from 'react'\n\nimport clsx from 'clsx';\nimport {Client} from 'paho-mqtt';\nimport moment from 'moment';\n\n\nimport {withStyles} from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"6px 10px 6px 10px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n  errorLog: {\n    backgroundColor: \"#ff7961\"\n  },\n  warningLog: {\n    backgroundColor: \"#FFEA8A\"\n  }\n});\n\nconst levelMappingToOrdinal = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4,\n  CRITICAL: 5\n}\n\n\nclass LogTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {listOfLogs: []};\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getData() {\n    await fetch(\"/recent_logs?\" + new URLSearchParams({\n        min_level: this.props.config.logging.ui_log_level\n      }))\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({listOfLogs: data});\n      }).catch((e) => {\n        console.log(e)\n      });\n  }\n\n  componentDidMount() {\n    this.getData()\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_LogTable\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_LogTable\" + Math.random()\n      );\n    }\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getData()\n     }\n  }\n\n  onConnect() {\n    this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"logs\", \"+\"].join(\"/\"))\n    this.client.subscribe([\"pioreactor\", \"+\", \"$experiment\",         \"logs\", \"+\"].join(\"/\"))\n  }\n\n  onMessageArrived(message) {\n    if (this.state.listOfLogs.length > 50){\n      this.state.listOfLogs.pop()\n    }\n    const unit = message.topic.split(\"/\")[1]\n    const payload = JSON.parse(message.payloadString)\n\n    if (levelMappingToOrdinal[payload.level] < levelMappingToOrdinal[this.props.config.logging.ui_log_level]){\n      return\n    }\n\n    this.state.listOfLogs.unshift(\n      {timestamp: moment.utc().format('YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]'), pioreactor_unit: unit, message: String(payload.message), task: payload.task, is_error: (payload.level === \"ERROR\"), is_warning: (payload.level === \"WARNING\")}\n    )\n    this.setState({\n      listOfLogs: this.state.listOfLogs\n    });\n  }\n\n  renameUnit(unit) {\n    return (this.props.renameMap && this.props.renameMap[unit]) ? this.props.renameMap[unit] : unit\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"h2\">\n            <Box fontWeight=\"fontWeightRegular\">\n              Recent event logs\n            </Box>\n          </Typography>\n          <TableContainer style={{ height: \"700px\", width: \"100%\", overflowY: \"scroll\"}}>\n            <Table stickyHeader size=\"small\" aria-label=\"log table\">\n               <TableHead>\n                <TableRow>\n                  <TableCell className={clsx(classes.headerCell)}>Time</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Pioreactor</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Source</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Message</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {this.state.listOfLogs.map((log, i) => (\n                  <TableRow key={i}>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>\n                      <span title={moment.utc(log.timestamp, 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]').local().format('YYYY-MM-DD HH:mm:ss.SS')}>{moment.utc(log.timestamp, 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]').local().format('HH:mm:ss')} </span>\n                    </TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {this.renameUnit(log.pioreactor_unit)}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.task.replace(/_/g, ' ')}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.message}</TableCell>\n                  </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    );}\n}\n\n\n\nexport default withStyles(useStyles)(LogTable);\n","import React from 'react'\nimport moment from \"moment\";\nimport Card from '@mui/material/Card';\nimport {makeStyles} from '@mui/styles';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport TimelapseIcon from '@mui/icons-material/Timelapse';\nimport CoronavirusIcon from '@mui/icons-material/Coronavirus';\nimport LocalDrinkIcon from '@mui/icons-material/LocalDrink';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"}\n}));\n\n\n\nclass EditableDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef();\n    this.state = {\n      desc: \"\",\n      recentChange: false,\n      savingLoopActive: false\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({desc: this.props.description})\n    }\n  }\n\n  saveToDatabaseOrSkip = () => {\n    if (this.state.recentChange) {\n      this.setState({recentChange: false})\n      setTimeout(this.saveToDatabaseOrSkip, 150)\n    } else {\n      fetch('update_experiment_desc', {\n          method: \"POST\",\n          body: JSON.stringify({experiment : this.props.experiment, description: this.state.desc}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status !== 200){\n            console.log(\"Didn't save successfully.\")\n          }\n        })\n        this.setState({savingLoopActive: false})\n      }\n  }\n\n  onFocus = evt => {\n    evt.target.style.height = evt.target.scrollHeight + 'px'\n  }\n\n  handleChange = evt => {\n    evt.target.style.height = evt.target.scrollHeight + 'px'\n    this.setState({desc: evt.target.value});\n    this.setState({recentChange: true})\n    if (this.state.savingLoopActive){\n      return\n    }\n    else {\n      this.setState({savingLoopActive: true})\n      setTimeout(this.saveToDatabaseOrSkip, 150)\n    }\n  };\n\n\n  render = () => {\n    return (\n      <div style={{padding: \"0px 5px 0px 5px\"}}>\n        <InputLabel  htmlFor=\"description-box\"  >Description</InputLabel>\n        <OutlinedInput\n          placeholder={\"Provide a description of your experiment.\"}\n          id=\"description-box\"\n          multiline\n          fullWidth={true}\n          onChange={this.handleChange}\n          value={this.state.desc}\n          style={{padding: \"10px 5px 10px 5px\",  fontSize: \"14px\", fontFamily: \"Roboto\", width: \"100%\", overflow: \"hidden\"}}\n        />\n      </div>\n    )\n  };\n};\n\n\nfunction ButtonConfirmNewExperimentDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> New experiment\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Starting a new experiment</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Starting a new experiment will stop data collection for the current experiment. Do you wish to proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button href=\"/start-new-experiment\" color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nfunction ButtonConfirmStopProcessDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n    fetch(\"/stop_all\", {method: \"POST\"})\n    handleClose()\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClickOpen}>\n        <ClearIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> End experiment\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"End experiment?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will halt all activies (stirring, dosing, optical density reading, etc.) in all Pioreactor units. You can manually start them again later. Do you wish to end the experiment?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction ExperimentSummary(props){\n  const classes = useStyles();\n  const experiment = props.experimentMetadata.experiment || \"\"\n  const organism = props.experimentMetadata.organism_used || \"\"\n  const media = props.experimentMetadata.media_used || \"\"\n  const startedAt = props.experimentMetadata.timestamp || moment()\n  const desc = props.experimentMetadata.description || \"\"\n  const deltaHours = props.experimentMetadata.delta_hours || 0\n\n  return(\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h1\">\n            <Box fontWeight=\"fontWeightBold\">{experiment}</Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <ButtonConfirmNewExperimentDialog/>\n            <ButtonConfirmStopProcessDialog/>\n            <Button href=\"/export-data\" style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <GetAppIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Export experiment data\n            </Button>\n          </div>\n        </div>\n\n        <Divider/>\n        <Typography variant=\"subtitle2\">\n\n          <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <CalendarTodayIcon style={{ fontSize: 12, verticalAlign: \"-1px\" }}/> Experiment started:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n            <span title={moment(startedAt).format(\"YYYY-MM-DD HH:mm:ss\")}>{moment(startedAt).format(\"dddd, MMMM D, YYYY\")}</span>\n          </Box>\n\n          <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <TimelapseIcon style={{ fontSize: 12, verticalAlign: \"-1px\"  }}/>Time elapsed:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n           {deltaHours}h\n          </Box>\n\n          {organism &&\n          <React.Fragment>\n            <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\", margin: \"10px 2px 10px 0px\"}}>\n              <CoronavirusIcon style={{ fontSize: 12, verticalAlign: \"-1px\"  }}/>Strain:\n            </Box>\n            <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n             {organism}\n            </Box>\n          </React.Fragment>\n        }\n\n          {media &&\n          <React.Fragment>\n            <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\", margin: \"10px 2px 10px 0px\"}}>\n              <LocalDrinkIcon style={{ fontSize: 12, verticalAlign: \"-1px\"  }}/>Media:\n            </Box>\n            <Box fontWeight=\"fontWeightRegular\" style={{display:\"inline-block\"}}>\n             {media}\n            </Box>\n          </React.Fragment>\n        }\n\n        </Typography>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableDescription experiment={experiment} description={desc} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  )\n}\n\n\nexport default ExperimentSummary;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport {\n  VictoryChart,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryScatter,\n  VictoryGroup,\n  VictoryLegend,\n  VictoryTooltip,\n  VictoryVoronoiContainer,\n} from \"victory\";\nimport moment from \"moment\";\nimport Card from \"@mui/material/Card\";\n\nconst colors = [\n  {primary: \"#0077BB\", \"1\": \"#0077BB\", \"2\": \"#0077BB\"},\n  {primary: \"#009988\", \"1\": \"#009988\", \"2\": \"#009988\"},\n  {primary: \"#CC3311\", \"1\": \"#CC3311\", \"2\": \"#CC3311\"},\n  {primary: \"#33BBEE\", \"1\": \"#33BBEE\", \"2\": \"#33BBEE\"},\n  {primary: \"#EE7733\", \"1\": \"#EE7733\", \"2\": \"#EE7733\"},\n  {primary: \"#EE3377\", \"1\": \"#EE3377\", \"2\": \"#EE3377\"},\n  {primary: \"#BBBBBB\", \"1\": \"#BBBBBB\", \"2\": \"#BBBBBB\"},\n];\n\nconst colorMaps = {}\n\nfunction getColorFromName(name){\n  if (name in colorMaps){\n    return colorMaps[name]\n  }\n\n  let sensorRe = /(.*)-[1234]/;\n  if (sensorRe.test(name)){\n    let primaryName = name.match(sensorRe)[1]\n    return getColorFromName(primaryName)\n  }\n  else{\n    var newPallete = colors.shift()\n    colorMaps[name] = newPallete.primary\n    colorMaps[name + \"-1\"] = newPallete[\"1\"]\n    colorMaps[name + \"-2\"] = newPallete[\"2\"]\n    colorMaps[name + \"-3\"] = newPallete[\"3\"]\n    colorMaps[name + \"-4\"] = newPallete[\"4\"]\n    return getColorFromName(name)\n  }\n}\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesMap: {},\n      hiddenSeries: new Set(),\n      names: [],\n      legendEvents: [],\n      fetched: false,\n    };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.selectLegendData = this.selectLegendData.bind(this);\n    this.selectVictoryLines = this.selectVictoryLines.bind(this);\n    this.yTransformation = this.props.yTransformation || ((y) => y)\n\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      [\"pioreactor\", \"+\", this.props.experiment, this.props.topic].join(\"/\")\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getData()\n     }\n  }\n\n  componentDidMount() {\n    this.getData()\n\n    if (!this.props.config || !this.props.config['network.topology']){\n      return\n    }\n\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_Chart\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_Chart\" + Math.random()\n      );\n    }\n\n    this.client.connect({ onSuccess: this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  async getData() {\n    if (!this.props.experiment){\n      return\n    }\n    const tweak = 0.60 // increase to filter more\n    await fetch(\"/time_series/\" + this.props.dataSource + \"/\" + this.props.experiment + \"?\" + new URLSearchParams({\n        filter_mod_N: Math.max(Math.floor(tweak * Math.min(this.props.deltaHours, this.props.lookback)), 1),\n        lookback: this.props.lookback\n      }))\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let initialSeriesMap = {};\n        for (const [i, v] of data[\"series\"].entries()) {\n          if (data[\"data\"][i].length > 0) {\n            initialSeriesMap[v] = {\n              data: (data[\"data\"][i]).map(item => ({y: item.y, x: moment.utc(item.x, 'YYYY-MM-DDTHH:mm:ss.SSSSS').local()})),\n              name: v,\n              color: getColorFromName(v),\n            };\n          }\n        }\n        let names = Object.keys(initialSeriesMap);\n        this.setState({\n          seriesMap: initialSeriesMap,\n          legendEvents: this.createLegendEvents(),\n          names: names,\n          fetched: true\n        });\n      })\n      .catch((e) => {\n        console.log(e)\n        this.setState({fetched: true})\n      });\n      this.forceUpdate()\n\n  }\n\n  deleteAndReturnSet(set, value){\n    set.delete(value)\n    return set\n  }\n\n  createLegendEvents() {\n    return [{\n      childName: \"legend\",\n      target: \"data\",\n      eventHandlers: {\n        onClick: (_, props) => {\n          return [\n            {\n              childName: props.datum.name,\n              target: \"data\",\n              eventKey: \"all\",\n              mutation: () => {\n                if (!this.state.hiddenSeries.has(props.datum.name)) {\n                  // Was not already hidden => add to set\n                  this.setState((prevState) => ({\n                    hiddenSeries: prevState.hiddenSeries.add(props.datum.name)\n                  }));\n                } else {\n                  // remove from set\n                  this.setState((prevState) => ({\n                    hiddenSeries: this.deleteAndReturnSet(prevState.hiddenSeries, props.datum.name)\n                  }));\n                }\n                return null;\n              },\n            },\n          ];\n        },\n      },\n    }]\n  }\n\n  onMessageArrived(message) {\n    if (!this.state.fetched){\n      return\n    }\n    if (message.retained){\n      return\n    }\n\n    if (!message.payloadString){\n      return\n    }\n\n    const payload = JSON.parse(message.payloadString)\n    const timestamp = moment.utc(payload.timestamp).local()\n    const value = parseFloat(payload[this.props.payloadKey])\n\n\n    var key = this.props.isODReading //TODO: change this variable name, something like: IsPartitionedBySensor\n      ? message.topic.split(\"/\")[1] + \"-\" + message.topic.split(\"/\")[5]\n      : message.topic.split(\"/\")[1];\n\n    try {\n      if (!(key in this.state.seriesMap)){\n        const newSeriesMap = {...this.state.seriesMap, [key]:  {\n          data: [{x: timestamp, y: value}],\n          name: key,\n          color: getColorFromName(key)\n        }}\n\n        this.setState({ seriesMap: newSeriesMap })\n        this.setState({\n          names: [...this.state.names, key]\n        })\n      } else {\n        // .push seems like bad state management, and maybe a hit to performance...\n        this.state.seriesMap[key].data.push({\n          x: timestamp,\n          y: value,\n        });\n        this.setState({ seriesMap: this.state.seriesMap })\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n    return;\n  }\n\n  breakString(string){\n    if (string.length > 12){\n      return string.slice(0, 5) + \"...\" + string.slice(string.length-2, string.length)\n    }\n    return string\n  }\n\n  renameAndFormatSeries(name){\n    if (!this.props.renameMap){\n      return name\n    }\n\n    if (name.match(/(.*)-([1234])/g)){\n      const results = name.match(/(.*)-([1234])/);\n      const index = results[1];\n      const sensor = results[2];\n      return this.breakString(this.props.renameMap[index] || index) + \"-ch\" + sensor\n    }\n    else {\n      return this.breakString(this.props.renameMap[name] || name)\n    }\n  }\n\n\n\n  createToolTip = (d) => {\n      return `${d.datum.x.format(\"MMM DD HH:mm\")}\n${this.renameAndFormatSeries(d.datum.childName)}: ${Math.round(this.yTransformation(d.datum.y) * 10 ** this.props.fixedDecimals) / 10 ** this.props.fixedDecimals}`\n  }\n\n\n  selectLegendData(name){\n    var reformattedName = this.renameAndFormatSeries(name)\n    if (!this.state.seriesMap) {\n      return {}\n    }\n    const line = this.state.seriesMap[name];\n    const item = {\n      name: reformattedName,\n      symbol: { fill: line.color },\n    };\n    if (this.state.hiddenSeries.has(reformattedName)) {\n      return { ...item, symbol: { fill: \"white\" } };\n    }\n    return item;\n  }\n\n  selectVictoryLines(name) {\n    var reformattedName = this.renameAndFormatSeries(name)\n\n    var marker = null;\n    if (this.state.seriesMap[name].data.length === 1){\n      marker = <VictoryScatter\n          size={4}\n          key={\"line-\" + reformattedName + this.props.title}\n          name={reformattedName}\n          style={{\n            data: {\n              fill: this.state.seriesMap[name].color\n            },\n          }}\n        />\n    }\n    else {\n        marker = <VictoryLine\n          interpolation={this.props.interpolation}\n          key={\"line-\" + reformattedName + this.props.title}\n          name={reformattedName}\n          style={{\n            labels: {fill: this.state.seriesMap[name].color},\n            data: {\n              stroke: this.state.seriesMap[name].color,\n              strokeWidth: 2,\n            },\n            parent: { border: \"1px solid #ccc\" },\n          }}\n        />\n    }\n\n    return (\n      <VictoryGroup\n          data={(this.state.hiddenSeries.has(reformattedName)) ? [] : this.state.seriesMap[name].data}\n          x=\"x\"\n          y={(datum) => this.yTransformation(datum.y)}\n        >\n        {marker}\n      </VictoryGroup>\n    );\n  }\n\n  render() {\n    return (\n      <Card style={{ maxHeight: \"100%\"}}>\n        <VictoryChart\n          style={{ parent: { maxWidth: \"700px\"}}}\n          title={this.props.title}\n          domainPadding={10}\n          padding={{ left: 70, right: 50, bottom: 80, top: 50 }}\n          events={this.state.legendEvents}\n          height={315}\n          width={600}\n          scale={{x: 'time'}}\n          theme={VictoryTheme.material}\n          containerComponent={\n           <VictoryVoronoiContainer\n             responsive={true}\n             voronoiBlacklist={['parent']}\n             labels={this.createToolTip}\n             labelComponent={\n               <VictoryTooltip\n                 cornerRadius={0}\n                 flyoutStyle={{\n                   fill: \"white\",\n                   stroke: \"#90a4ae\",\n                   strokeWidth: 1.5,\n                 }}\n               />\n             }\n\n           />\n          }\n        >\n          <VictoryLabel\n            text={this.props.title}\n            x={300}\n            y={30}\n            textAnchor=\"middle\"\n            style={{\n              fontSize: 16,\n              fontFamily: \"inherit\",\n            }}\n          />\n          <VictoryAxis\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n            offsetY={80}\n            orientation=\"bottom\"\n          />\n          <VictoryAxis\n            crossAxis={false}\n            dependentAxis\n            domain={this.props.yAxisDomain}\n            tickFormat={(t) => `${t.toFixed(this.props.fixedDecimals)}`}\n            label={this.props.yAxisLabel}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-41}\n                style={{\n                  fontSize: 15,\n                  padding: 10,\n                  fontFamily: \"inherit\",\n                }}\n              />\n            }\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n          />\n          <VictoryLegend\n            x={65}\n            y={270}\n            symbolSpacer={6}\n            itemsPerRow={5}\n            name=\"legend\"\n            borderPadding={{ right: 8 }}\n            orientation=\"horizontal\"\n            cursor=\"pointer\"\n            gutter={15}\n            rowGutter={5}\n            style={{\n              labels: { fontSize: 13 },\n              data: { stroke: \"#485157\", strokeWidth: 0.5, size: 6.5 },\n            }}\n            data={this.state.names.map(this.selectLegendData)}\n          />\n          {Object.keys(this.state.seriesMap).map(this.selectVictoryLines)}\n        </VictoryChart>\n      </Card>\n    );\n  }\n}\n\nexport default Chart;\n","import React from 'react'\n\nimport SvgIcon from '@mui/material/SvgIcon';\n\n\nfunction PioreactorIcon(props) {\n  return (\n    <SvgIcon {...props} >\n        <g id=\"PioreactorIcon1\" stroke=\"none\" strokeWidth=\"1\" fill={props.fillColor || \"none\"} fillRule=\"evenodd\">\n            <g id=\"PioreactorIcon2\" transform=\"translate(-728.000000, -1502.000000)\" stroke=\"currentColor\" strokeWidth=\"1.8\">\n                <g id=\"PioreactorIcon3\" transform=\"translate(729.000000, 1503.000000)\">\n                    <path d=\"M1.4,18.9 L1.4,14.7 L0,14.7 L0,11.2 L2.799,11.2 L2.8,0 L14,0 L13.999,11.2 L16.8,11.2 L16.8,14.7 L15.399,14.7 L15.4,18.9 L1.4,18.9 Z\" id=\"Combined-Shape\"></path>\n                    <circle id=\"Oval\" cx=\"8.4\" cy=\"13.3\" r=\"2.1\"></circle>\n                </g>\n            </g>\n        </g>\n    </SvgIcon>\n  );\n}\n\nexport default PioreactorIcon;\n","import React from 'react'\n\nimport clsx from 'clsx';\n\nexport default  function UnderlineSpan(props){\n  const title = props.title\n\n  return (\n    <span className={clsx({underlineSpan: title ? true : false})} title={title}>\n      {props.children}\n    </span>\n )\n}\n","import React from 'react'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport {Client} from 'paho-mqtt';\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport {withStyles} from '@mui/styles';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport UnderlineSpan from \"./UnderlineSpan\"\n\n\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n});\n\n\n\nclass MediaCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mediaThroughputPerUnit: {},\n        altMediaThroughputPerUnit: {},\n        mediaThroughput: 0,\n        altMediaThroughput: 0,\n        rates: {all: {mediaRate: 0, altMediaRate: 0}},\n        activeUnits: []\n      };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getRecentRates() {\n\n     await fetch(\"/recent_media_rates\")\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(prevState => ({...prevState, rates: data}))\n    });\n    return\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getRecentRates()\n     }\n  }\n\n  componentDidMount() {\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_MediaCard\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_MediaCard\" + Math.random()\n      );\n    }\n\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n    this.setState({activeUnits: Object.entries(this.props.config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0])})\n    this.getRecentRates()\n  }\n\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"dosing_automation\", \"alt_media_throughput\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"dosing_automation\", \"media_throughput\"].join(\"/\"))\n  }\n\n  addOrUpdate(hash, object, value) {\n      if (Object.hasOwnProperty(hash)){\n        object[hash] = value + object[hash]\n      }\n      else{\n        object[hash] = value\n      }\n      return object\n  }\n\n  onMessageArrived(message) {\n    const topic = message.destinationName\n    const topicParts = topic.split(\"/\")\n    const payload = parseFloat(message.payloadString)\n    const unit = topicParts[1]\n    const objectRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughputPerUnit\"  : \"mediaThroughputPerUnit\"\n    const totalRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughput\"  : \"mediaThroughput\"\n\n    this.setState({\n      [objectRef]: this.addOrUpdate(unit, this.state[objectRef], payload)\n    });\n\n    var total = Object.values(this.state[objectRef]).reduce((a, b) => a + b, 0)\n\n    this.setState({\n      [totalRef]: total\n    })\n  }\n\n  renameUnit(unit) {\n    return (this.props.renameMap && this.props.renameMap[unit]) ? this.props.renameMap[unit] : unit\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          <Box fontWeight=\"fontWeightRegular\">\n            Dosing\n          </Box>\n        </Typography>\n       <TableContainer style={{ width: \"100%\"}}>\n          <Table size=\"small\" aria-label=\"media throughput\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{padding: \"6px 0px\"}}></TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Media</TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Alt. Media</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"all\">\n                <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                  All Pioreactors\n                </TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.mediaThroughput.toFixed(1)}mL (~{this.state.rates.all.mediaRate.toFixed(1)}mL/h)</TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.altMediaThroughput.toFixed(1)}mL (~{this.state.rates.all.altMediaRate.toFixed(1)}mL/h)</TableCell>\n              </TableRow>\n\n              {this.state.activeUnits.map((unit) => (\n                <TableRow key={unit}>\n                  <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                      <PioreactorIcon style={{ fontSize: 14, verticalAlign: \"middle\" }} color=\"inherit\"/> <UnderlineSpan title={this.renameUnit(unit) === unit ? null : unit}>{this.renameUnit(unit)}</UnderlineSpan>\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.mediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].mediaRate.toFixed(1) : \"0.0\"}mL/h)</TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.altMediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].altMediaRate.toFixed(1): \"0.0\"}mL/h)</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  )}\n}\n\nexport default  withStyles(useStyles)(MediaCard);\n","import React from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport LogTable from \"./components/LogTable\";\nimport ExperimentSummary from \"./components/ExperimentSummary\";\nimport Chart from \"./components/Chart\";\nimport MediaCard from \"./components/MediaCard\";\nimport PioreactorIcon from './components/PioreactorIcon';\n\n\nfunction Overview(props) {\n\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n  const [renameMap, setRenameMap] = React.useState({})\n\n  React.useEffect(() => {\n    document.title = props.title;\n    function getLatestExperiment() {\n        fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n      function getRenameMap() {\n          fetch(\"/get_current_unit_renames\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setRenameMap(data)\n          });\n        }\n\n      getLatestExperiment()\n      getRenameMap()\n  }, [props.title])\n\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} justifyContent=\"space-between\">\n\n        <Grid item xs={12} md={12}>\n          <ExperimentSummary experimentMetadata={experimentMetadata}/>\n        </Grid>\n\n\n        <Grid item xs={12} md={7} container spacing={2} justifyContent=\"flex-start\" style={{height: \"100%\"}}>\n\n\n          {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['implied_growth_rate'] === \"1\")) &&\n          <Grid item xs={12}>\n            <Chart\n              config={props.config}\n              dataSource=\"growth_rates\"\n              title={props.config['ui.overview.settings']['daily_growth_rate'] === \"1\" ?  \"Implied daily growth rate\" : \"Implied growth rate\"}\n              topic=\"growth_rate_calculating/growth_rate\"\n              payloadKey=\"growth_rate\"\n              yAxisLabel={props.config['ui.overview.settings']['daily_growth_rate'] === \"1\" ? \"Growth rate, d⁻¹\" : \"Growth rate, h⁻¹\"}\n              yTransformation={props.config['ui.overview.settings']['daily_growth_rate'] === \"1\" ? (y) => 24 * y : (y) => y}\n              experiment={experimentMetadata.experiment}\n              deltaHours={experimentMetadata.delta_hours}\n              interpolation=\"stepAfter\"\n              yAxisDomain={props.config['ui.overview.settings']['daily_growth_rate'] === \"1\" ? [-0.1, 1.0] : [-0.02, 0.1]}\n              lookback={100000}\n              fixedDecimals={2}\n              renameMap={renameMap}\n            />\n          </Grid>\n          }\n\n          {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['fraction_of_volume_that_is_alternative_media'] === \"1\")) &&\n          <Grid item xs={12}>\n            <Chart\n              config={props.config}\n              yAxisDomain={[0.00, 0.05]}\n              dataSource=\"alt_media_fraction\"\n              interpolation=\"stepAfter\"\n              payloadKey=\"alt_media_fraction\"\n              title=\"Fraction of volume that is alternative media\"\n              topic=\"alt_media_calculating/alt_media_fraction\"\n              yAxisLabel=\"Fraction\"\n              experiment={experimentMetadata.experiment}\n              deltaHours={1} // hack to make all points display\n              fixedDecimals={3}\n              lookback={100000}\n              renameMap={renameMap}\n\n            />\n          </Grid>\n          }\n\n          {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['normalized_optical_density'] === \"1\")) &&\n          <Grid item xs={12}>\n            <Chart\n              config={props.config}\n              dataSource=\"od_readings_filtered\"\n              title=\"Normalized optical density\"\n              payloadKey=\"od_filtered\"\n              topic=\"growth_rate_calculating/od_filtered\"\n              yAxisLabel=\"Current OD / initial OD\"\n              experiment={experimentMetadata.experiment}\n              deltaHours={experimentMetadata.delta_hours}\n              interpolation=\"stepAfter\"\n              lookback={parseFloat(props.config['ui.overview.settings']['filtered_od_lookback_hours'])}\n              fixedDecimals={2}\n              yAxisDomain={[0.98, 1.02]}\n              renameMap={renameMap}\n\n            />\n          </Grid>\n          }\n\n          {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['raw_optical_density'] === \"1\")) &&\n          <Grid item xs={12}>\n            <Chart\n              config={props.config}\n              isODReading={true}\n              dataSource=\"od_readings_raw\"\n              title=\"Optical density\"\n              payloadKey=\"voltage\"\n              topic=\"od_reading/od_raw/+\"\n              yAxisLabel=\"Voltage\"\n              experiment={experimentMetadata.experiment}\n              deltaHours={experimentMetadata.delta_hours}\n              interpolation=\"stepAfter\"\n              lookback={parseFloat(props.config['ui.overview.settings']['raw_od_lookback_hours'])}\n              fixedDecimals={3}\n              renameMap={renameMap}\n\n            />\n          </Grid>\n         }\n          {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['temperature'] === \"1\")) &&\n          <Grid item xs={12}>\n            <Chart\n              config={props.config}\n              dataSource=\"temperature_readings\"\n              title=\"Temperature of vials\"\n              topic=\"temperature_control/temperature\"\n              yAxisLabel=\"temperature, ℃\"\n              payloadKey=\"temperature\"\n              experiment={experimentMetadata.experiment}\n              interpolation=\"stepAfter\"\n              lookback={10000}\n              deltaHours={1} // hack to display all data points\n              yAxisDomain={[22.5, 37.5]}\n              fixedDecimals={1}\n              renameMap={renameMap}\n\n            />\n          </Grid>\n         }\n        </Grid>\n\n        <Grid item xs={12} md={5} container spacing={1} justifyContent=\"flex-end\" style={{height: \"100%\"}}>\n\n\n          {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['dosings'] === \"1\")) &&\n            <Grid item xs={12} >\n              <MediaCard experiment={experimentMetadata.experiment} config={props.config} renameMap={renameMap}/>\n              <Button href=\"/pioreactors\" color=\"primary\" style={{textTransform: \"none\", verticalAlign: \"middle\", margin: \"0px 3px\"}}> <PioreactorIcon style={{ fontSize: 17 }} color=\"primary\"/> See all Pioreactor details </Button>\n            </Grid>\n          }\n\n\n          {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['event_logs'] === \"1\")) &&\n            <Grid item xs={12}>\n              <LogTable experiment={experimentMetadata.experiment} config={props.config} renameMap={renameMap}/>\n            </Grid>\n          }\n\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\nexport default Overview;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@mui/material/Grid';\n\nimport { makeStyles } from '@mui/styles';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Select from '@mui/material/Select';\nimport Box from '@mui/material/Box';\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  }\n}));\n\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([{experiment: \"<All experiments>\"}])\n\n  React.useEffect(() => {\n    async function getData() {\n       await fetch(\"/get_experiments\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExperiments(prevState => [ ...data, ...prevState])\n        props.handleChange(data[0].experiment)\n      });\n    }\n    getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n\n        <Select\n          native\n          variant=\"standard\"\n          value={props.ExperimentSelection}\n          onChange={handleExperimentSelectionChange}\n          inputProps={{\n            name: 'experiment',\n            id: 'experiment',\n          }}\n        >\n          {experiments.map((v) => {\n            return <option value={v.experiment}>{v.experiment +  (v.timestamp ? ` (started ${moment(v.timestamp).format(\"MMMM D, YYYY\")})` : \"\")}</option>\n            }\n          )}\n        </Select>\n      </FormControl>\n\n    </div>\n  )\n}\n\n\n\nconst CheckboxesGroup = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Datasets</FormLabel>\n        <FormGroup>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.growth_rates} onChange={props.handleChange} name=\"growth_rates\" />}\n            label=\"Implied growth rate\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of the calculated (implied) growth rate. Same data as presented in the \"Implied growth rate\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_raw} onChange={props.handleChange} name=\"od_readings_raw\" />}\n            label=\"Raw optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of raw voltages provided by the senors, the inputs for growth calculations and normalized optical densities. Same data as presented in the \"Raw optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_filtered} onChange={props.handleChange} name=\"od_readings_filtered\" />}\n            label=\"Normalized optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of normalized optical densities. Same data as presented in the \"Normalized optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_readings} onChange={props.handleChange} name=\"temperature_readings\" />}\n            label=\"Temperature readings\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of temperature readings from the Pioreactors. Same data as presented in the \"Temperature of vials\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.experiments} onChange={props.handleChange} name=\"experiments\" />}\n            label=\"Experiment metadata\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The description and other metadata from the experiment.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.alt_media_fractions} onChange={props.handleChange} name=\"alt_media_fractions\" />}\n            label=\"Alternative media fraction\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A time series of how much alternative media is in each Pioreactor. Same data as presented in the \"Fraction of volume that is alternative media\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_events} onChange={props.handleChange} name=\"dosing_events\" />}\n            label=\"Dosing event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all dosing events, including the volume exchanged, and the source of who or what triggered the event.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_automation_settings} onChange={props.handleChange} name=\"dosing_automation_settings\" />}\n            label=\"Dosing automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a dosing automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the dosing automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_events} onChange={props.handleChange} name=\"led_events\" />}\n            label=\"LED event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all LED events, including the channel, intensity, and the source of who or what triggered the event.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_automation_settings} onChange={props.handleChange} name=\"led_automation_settings\" />}\n            label=\"LED automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a LED automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the LED automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_automation_settings} onChange={props.handleChange} name=\"temperature_automation_settings\" />}\n            label=\"Temperature automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a temperature automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the temperature automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.kalman_filter_outputs} onChange={props.handleChange} name=\"kalman_filter_outputs\" />}\n            label=\"Kalman filter outputs\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            An internal Kalman filter produces the normalized optical densities, growth rates, an acceleration term, and variances (and covariances) between the estimates.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.stirring_rates} onChange={props.handleChange} name=\"stirring_rates\" />}\n            label=\"Stirring rates\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The measured RPM of the onboard stirring.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.logs} onChange={props.handleChange} name=\"logs\" />}\n            label=\"Pioreactor logs\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The append-only collection of logs from all Pioreactors. A subset of the these logs are displayed in the Log Table in the Experiment Overview.\n            These are the logs that should be provided to get assistance when troubleshooting, but choose \"&lt;All experiments&gt;\" above.\n          </Typography>\n\n        </FormGroup>\n      </FormControl>\n    </div>\n)}\n\n\nfunction ExportDataContainer() {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [isError, setIsError] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [state, setState] = React.useState({\n    experimentSelection: \"\",\n    datasetCheckbox: {\n      growth_rates: false,\n      dosing_events: false,\n      led_events: false,\n      experiments: false,\n      od_readings_raw: false,\n      od_readings_filtered: false,\n      logs: false,\n      alt_media_fraction: false,\n      dosing_automation_settings: false,\n      led_automation_settings: false,\n      temperature_automation_settings: false,\n      kalman_filter_outputs: false,\n      stirring_rates: false,\n      temperature_readings: false\n    }\n  });\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n\n    if (!Object.values(state['datasetCheckbox']).some((e) => e)) {\n      setIsError(true)\n      setErrorMsg(\"At least one dataset must be selected.\")\n      return\n    }\n\n    setIsRunning(true)\n    fetch('export_datasets',{\n        method: \"POST\",\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => res.json())\n      .then(res => {\n      var link = document.createElement(\"a\");\n      const filename = res['filename'].replace(/%/g, \"%25\")\n      link.setAttribute('export', filename);\n      link.href = \"/static/exports/\" + filename;\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setIsRunning(false)\n    }).catch(e => {\n      setIsRunning(false)\n      setIsError(true)\n      setErrorMsg(\"Server error occurred. Check logs.\")\n    });\n  }\n\n  const handleCheckboxChange = (event) => {\n    setState(prevState => ({\n      ...prevState,\n      datasetCheckbox: {...state.datasetCheckbox, [event.target.name]: event.target.checked }\n    }));\n  };\n\n  function handleExperimentSelectionChange(value) {\n    setState(prevState => ({\n      ...prevState,\n      experimentSelection: value\n    }));\n  };\n\n  const errorFeedbackOrDefault = isError ? <Box color=\"error.main\">{errorMsg}</Box>: \"\"\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Export Experiment Data\n            </Box>\n          </Typography>\n        </div>\n\n      </div>\n      <Card className={classes.root}>\n\n        <CardContent className={classes.cardContent}>\n          <form>\n            <Grid container spacing={0}>\n              <Grid item xs={12} md={12}>\n                <ExperimentSelection\n                experimentSelection={state.experimentSelection}\n                handleChange={handleExperimentSelectionChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <CheckboxesGroup\n                isChecked={state.datasetCheckbox}\n                handleChange={handleCheckboxChange}\n                />\n              </Grid>\n\n              <Grid item xs={0}/>\n              <Grid item xs={12}>\n                <LoadingButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  loading={isRunning}\n                  onClick={onSubmit}\n                  style={{width: \"120px\", marginLeft: 24}}\n                >\n                  Export\n                </LoadingButton>\n                <p style={{marginLeft: 24}}>{errorFeedbackOrDefault}</p>\n\n              </Grid>\n              <Grid item xs={12}>\n                <p style={{textAlign: \"center\", marginTop: \"30px\"}}>💡 Learn more about <a href=\"https://docs.pioreactor.com/user_guide/Exporting%20Data\" target=\"_blank\" rel=\"noopener noreferrer\">data exporting</a>.</p>\n              </Grid>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n  </React.Fragment>\n  )\n}\n\n\nfunction ExportData(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ExportDataContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default ExportData;\n\n","import React, {useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"18ch\",\n  }\n}));\n\n\n\nfunction AutomationForm(props){\n  const classes = useStyles();\n  const defaults = Object.assign({}, ...props.fields.map(field => ({[field.key]: field.default})))\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [props.fields])\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n  var listOfTextField = props.fields.map(field =>\n        <TextField\n          size=\"small\"\n          autoComplete={\"off\"}\n          id={field.key}\n          key={field.key + props.name}\n          label={field.label}\n          defaultValue={field.default}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">{field.unit}</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          onKeyPress={(e) => {e.key === 'Enter' && e.preventDefault();}}\n          className={classes.textFieldCompact}\n        />\n  )\n\n  return (\n    <div>\n        <p> {props.description} </p>\n        {listOfTextField}\n    </div>\n)}\n\n\nexport default AutomationForm;","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\n\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport AutomationForm from \"./AutomationForm\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\n\nconst defaultAutomations = {\n  temperature: \"stable\",\n  dosing: \"chemostat\",\n  led: \"silent\"\n}\n\n\nfunction ChangeAutomationsDialog(props) {\n  const classes = useStyles();\n  const automationType = props.automationType\n  const automationTypeForDisplay = (automationType === \"led\") ? \"LED\" : automationType\n  const [automationName, setAutomationName] = useState(defaultAutomations[automationType])\n  const [algoSettings, setAlgoSettings] = useState({\n    skip_first_run: 0 //TODO: this should be not included if !props.no_skip_first_run\n  })\n  const [client, setClient] = useState(null)\n  const [automations, setAutomations] = useState({})\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n\n  useEffect(() => {\n    function fetchAutomations() {\n      fetch(\"/contrib/automations/\" + automationType)\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfAuto) => {\n          setAutomations(Object.assign({}, ...listOfAuto.map(auto => ({ [auto.automation_name]: auto}))))\n        })\n        .catch((error) => {})\n    }\n    fetchAutomations();\n  }, [automationType])\n\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['network.topology']){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeDialog\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeDialog\" + Math.random()\n      );\n    }\n\n    client.connect({timeout: 180});\n    setClient(client)\n  },[props.config])\n\n\n  const handleClose = () => {\n    props.onFinished();\n  };\n\n  const handleSkipFirstRunChange = (e) => {\n    setAlgoSettings({...algoSettings, skip_first_run: e.target.checked ? 1 : 0})\n  }\n\n  const handleAlgoSelectionChange = (e) => {\n    setAutomationName(e.target.value)\n    setAlgoSettings({\n        ...( !props.no_skip_first_run && {skip_first_run: algoSettings.skip_first_run})\n    })\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const startJob = (event) => {\n    event.preventDefault()\n    fetch(`/run/${automationType}_control/${props.unit}`, {\n      method: \"POST\",\n      body: JSON.stringify({\"automation_name\": automationName, ...algoSettings}),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    setOpenSnackbar(true);\n    handleClose()\n  }\n\n  const changeAutomation = (event) => {\n    event.preventDefault()\n    var message = new Message(JSON.stringify({\"automation_name\": automationName, \"type\": automationType, \"args\": algoSettings}),);\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      `${automationType}_control`,\n      \"automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n      setOpenSnackbar(true);\n    }\n    catch (e){\n      console.log(e)\n    }\n    handleClose();\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <React.Fragment>\n    <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/>\n            {(props.unit === \"$broadcast\")\n              ? <b>All active Pioreactors</b>\n              :((props.title || props.rename)\n                  ? ` ${props.rename} / ${props.unit}`\n                  : `${props.unit}`\n              )\n            }\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Select {automationTypeForDisplay} automation\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          <span style={{textTransform: \"capitalize\"}}>{automationTypeForDisplay}</span> automations control the {automationTypeForDisplay} of the Pioreactor's vial. The settings below can be changed later. Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://docs.pioreactor.com/user_guide/Automations/\" + automationTypeForDisplay + \"%20Automations\"}>{automationTypeForDisplay} automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Automation</FormLabel>\n            <Select\n              native\n              variant=\"standard\"\n              value={automationName}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {Object.keys(automations).map((key) => <option id={key} value={key} key={\"change-io\" + key}>{automations[key].display_name}</option>)}\n\n            </Select>\n            {Object.keys(automations).length > 0 && <AutomationForm fields={automations[automationName].fields} description={automations[automationName].description} updateParent={updateFromChild} name={automationName}/>}\n\n            {!props.no_skip_first_run ?\n            <FormControlLabel\n              control={<Checkbox checked={Boolean(algoSettings.skip_first_run)}\n                                  color=\"primary\"\n                                  onChange={handleSkipFirstRunChange}\n                                  size=\"small\"/>\n                      }\n              label=\"Skip first run\"\n            />\n            : <React.Fragment/> }\n\n          </FormControl>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.isJobRunning ? changeAutomation :  startJob}\n        >\n          Start\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={handleClose}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={`Starting ${automationTypeForDisplay} automation ${automations[automationName]?.display_name}.`}\n      autoHideDuration={7000}\n      key={\"snackbar-change-\" + automationType}\n    />\n    </React.Fragment>\n  );}\n\n\nexport default ChangeAutomationsDialog;\n","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"175px\",\n  },\n  actionForm: {\n    padding: \"20px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"Removing waste\",\n  \"add_media\": \"Adding media\",\n  \"add_alt_media\": \"Adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [mL, setML] = useState(EMPTYSTATE);\n  const [duration, setDuration] = useState(EMPTYSTATE);\n  const [isMLDisabled, setIsMLDisabled] = useState(false);\n  const [isDurationDisabled, setIsDurationDisabled] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState(\"\");\n  const [textfieldError, setTextfieldError] = useState(false);\n  const [clicked, setClicked] = useState(false)\n\n  const [formErrorDuration, setFormErrorDuration] = useState(false)\n  const [formErrorML, setFormErrorML] = useState(false)\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (mL !== EMPTYSTATE || duration !== EMPTYSTATE) {\n      setClicked(true)\n      const params = mL !== \"\" ? { ml: mL, source_of_event: \"UI\"} : { duration: duration, source_of_event: \"UI\"};\n      fetch(`/run/${props.action}/${props.unit}`, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      setSnackbarMsg(actionToAct[props.action] + (duration !== EMPTYSTATE ? (\" for \" +  duration + \" seconds.\") : (\" until \" + mL + \"mL is reached.\")))\n      setOpenSnackbar(true);\n      setTimeout(() => setClicked(false), 2500)\n    }\n    else {\n      setTextfieldError(true)\n    }\n\n  }\n\n  function stopPump(e) {\n    fetch(`/stop/${props.action}/${props.unit}`, {method: \"POST\"})\n  }\n\n  function runPumpContinuously(e) {\n    fetch(`/run/${props.action}/${props.unit}`, {\n      method: \"POST\",\n      body: JSON.stringify({continuously: true, source_of_event: \"UI\"}),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    setSnackbarMsg(\"Running pump continuously\")\n    setOpenSnackbar(true)\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  function handleMLChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setIsDurationDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsDurationDisabled(false);\n    }\n\n    setML(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorML(false)\n    }\n    else {\n      setFormErrorML(true)\n    }\n  }\n\n  function handleDurationChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setIsMLDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsMLDisabled(false);\n    }\n\n    setDuration(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorDuration(false)\n    }\n    else {\n      setFormErrorDuration(true)\n    }\n  }\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"mL\"\n        autoComplete={\"off\"}\n        error={formErrorML || textfieldError}\n        value={mL}\n        size=\"small\"\n        id={props.action + \"_mL\"}\n        label=\"mL\"\n        variant=\"outlined\"\n        disabled={isMLDisabled}\n        onChange={handleMLChange}\n        className={classes.actionTextField}\n      />\n      <TextField\n        name=\"duration\"\n        autoComplete={\"off\"}\n        value={duration}\n        error={formErrorDuration || textfieldError}\n        size=\"small\"\n        id={props.action + \"_duration\"}\n        label=\"seconds\"\n        variant=\"outlined\"\n        disabled={isDurationDisabled}\n        onChange={handleDurationChange}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n        <LoadingButton\n          loading={clicked && (props?.job?.state === \"disconnected\")}\n          disabled={formErrorML || formErrorDuration || (props?.job?.state === \"ready\")}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n        >\n          {props.action.replace(/_/g, \" \")}\n        </LoadingButton>\n        <div>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            disabled={(props?.job?.state === \"ready\")}\n            onClick={runPumpContinuously}\n          >\n            Run continuously\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            onClick={stopPump}\n          >\n            Interrupt\n          </Button>\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={snackbarMsg}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.action}\n      />\n    </form>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport InputAdornment from '@mui/material/InputAdornment';\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"160px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\n\nexport default function ActionLEDForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [intensity, setIntensity] = useState(EMPTYSTATE);\n  const [errorForm, setErrorForm] = useState(false);\n\n  function onSubmit(e) {\n    const re = /^[0-9.\\b]+$/;\n    e.preventDefault();\n    if (intensity !== EMPTYSTATE && re.test(intensity)) {\n      setErrorForm(false)\n      setOpenSnackbar(true);\n\n      const params = { [props.channel]: parseFloat(intensity), source_of_event: \"UI\"}\n\n      fetch(`/run/led_intensity/${props.unit}`, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n    } else {\n      setErrorForm(true)\n    }\n  }\n\n\n  function handleChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setIntensity(e.target.value);\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setErrorForm(false)\n    } else {\n      setErrorForm(true)\n    }\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        error={errorForm}\n        name=\"intensity\"\n        autoComplete=\"off\"\n        value={intensity}\n        size=\"small\"\n        id={props.channel + \"_intensity_edit\"}\n        label=\"new intensity\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n        }}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n      Submit\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={`Updating channel ${props.channel} to ${intensity}%.`}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.channel}\n      />\n    </form>\n  );\n}","import clsx from 'clsx';\nimport { Client, Message } from \"paho-mqtt\";\n\nimport React, {useState, useEffect} from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from \"@mui/material\";\n\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Snackbar from '@mui/material/Snackbar';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Button from \"@mui/material/Button\";\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport FlareIcon from '@mui/icons-material/Flare';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\nimport IndeterminateCheckBoxIcon from '@mui/icons-material/IndeterminateCheckBox';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport IndeterminateCheckBoxOutlinedIcon from '@mui/icons-material/IndeterminateCheckBoxOutlined';\n\nimport ChangeAutomationsDialog from \"./components/ChangeAutomationsDialog\"\nimport ActionDosingForm from \"./components/ActionDosingForm\"\nimport ActionLEDForm from \"./components/ActionLEDForm\"\nimport PioreactorIcon from \"./components/PioreactorIcon\"\nimport UnderlineSpan from \"./components/UnderlineSpan\";\n\nconst readyGreen = \"#4caf50\"\nconst disconnectedGrey = \"grey\"\nconst lostRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  pioreactorCard: {\n    marginTop: \"0px\",\n    marginBottom: \"20px\",\n  },\n  cardContent: {\n    padding: \"10px 20px 20px 20px\"\n  },\n  unitTitle: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontWeight: 500,\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  disabledText: {\n    color: \"rgba(0, 0, 0, 0.38)\",\n  },\n  textbox:{\n    width: \"127px\",\n    marginTop: \"10px\"\n  },\n  textboxLabel:{\n    width: \"100px\",\n    marginTop: \"10px\",\n    marginRight: \"5px\"\n  },\n  footnote: {\n    marginBottom: 0,\n    fontSize: 12,\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldWide: {\n    marginTop: \"15px\",\n    maxWidth: \"220px\",\n  },\n  textFieldCompact: {\n    marginTop: \"15px\",\n    width: \"120px\",\n  },\n  slider: {\n    width: \"70%\",\n    margin: \"40px auto 0px auto\",\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  jobButton: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\"\n  },\n  unitSettingsSubtext:{\n    fontSize: \"11px\"\n  },\n  unitSettingsSubtextEmpty:{\n    minHeight: \"15px\"\n  },\n  ledBlock:{\n    width: \"55px\",\n    display: \"inline-block\"\n  },\n  rowOfUnitSettingDisplay:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n  },\n  testingListItemIcon: {\n    minWidth: \"30px\"\n  },\n  testingListItem : {\n    paddingTop: \"0px\",\n    paddingBottom: \"0px\",\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  cardHeaderSettings:{\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down('md')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  cardHeaderButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    [theme.breakpoints.down('md')]: {\n      justifyContent: \"space-between\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"}\n}));\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      key={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\nfunction UnitSettingDisplaySubtext(props){\n  const classes = useStyles();\n\n  if (props.subtext){\n    return <div className={classes.unitSettingsSubtext}><code>{props.subtext}</code></div>\n  }\n  else{\n    return <div className={classes.unitSettingsSubtextEmpty}></div>\n  };\n}\n\n\nfunction UnitSettingDisplay(props) {\n  const classes = useStyles();\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n  const value = props.value === null ?  \"\"  : props.value\n\n  function prettyPrint(x){\n    if (x >= 10){\n      return x.toFixed(0)\n    }\n    else if (x===0){\n      return \"0\"\n    }\n    else if (x < 1){\n      return `<1`\n    } else {\n      return (x).toFixed(1).replace(/[.,]0$/, \"\");\n    }\n  }\n\n  if (props.isStateSetting) {\n    if (!props.isUnitActive) {\n      return <div className={clsx({[classes.disabledText]: !props.isUnitActive})}> {stateDisplay[value].display} </div>;\n    } else {\n      var displaySettings = stateDisplay[value]\n      return (\n        <React.Fragment>\n          <div style={{ color: displaySettings.color, fontWeight: 500}}>\n            {displaySettings.display}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n    )}\n  } else if (props.isLEDIntensity) {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      const ledIntensities = JSON.parse(value)\n        // the | {} is here to protect against the UI loading from a broken config.\n      const LEDMap = props.config['leds']\n      const renamedA = (LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \")) : null\n      const renamedB = (LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \")) : null\n      const renamedC = (LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \")) : null\n      const renamedD = (LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \")) : null\n\n      return(\n        <React.Fragment>\n          <div style={{fontSize: \"13px\"}}>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedA ? renamedA : null}>A</UnderlineSpan>: {prettyPrint(ledIntensities[\"A\"])}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedB ? renamedB : null}>B</UnderlineSpan>: {prettyPrint(ledIntensities[\"B\"])}%\n              </span>\n            </div>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedC ? renamedC : null}>C</UnderlineSpan>: {prettyPrint(ledIntensities[\"C\"])}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedD ? renamedD : null}>D</UnderlineSpan>: {prettyPrint(ledIntensities[\"D\"])}%\n              </span>\n            </div>\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      )\n    }\n  } else {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return (\n        <React.Fragment>\n          <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div style={{ fontSize: \"13px\"}}>\n            {(typeof value === \"string\"\n              ? value\n              : +value.toFixed(props.precision)) + \" \" +\n              (props.measurementUnit ? props.measurementUnit : \"\")}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\n\n\nfunction ButtonConfirmStopProcessDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n    fetch(\"/stop_all\", {method: \"POST\"})\n    handleClose()\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"secondary\" onClick={handleClickOpen}>\n        <ClearIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Stop all activity\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\"Stop all Pioreactor activity?\"</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will stop all activies (stirring, dosing, optical density reading, etc.) in <b>all</b> Pioreactor units. Do you wish to stop all activities?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction AddNewPioreactor(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [expectedPathMsg, setExpectedPathMsg] = React.useState(\"\")\n  const [isError, setIsError] = React.useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  const handleNameChange = evt => {\n    setName(evt.target.value)\n  }\n\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n    if (!name) {\n      setIsError(true)\n      setErrorMsg(\"Provide the hostname for the new Pioreactor worker\")\n      return\n    }\n    setIsError(false)\n    setIsRunning(true)\n    setExpectedPathMsg(\"Installation is occurring in the background. You may navigate away from this page, including adding more Pioreactors.\")\n    fetch('add_new_pioreactor', {\n        method: \"POST\",\n        body: JSON.stringify({newPioreactorName: name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    })\n    .then(response => {\n        setIsRunning(false)\n        if(!response.ok){\n          setIsError(true)\n          response.json().then(data => setErrorMsg(`🔴 Unable to complete installation. ${data.msg}`))\n        } else {\n          setExpectedPathMsg(`🟢 Success! Refresh the page to see ${name}.`)\n        }\n    })\n  }\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"inherit\" size={24}/> : \"Add Pioreactor\"\n\n  return (\n    <React.Fragment>\n    <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n      <AddIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Add new Pioreactor\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        Add new Pioreactor\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n      <p>Follow the instructions to <a href=\"https://docs.pioreactor.com/user_guide/Raspberry%20Pi%20set%20up%20and%20software%20installation#adding-workers-to-your-cluster\">set up your Pioreactor's Raspberry Pi</a>.</p>\n\n      <p>Below, provide the hostname you used when installing the Pioreactor image onto the Raspberry Pi.\n      Your existing Pioreactors will automatically connect it to the cluster.\n      When finished, the new Pioreactor will show up on this page.</p>\n\n\n      <div>\n        <TextField\n          required\n          size=\"small\"\n          id=\"new-pioreactor-name\"\n          label=\"Provide hostname\"\n          variant=\"outlined\"\n          className={classes.textFieldWide}\n          onChange={handleNameChange}\n          value={name}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <PioreactorIcon style={{fontSize: \"1.1em\"}}/>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n\n      <div style={{minHeight: \"50px\"}}>\n        {isError? <p><Box color=\"error.main\">{errorMsg}</Box></p> : <p></p>}\n        {isRunning? <p>{expectedPathMsg}</p> : <p> </p>}\n      </div>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{marginTop: \"15px\"}}\n        onClick={onSubmit}\n        type=\"submit\"\n      >\n        {runningFeedback}\n      </Button>\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={`Adding new Pioreactor ${name}`}\n      autoHideDuration={7000}\n      key=\"snackbar-add-new\"\n    />\n    </React.Fragment>\n  );}\n\n\n\nfunction PioreactorHeader(props) {\n  const classes = useStyles()\n  return (\n    <div>\n      <div className={classes.headerMenu}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Pioreactors\n          </Box>\n        </Typography>\n        <div className={classes.headerButtons}>\n          <ButtonConfirmStopProcessDialog/>\n          <AddNewPioreactor config={props.config}/>\n          <SettingsActionsDialogAll config={props.config} experiment={props.experiment}/>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  )\n}\n\n\n\nfunction PatientButton(props) {\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  useEffect(\n    () => {\n      setButtonText(props.buttonText)\n    }\n  , [props.buttonText])\n\n  function wrappingOnClick() {\n    function f() {\n      setButtonText(<CircularProgress color=\"inherit\" size={21}/>)\n      props.onClick()\n    }\n    return f\n  }\n\n  return (\n    <Button\n      disableElevation\n      style={{width: \"70px\", marginTop: \"5px\", height: \"31px\"}}\n      color={props.color}\n      variant={props.variant}\n      disabled={props.disabled}\n      size=\"small\"\n      onClick={wrappingOnClick()}\n    >\n      {buttonText}\n    </Button>\n  )\n}\n\nfunction CalibrateDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [tabValue, setTabValue] = React.useState(0);\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n  };\n\n\n  function startPioreactorJob(job){\n    return function() {\n      fetch(\"/run/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {\n      })\n    }\n  }\n\n  function clearBlank() {\n    return function() {\n      var message = new Message(\"\");\n      message.retained = true\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        props.experiment,\n        \"od_blank\",\n        \"mean\",\n      ].join(\"/\");\n      props.client.publish(message);\n    }\n  }\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"ready\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                buttonText=\"Running\"\n                disabled={true}\n               />\n              </div>)\n      default:\n        return(<div></div>)\n    }\n   }\n\n  const blankODButton = createUserButtonsBasedOnState(props.odBlankJobState, \"od_blank\")\n  const stirringCalibrationButton = createUserButtonsBasedOnState(props.stirringCalibrationState, \"stirring_calibration\")\n\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"primary\" disabled={props.disabled} onClick={handleClickOpen}>\n        <TuneIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> Calibrate\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle>\n          <Typography className={classes.suptitle}>\n            <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {(props.rename) ? `${props.rename} / ${props.unit}` : `${props.unit}`}\n          </Typography>\n          <Tabs\n            value={tabValue}\n            onChange={handleTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            >\n            <Tab label=\"Blanks\"/>\n            <Tab label=\"Stirring\"/>\n            <Tab label=\"Dosing\" disabled={true}/>\n          </Tabs>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n            size=\"large\">\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <TabPanel value={tabValue} index={0}>\n            <Typography  gutterBottom>\n             Record optical densities of blank (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              For more accurate growth rate and biomass inferences, you can subtract out the\n              media's optical density per sensor. Read more about <a href=\"\">using blanks</a>.\n            </Typography>\n\n            {blankODButton}\n\n            <Typography variant=\"body2\" component=\"p\" style={{marginTop: \"20px\"}}>\n              Recorded optical densities of blank vial: <code>{props.odBlankReading ? Object.entries(JSON.parse(props.odBlankReading)).map( ([k, v]) => `${k}:${v.toFixed(4)}` ).join(\", \") : \"—\"}</code> <Button color=\"primary\" size=\"small\" disabled={!props.odBlankReading} onClick={clearBlank()}>Clear</Button>\n            </Typography>\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n          <TabPanel value={tabValue} index={1}>\n            <Typography  gutterBottom>\n             Stirring calibration (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              You can improve the responsiveness of stirring RPM changes by running the below calibration. This calibration is\n              optional, and stirring RPM changes can still occur without running this calibration.\n            </Typography>\n\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Add a vial, with a stirbar and ~15ml water, to the Pioreactor, then hit Start below. This calibration will take less than three minutes.\n            </Typography>\n\n            {stirringCalibrationButton}\n\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n        </DialogContent>\n      </Dialog>\n  </React.Fragment>\n  );\n}\n\n\n\nfunction SelfTestDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function startPioreactorJob(job){\n    return function() {\n      fetch(\"/run/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {\n      })\n    }\n  }\n\n  function displayIcon(key, state){\n    if (props.selfTestTests == null){\n      return <IndeterminateCheckBoxIcon />\n    }\n    else if (props.selfTestTests[key].value === 1){\n      return <CheckIcon style={{color: readyGreen}}/>\n    }\n    else if (props.selfTestTests[key].value === 0){\n      return <CloseIcon style={{color: lostRed}}/>\n    }\n    else if (state === \"ready\") {\n      return <CircularProgress size={20} />\n    }\n    else {\n      return <IndeterminateCheckBoxIcon />\n    }\n  }\n\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"ready\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={true}\n                buttonText=\"Running\"\n               />\n              </div>)\n      default:\n        return(<div></div>)\n    }\n  }\n\n  function colorOfIcon(){\n    return props.disabled ? \"disabled\" : \"primary\"\n  }\n\n  function Icon(){\n    if (props.selfTestTests == null){\n      return <IndeterminateCheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/>\n    }\n    else {\n      return props.selfTestTests[\"all_tests_passed\"].value ? <CheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/> : <IndeterminateCheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/>\n    }\n  }\n\n  const selfTestButton = createUserButtonsBasedOnState(props.selfTestState, \"self_test\")\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"primary\" disabled={props.disabled} onClick={handleClickOpen}>\n        {Icon()} Self test\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>\n          <Typography className={classes.suptitle} gutterBottom>\n            <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.rename ? `${props.rename} / ${props.unit}` : `${props.unit}`}\n          </Typography>\n           Self test\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n            size=\"large\">\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Perform a check of the heating & temperature sensor, LEDs & photodiodes, and stirring.\n          </Typography>\n\n            {selfTestButton}\n            <Divider className={classes.divider} />\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"35px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  LEDs & photodiodes\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_pioreactor_hat_present\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Pioreactor HAT is detected\" />\n              </ListItem>\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_all_positive_correlations_between_pds_and_leds\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Photodiodes are responsive to IR LED\" secondary={\n                    props.selfTestTests ?\n                      JSON.parse(props.selfTestTests[\"correlations_between_pds_and_leds\"].value).map(led_pd => `${led_pd[0]} ⇝ ${led_pd[1]}`).join(\",  \") :\n                      \"\"\n                    }/>\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_ambient_light_interference\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"No ambient IR light detected\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_REF_is_lower_than_0_dot_256_volts\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Reference photodiode is correct magnitude\" />\n              </ListItem>\n            </List>\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"35px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  Heating & temperature\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_detect_heating_pcb\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Heating PCB is detected\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_positive_correlation_between_temp_and_heating\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Heating is responsive\" />\n              </ListItem>\n            </List>\n\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"35px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  Stirring\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_positive_correlation_between_rpm_and_stirring\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Stirring RPM is responsive\" />\n              </ListItem>\n            </List>\n\n          <Divider className={classes.divider} />\n        </DialogContent>\n      </Dialog>\n  </React.Fragment>\n  );\n}\n\n\n\n\n\n\nfunction SettingsActionsDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n  const [openChangeDosingDialog, setOpenChangeDosingDialog] = React.useState(false);\n  const [openChangeLEDDialog, setOpenChangeLEDDialog] = React.useState(false);\n  const [openChangeTemperatureDialog, setOpenChangeTemperatureDialog] = React.useState(false);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n\n  function setPioreactorJobState(job, state) {\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, state)\n    };\n  }\n\n  function startPioreactorJob(job){\n    return function() {\n      fetch(\"/run/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {\n      })\n    }\n  }\n\n  function stopPioreactorJob(job){\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, \"disconnected\")\n      //fetch(\"/stop/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {})\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      props.client.publish(message);\n    }\n    catch (e) {\n      console.log(e)\n      props.client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(measurementUnit) {\n    return function(e) {\n      if ((e.key === \"Enter\") && (e.target.value)) {\n        setPioreactorJobAttr(e.target.id, e.target.value);\n        setSnackbarMessage(`Updating to ${e.target.value} ${measurementUnit}.`)\n        setSnackbarOpen(true)\n      }\n    }\n  }\n\n  function updateRenameUnit(e) {\n    if ((e.key === \"Enter\") && (e.target.value)) {\n      const renamedTo = e.target.value\n      setSnackbarMessage(`Updating to ${renamedTo}`)\n      setSnackbarOpen(true)\n      fetch('/update_unit_renames',{\n          method: \"POST\",\n          body: JSON.stringify({renamedTo: renamedTo, experiment: props.experiment , unit: props.unit}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => setTimeout(() => window.location.reload(), 360))\n    }\n  }\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  function createUserButtonsBasedOnState(jobState, job){\n    switch (jobState){\n      case \"lost\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n            buttonText=\"Start\"\n          />\n        </div>)\n      case \"disconnected\":\n       return (<div key={\"patient_buttons_\" + job}>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"init\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>(false)}\n            buttonText=<CircularProgress color=\"inherit\" size={22}/>\n            disabled={true}\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={stopPioreactorJob(job)}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"ready\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={setPioreactorJobState(job, \"sleeping\")}\n            buttonText=\"Pause\"\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={stopPioreactorJob(job)}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"sleeping\":\n        return (\n          <div key={\"patient_buttons_\" + job}>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"ready\")}\n              buttonText=\"Resume\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={stopPioreactorJob(job)}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      default:\n        return(<div key={\"patient_buttons_\" + job}></div>)\n    }\n   }\n  const LEDMap = props.config['leds']\n  const buttons = Object.fromEntries(Object.entries(props.jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job.state, job_key)]))\n\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n\n  const isLargeScreen = useMediaQuery(theme => theme.breakpoints.down('xl'));\n  var dosingControlJob = props.jobs.dosing_control\n  var dosingControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(dosingControlJob?.state)\n\n  var ledControlJob = props.jobs.led_control\n  var ledControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(ledControlJob?.state)\n\n  var temperatureControlJob = props.jobs.temperature_control\n  var temperatureControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(temperatureControlJob?.state)\n\n  return (\n    <div>\n    <Button style={{textTransform: 'none', float: \"right\" }} disabled={props.disabled} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> Manage\n    </Button>\n    <Dialog maxWidth={isLargeScreen ? \"sm\" : \"md\"} fullWidth={true} open={open} onClose={handleClose}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/>\n          <span> {props.rename ? `${props.rename} / ${props.unit}` : `${props.unit}`} </span>\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons\n        allowScrollButtonsMobile\n        >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n        <TabPanel value={tabValue} index={0}>\n          {/* Unit Specific Activites */}\n          {Object.entries(props.jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .filter(([job_key, job]) => !['dosing_control', 'led_control', 'temperature_control'].includes(job_key))\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n                <Typography display=\"block\">\n                  {job.metadata.name}\n                </Typography>\n                <Typography display=\"block\" gutterBottom>\n                  <span style={{color:stateDisplay[job.state].color}}>{stateDisplay[job.state].display}</span>\n                </Typography>\n              </div>\n              <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n                {job.metadata.source !== \"app\" ? `Installed by ${job.metadata.source}` : \"\"}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider className={classes.divider} />\n            </div>\n          )}\n\n\n          {/* Unit Specific Automations */}\n          {temperatureControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Temperature automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[temperatureControlJob.state].color}}>{stateDisplay[temperatureControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={temperatureControlJob.metadata.key}>\n              {(temperatureControlJob.state === \"ready\") || (temperatureControlJob.state === \"sleeping\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running LED automation <code>{temperatureControlJob.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user_guide/Automations/LED%20Automations\">LED automations</a>.\n                </Typography>\n                {buttons[temperatureControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: temperatureControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  style={{width: \"70px\", marginTop: \"5px\"}}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeTemperatureDialog(true)}\n                >\n                  Start\n                </Button>\n\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeTemperatureDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!temperatureControlJobRunning}\n            >\n              Change temperature automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              open={openChangeTemperatureDialog}\n              onFinished={() => setOpenChangeTemperatureDialog(false)}\n              unit={props.unit}\n              rename={props.rename}\n              config={props.config}\n              experiment={props.experiment}\n              isJobRunning={temperatureControlJobRunning}\n              automationType=\"temperature\"\n              no_skip_first_run={true}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n          {dosingControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Dosing automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[dosingControlJob.state].color}}>{stateDisplay[dosingControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={dosingControlJob.metadata.key}>\n              {(dosingControlJob.state === \"ready\") || (dosingControlJob.state === \"sleeping\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running dosing automation <code>{dosingControlJob.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user_guide/Automations/Dosing%20Automations\">dosing automations</a>.\n                </Typography>\n                {buttons[dosingControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: dosingControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  style={{width: \"70px\", marginTop: \"5px\"}}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeDosingDialog(true)}\n                >\n                  Start\n                </Button>\n\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeDosingDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!dosingControlJobRunning}\n            >\n              Change dosing automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"dosing\"\n              open={openChangeDosingDialog}\n              onFinished={() => setOpenChangeDosingDialog(false)}\n              unit={props.unit}\n              rename={props.rename}\n              config={props.config}\n              experiment={props.experiment}\n              isJobRunning={dosingControlJobRunning}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n          {ledControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                LED automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[ledControlJob.state].color}}>{stateDisplay[ledControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={ledControlJob.metadata.key}>\n              {(ledControlJob.state === \"ready\") || (ledControlJob.state === \"sleeping\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running LED automation <code>{ledControlJob.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user_guide/Automations/LED%20Automations\">LED automations</a>.\n                </Typography>\n                {buttons[ledControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: ledControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  style={{width: \"70px\", marginTop: \"5px\"}}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeLEDDialog(true)}\n                >\n                  Start\n                </Button>\n\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeLEDDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!ledControlJobRunning}\n            >\n              Change LED automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"led\"\n              open={openChangeLEDDialog}\n              onFinished={() => setOpenChangeLEDDialog(false)}\n              unit={props.unit}\n              config={props.config}\n              rename={props.rename}\n              experiment={props.experiment}\n              isJobRunning={ledControlJobRunning}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n        </TabPanel>\n\n\n        <TabPanel value={tabValue} index={1}>\n          <Typography  gutterBottom>\n            Assign label to Pioreactor\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Temporarily assign a label to this Pioreactor for the duration of the experiment. The new label will display in the graph legends, and throughout the interface.\n          </Typography>\n          <TextField\n            size=\"small\"\n            autoComplete=\"off\"\n            defaultValue={props.rename}\n            variant=\"outlined\"\n            className={classes.textFieldWide}\n            onKeyPress={updateRenameUnit}\n            InputProps={{\n                autoComplete: 'new-password',\n            }}\n          />\n          <Divider className={classes.divider} />\n\n\n          {Object.values(props.jobs)\n            .filter(job => job.metadata.display)\n            .map(job =>\n            Object.entries(job)\n              .filter(([key, setting]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <React.Fragment key={key}>\n              <Typography  gutterBottom>\n                {setting.label}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {setting.description}\n              </Typography>\n              <TextField\n                size=\"small\"\n                autoComplete=\"off\"\n                id={`${job.metadata.key.replace(\"_control\", \"_automation\")}/${key}`}\n                defaultValue={setting.value}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">{setting.unit}</InputAdornment>,\n                  autoComplete: 'new-password',\n                }}\n                variant=\"outlined\"\n                onKeyPress={setPioreactorJobAttrOnEnter(setting.unit)}\n                className={classes.textFieldCompact}\n              />\n              <Divider className={classes.divider} />\n            </React.Fragment>\n\n          ))}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pump for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={props.unit} job={props.jobs.add_media} />\n          <Divider classes={{root: classes.divider}} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pump for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={props.unit} job={props.jobs.remove_waste} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pump for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={props.unit} job={props.jobs.add_alt_media} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['A']) ? \"Channel A\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel A\" }\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['B']) ? \"Channel B\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel B\" }\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['C']) ? \"Channel C\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel C\" }\n          </Typography>\n\n          <ActionLEDForm channel=\"C\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['D']) ? \"Channel D\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel D\" }\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </div>\n  );\n}\n\n\nfunction SettingsActionsDialogAll({config, experiment}) {\n\n  const classes = useStyles();\n  const unit = \"$broadcast\"\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n  const [jobs, setJobs] = React.useState({});\n  const [openChangeTemperatureDialog, setOpenChangeTemperatureDialog] = React.useState(false);\n  const [openChangeDosingDialog, setOpenChangeDosingDialog] = React.useState(false);\n  const [openChangeLEDDialog, setOpenChangeLEDDialog] = React.useState(false);\n\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/contrib/jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {state: \"disconnected\", metadata: {name: job.name, subtext: job.subtext, display: job.display, description: job.description, key: job.job_name, source:job.source}}\n            for(var i = 0; i < job[\"editable_settings\"].length; ++i){\n              var field = job[\"editable_settings\"][i]\n              metaData_[field.key] = {value: field.default, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n\n  useEffect(() => {\n    if (!config['network.topology']){\n      return\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `ws://${config.remote.ws_url}/`,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${config['network.topology']['leader_address']}`, 9001,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      );\n    }\n    client.connect({timeout: 180, reconnect: true});\n    setClient(client)\n  },[config])\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        unit,\n        experiment,\n        job.metadata.key,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 750)\n      }\n      finally {\n        const verbs = {\n          \"sleeping\":  \"Pausing\",\n          \"disconnected\":  \"Stopping\",\n          \"ready\":  \"Resuming\",\n        }\n        setSnackbarMessage(`${verbs[state]} ${job.metadata.name.toLowerCase()} on all active Pioreactors`)\n        setSnackbarOpen(true)\n      }\n    };\n  }\n\n  function startPioreactorJob(job){\n    return function() {\n      setSnackbarMessage(`Starting ${job.metadata.name.toLowerCase()} on all active Pioreactors`)\n      setSnackbarOpen(true)\n      fetch(\"/run/\" + job.metadata.key + \"/\" + unit, {method: \"POST\"})\n    }\n  }\n\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      unit,\n      experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      client.publish(message);\n      setSnackbarOpen(true)\n    }\n    catch (e) {\n      console.log(e)\n      client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(measurementUnit) {\n    return function(e) {\n      if ((e.key === \"Enter\") && (e.target.value)) {\n        setPioreactorJobAttr(e.target.id, e.target.value);\n        setSnackbarMessage(`Updating to ${e.target.value} ${measurementUnit}.`)\n        setSnackbarOpen(true)\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(job){\n    return (<div key={job.key}>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={startPioreactorJob(job)}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"sleeping\")}\n        >\n          Pause\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"ready\")}\n        >\n          Resume\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"secondary\"\n          onClick={setPioreactorJobState(job, \"disconnected\")}\n        >\n          Stop\n        </Button>\n      </div>\n  )}\n\n\n  const buttons = Object.fromEntries(Object.entries(jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job)]))\n  const isLargeScreen = useMediaQuery(theme => theme.breakpoints.down('xl'));\n  var dosingControlJob = jobs.dosing_control\n  var ledControlJob = jobs.led_control\n  var temperatureControlJob = jobs.temperature_control\n\n  return (\n    <React.Fragment>\n    <Button style={{textTransform: 'none', float: \"right\" }} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Manage all Pioreactors\n    </Button>\n    <Dialog  maxWidth={isLargeScreen ? \"sm\" : \"md\"} fullWidth={true}  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle style={{backgroundImage: \"linear-gradient(to bottom left, rgba(83, 49, 202, 0.4), rgba(0,0,0,0))\"}}>\n        <Typography className={classes.suptitle}>\n          <b>All active Pioreactors</b>\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[600],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons\n        allowScrollButtonsMobile\n      >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n\n        <TabPanel value={tabValue} index={0}>\n          {Object.entries(jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .filter(([job_key, job]) => !['dosing_control', 'led_control', 'temperature_control'].includes(job_key))\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <Typography gutterBottom>\n                {job.metadata.name}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider classes={{root: classes.divider}} />\n            </div>\n          )}\n\n\n          {temperatureControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Temperature automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: temperatureControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['temperature_control']}\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeTemperatureDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n            >\n              Change temperature automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              open={openChangeTemperatureDialog}\n              onFinished={() => setOpenChangeTemperatureDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={true}\n              automationType=\"temperature\"\n              no_skip_first_run={true}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n\n          {dosingControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Dosing automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: dosingControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['dosing_control']}\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeDosingDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n            >\n              Change dosing automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"dosing\"\n              open={openChangeDosingDialog}\n              onFinished={() => setOpenChangeDosingDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={true}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n          {ledControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                LED automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: ledControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['led_control']}\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeLEDDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n            >\n              Change LED automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"led\"\n              open={openChangeLEDDialog}\n              onFinished={() => setOpenChangeLEDDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={true}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          {Object.values(jobs)\n            .filter(job => job.metadata.display)\n            .map(job =>\n            Object.entries(job)\n              .filter(([key, _]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <React.Fragment key={key}>\n              <Typography  gutterBottom>\n                {setting.label}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {setting.description}\n              </Typography>\n              <TextField\n                size=\"small\"\n                autoComplete=\"off\"\n                id={`${job.metadata.key.replace(\"_control\", \"_automation\")}/${key}`}\n                key={key}\n                defaultValue={setting.value}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">{setting.unit}</InputAdornment>,\n                }}\n                variant=\"outlined\"\n                onKeyPress={setPioreactorJobAttrOnEnter(setting.unit)}\n                className={classes.textFieldCompact}\n              />\n              <Divider classes={{root: classes.divider}} />\n            </React.Fragment>\n\n          ))}\n\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pumps for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pumps for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pumps for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel A\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel B\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel C\n          </Typography>\n          <ActionLEDForm channel=\"C\" unit={unit} />\n\n          <Divider className={classes.divider} />\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel D\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={unit} />\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + unit + \"settings\"}\n    />\n    </React.Fragment>\n  );\n}\n\n\nfunction ActiveUnits(props){\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Active Pioreactors\n        </Box>\n      </Typography>\n      <div >\n\n      </div>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={true} key={unit} unit={unit} config={props.config} experiment={props.experiment} rename={props.renameMap[unit]}/>\n  )}\n  </React.Fragment>\n)}\n\n\nfunction FlashLEDButton(props){\n  const classes = useStyles();\n\n  const [flashing, setFlashing] = useState(false)\n\n\n  const onClick = () => {\n    setFlashing(true)\n    const sendMessage = () => {\n      var message = new Message(\"1\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        \"$experiment\",\n        \"monitor\",\n        \"flicker_led_response_okay\",\n      ].join(\"/\");\n      message.qos = 0;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 1000)\n      }\n    }\n\n    sendMessage()\n    setTimeout(() => {setFlashing(false)}, 3600 ) // .9 * 4\n  }\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\"}} className={clsx({blinkled: flashing})} disabled={props.disabled} onClick={onClick} color=\"primary\">\n      <FlareIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> <span >  Blink  </span>\n    </Button>\n)}\n\n\n\nfunction PioreactorCard(props){\n  const classes = useStyles();\n  const unit = props.unit\n  const isUnitActive = props.isUnitActive\n  const experiment = props.experiment\n  const config = props.config\n  const [fetchComplete, setFetchComplete] = useState(false)\n\n  const [client, setClient] = useState(null)\n  const [jobs, setJobs] = useState({\n    monitor: {\n      state : \"disconnected\", metadata: {display: false}\n    },\n  })\n\n\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/contrib/jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {state: \"disconnected\", metadata: {name: job.name, subtext: job.subtext, display: job.display, description: job.description, key: job.job_name, source: job.source, is_testing: job.is_testing}}\n            for(var i = 0; i < job[\"editable_settings\"].length; ++i){\n              var field = job[\"editable_settings\"][i]\n              metaData_[field.key] = {value: field.default, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n          setFetchComplete(true)\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n  useEffect(() => {\n    const onConnect = () => {\n      client.subscribe([\"pioreactor\", unit, \"$experiment\", \"monitor\", \"$state\"].join(\"/\"));\n      for (const job of Object.keys(jobs)) {\n        if (job === \"monitor\") {continue;}\n\n        // for some jobs (self_test), we use a different experiment name to not clutter datasets,\n        const experimentName = jobs[job].metadata.is_testing ? \"_testing_\" + experiment : experiment\n\n        client.subscribe([\"pioreactor\", unit, experimentName, job, \"$state\"].join(\"/\"));\n        for (const setting of Object.keys(jobs[job])){\n          if ((setting !== \"state\") && (setting !== \"metadata\")){\n            var topic = [\n              \"pioreactor\",\n              unit,\n              experimentName,\n              (setting === \"automation_name\") ? job : job.replace(\"_control\", \"_automation\"), // this is for, ex, automation_name\n              setting\n            ].join(\"/\")\n            client.subscribe(topic);\n          }\n        }\n      }\n    }\n\n    const onMessageArrived = (message) => {\n      var parsedFloat = parseFloat(message.payloadString); // try to parse it as a float first\n      var payload = isNaN(parsedFloat) ? message.payloadString : parsedFloat;\n      var [job, setting] = message.topic.split('/').slice(-2)\n      if (setting === \"$state\"){\n        setJobs((prev) => ({...prev, [job]: {...prev[job], state: payload}}))\n      } else if (job.endsWith(\"_automation\")) {\n        // needed because settings are attached to _automations, not _control\n        job = job.replace(\"_automation\", \"_control\")\n        setJobs((prev) => ({...prev, [job]: {...prev[job], [setting]: {...prev[job][setting], value: payload }}}))\n      } else {\n        setJobs((prev) => ({...prev, [job]: {...prev[job], [setting]: {...prev[job][setting], value: payload }}}))\n      }\n    }\n\n    if (!props.config['network.topology']){\n      return\n    }\n\n    if (!isUnitActive){\n      return\n    }\n\n    if (!experiment){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui\" + Math.random()\n      );\n    }\n    client.onMessageArrived = onMessageArrived\n    client.connect({onSuccess: onConnect, reconnect: true});\n    setClient(client)\n  },[config, experiment, fetchComplete, isUnitActive])\n\n  const getInicatorLabel = (state, isActive) => {\n    if ((state === \"disconnected\") && isActive) {\n      return \"Offline, need to power up\"\n    }\n    else if ((state === \"disconnected\") && !isActive){\n      return \"Offline, change inventory status in config.ini\"\n    }\n    else if (state === \"lost\"){\n      return \"Lost, something went wrong. Try power-cycling the unit.\"\n    }\n    else {\n      return \"Online and ready\"\n    }\n  }\n\n  const getIndicatorDotColor = (state) => {\n    if (state === \"disconnected\") {\n      return disconnectedGrey\n    }\n    else if (state === \"lost\"){\n      return lostRed\n    }\n    else {\n      return readyGreen\n    }\n  }\n\n  const getIndicatorDotShadow = (state) => {\n    if (state === \"disconnected\") {\n      return 0\n    }\n    else {\n      return 6\n    }\n  }\n\n  const indicatorDotColor = getIndicatorDotColor(jobs.monitor.state)\n  const indicatorDotShadow = getIndicatorDotShadow(jobs.monitor.state)\n  const indicatorLabel = getInicatorLabel(jobs.monitor.state, isUnitActive)\n\n\n  return (\n    <Card className={classes.pioreactorCard} id={unit}>\n\n      <CardContent className={classes.cardContent}>\n        <div className={\"fixme\"}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(props.rename) ? unit : \"\"}\n          </Typography>\n          <div className={classes.cardHeaderSettings}>\n            <div style={{display: \"flex\", justifyContent: \"left\"}}>\n              <Typography className={clsx(classes.unitTitle, {[classes.disabledText]: !isUnitActive})} gutterBottom>\n                <PioreactorIcon color={isUnitActive ? \"inherit\" : \"disabled\"} style={{verticalAlign: \"middle\"}} sx={{ display: {xs: 'none', sm: 'none', md: 'inline' } }}/>\n                {(props.rename ) ? props.rename : unit }\n              </Typography>\n              <Tooltip title={indicatorLabel} placement=\"right\">\n                <div>\n                  <div aria-label={indicatorLabel} className=\"indicator-dot\" style={{boxShadow: `0 0 ${indicatorDotShadow}px ${indicatorDotColor}, inset 0 0 12px  ${indicatorDotColor}`}}/>\n                </div>\n              </Tooltip>\n            </div>\n            <div className={classes.cardHeaderButtons}>\n              <div>\n                <SelfTestDialog\n                  client={client}\n                  disabled={!isUnitActive}\n                  unit={unit}\n                  rename={props.rename}\n                  selfTestState={jobs['self_test'] ? jobs['self_test'].state : null}\n                  selfTestTests={jobs['self_test'] ? jobs['self_test'] : null}\n                />\n              </div>\n              <div>\n                <FlashLEDButton client={client} disabled={!isUnitActive} config={props.config} unit={unit}/>\n              </div>\n              <div>\n                <CalibrateDialog\n                  client={client}\n                  odBlankReading={jobs['od_blank'] ? jobs['od_blank'].mean.value : null}\n                  odBlankJobState={jobs['od_blank'] ? jobs['od_blank'].state : null}\n                  stirringCalibrationState={jobs['stirring_calibration'] ? jobs['stirring_calibration'].state : null}\n                  experiment={experiment}\n                  unit={unit}\n                  rename={props.rename}\n                  disabled={!isUnitActive}\n                />\n              </div>\n              <SettingsActionsDialog\n                config={props.config}\n                client={client}\n                unit={unit}\n                rename={props.rename}\n                disabled={!isUnitActive}\n                experiment={experiment}\n                jobs={jobs}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Activities:\n            </Box>\n          </Typography>\n        </div>\n        <div\n         className={classes.rowOfUnitSettingDisplay}\n        >\n          {Object.values(jobs)\n              .filter(job => job.metadata.display)\n              .map(job => (\n            <div className={classes.textbox} key={job.metadata.key}>\n              <Typography variant=\"body2\" style={{fontSize: \"0.84rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                {job.metadata.name}\n              </Typography>\n              <UnitSettingDisplay\n                value={job.state}\n                isUnitActive={isUnitActive}\n                default=\"disconnected\"\n                subtext={job.metadata.subtext ? job[job.metadata.subtext].value : null}\n                isStateSetting\n              />\n            </div>\n         ))}\n\n        </div>\n      </div>\n\n      <Divider/>\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Settings:\n            </Box>\n          </Typography>\n        </div>\n        <div\n         className={classes.rowOfUnitSettingDisplay}\n        >\n          {Object.values(jobs).map(job =>\n            Object.entries(job)\n              .filter(([key, setting]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <div className={classes.textbox} key={job.metadata.key + key}>\n              <Typography variant=\"body2\" style={{fontSize: \"0.84rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                {setting.label}\n              </Typography>\n              <UnitSettingDisplay\n                value={setting.value}\n                isUnitActive={isUnitActive}\n                measurementUnit={setting.unit}\n                precision={2}\n                default=\"—\"\n                isLEDIntensity={setting.label === \"LED intensity\"}\n                config={props.config}\n              />\n            </div>\n         ))}\n        </div>\n      </div>\n\n\n      </CardContent>\n    </Card>\n)}\n\n\nfunction InactiveUnits(props){\n\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Inactive Pioreactors\n        </Box>\n      </Typography>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={false} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n    </React.Fragment>\n)}\n\nfunction Pioreactors({title, config}) {\n    const [experimentMetadata, setExperimentMetadata] = React.useState({})\n    const [renameMap, setRenameMap] = React.useState({})\n\n    React.useEffect(() => {\n      document.title = title;\n\n      function getLatestExperiment() {\n          fetch(\"/get_latest_experiment\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setExperimentMetadata(data)\n          });\n        }\n\n      function getRenameMap() {\n          fetch(\"/get_current_unit_renames\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setRenameMap(data)\n          });\n        }\n\n      getLatestExperiment()\n      getRenameMap()\n    }, [title])\n\n    const entries = (a) => Object.entries(a)\n    const activeUnits = config['network.inventory'] ? entries(config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]) : []\n    const inactiveUnits = config['network.inventory'] ? entries(config['network.inventory']).filter((v) => v[1] === \"0\").map((v) => v[0]) : []\n\n    return (\n        <Grid container spacing={2} >\n\n\n          <Grid item md={12} xs={12}>\n            <PioreactorHeader config={config} experiment={experimentMetadata.experiment}/>\n            <ActiveUnits experiment={experimentMetadata.experiment} config={config} units={activeUnits} renameMap={renameMap}/>\n            <InactiveUnits experiment={experimentMetadata.experiment} config={config} units={inactiveUnits}/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Pioreactors;\n\n","import clsx from 'clsx';\nimport { Client, Message } from \"paho-mqtt\";\nimport { useParams } from 'react-router-dom';\n\nimport React, {useState, useEffect} from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from \"@mui/material\";\n\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\n\n\nconst readyGreen = \"#4caf50\"\nconst disconnectedGrey = \"grey\"\nconst lostRed = \"#DE3618\"\n\n\nfunction PioreactorUnit({title, config}) {\n    const [experimentMetadata, setExperimentMetadata] = React.useState({})\n    const { unit } = useParams();\n\n    React.useEffect(() => {\n      document.title = title;\n      function getLatestExperiment() {\n          fetch(\"/get_latest_experiment\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setExperimentMetadata(data)\n          });\n        }\n      getLatestExperiment()\n    }, [title])\n\n\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <h2>\n              {unit}\n            </h2>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default PioreactorUnit;\n\n","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Chart from \"./Chart\";\nimport ChangeAutomationsDialog from \"./ChangeAutomationsDialog\"\n\n\nfunction StartHeating(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openChangeTemperatureDialog, setOpenChangeTemperatureDialog] = React.useState(false);\n\n  const onClick = () => {\n    setOpenChangeTemperatureDialog(true);\n    setIsClicked(true);\n  };\n\n  return(\n    <div>\n      <p> For consistent temperatures of the culture, we recommend using the onboard heating. Click below and set the temperature of the cultures (you can change this temperature later).</p>\n\n      <Button\n        variant=\"contained\"\n        disabled={isClicked ? true : false }\n        onClick={onClick}\n      >\n        Start heating\n      </Button>\n\n      <ChangeAutomationsDialog\n        open={openChangeTemperatureDialog}\n        onFinished={() => setOpenChangeTemperatureDialog(false)}\n        unit=\"$broadcast\"\n        config={props.config}\n        experiment=\"+\"\n        isJobRunning={false}\n        automationType=\"temperature\"\n        no_skip_first_run={true}\n      />\n\n  </div>\n  )\n}\n\n\nfunction StartStirring(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/stirring/$broadcast\", {\n        method: \"POST\"}\n      ).then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> To get an accurate reading, we need to start start the stirring. This also provides gas transfer and keeps the cells in suspension.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start stirring </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message=\"Stirring starting\"\n      autoHideDuration={7000}\n      key=\"snackbarStirring\"\n    />\n  </div>\n  )\n}\n\n\nfunction StartODReading(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/od_reading/$broadcast\",  {method: \"POST\"}).then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> Next, we will turn on the optical density reading. We also call this <em>OD readings</em>. This will provide us with a measure of cell density. In a moment, you should see the data in the chart below. </p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start OD readings </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message=\"OD reading starting\"\n      autoHideDuration={7000}\n      key=\"snackbarOD\"\n    />\n  </div>\n  )\n}\n\n\nfunction StartSensors(props){\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid container>\n        <Grid item xs={10}><StartHeating config={props.config}/></Grid>\n        <Grid item xs={10}><StartStirring/></Grid>\n        <Grid item xs={10}><StartODReading/></Grid>\n        <Grid item xs={12}>\n          <Chart\n            config={props.config}\n            isODReading={true}\n            fontScale={1.0}\n            dataSource=\"od_readings_raw\"\n            interpolation=\"stepAfter\"\n            title=\"Optical density\"\n            topic=\"od_reading/od_raw/+\"\n            yAxisLabel=\"Voltage\"\n            payloadKey=\"voltage\"\n            experiment=\"+\"\n            deltaHours={1}\n            lookback={1}\n            fixedDecimals={3}\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n  );}\n\n\nexport default StartSensors;\n","\nimport React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartGrowthRate(props){\n\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [isClicked, setIsClicked] = React.useState(false);\n\n  const onClick = (e) => {\n    fetch(\"/run/growth_rate_calculating/$broadcast\", {method: \"POST\"}).then(r => {\n      setSnackbarMessage(\"Growth rate calculating starting\")\n      setOpenSnackbar(true)\n      setIsClicked(true)\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p>Because of the varying strength & quality of the electronics, not all readings look the same - even for the same density of cells. So we compute a baseline measurement from the OD readings, and measure all growth against that baseline. </p>\n      <p>From the (normalized) OD readings, we can calculate the <em>implied hourly growth rate</em>, which is our measure of growth. </p>\n      <p>Let's start the growth rate calculations. This first computes the normalization constants, <b>which can take up to two minutes to complete</b>. After that, the graph below should start to populate.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start growth rate calculations </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbarGR\"}\n      />\n  </div>\n  )\n}\n\n\n\n\nfunction StartCalculations(props){\n  const [experiment, setExperiment] = React.useState(\"null_exp\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiment(data.experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartGrowthRate experiment={experiment}/></Grid>\n      <Grid item xs={12}>\n      <Chart\n        config={props.config}\n        experiment={experiment}\n        dataSource=\"growth_rates\"\n        interpolation=\"stepAfter\"\n        title=\"Implied growth rate\"\n        topic=\"growth_rate_calculating/growth_rate\"\n        payloadKey=\"growth_rate\"\n        yAxisLabel=\"Growth rate, h⁻¹\"\n        yAxisDomain={[-0.02, 0.1]}\n        lookback={100000}\n        deltaHour={1}\n        fixedDecimals={2}\n      />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n  );}\n\n\nexport default StartCalculations;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Client, Message } from \"paho-mqtt\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport FormGroup from '@mui/material/FormGroup';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Button from \"@mui/material/Button\";\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\n//import CleaningScript from \"./components/CleaningScript\"\nimport StartSensors from \"./components/StartSensors\"\nimport StartCalculations from \"./components/StartCalculations\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"60%\"\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    width: \"100%\"\n\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\n\nconst filter = createFilterOptions();\n\nfunction FreeSoloCreateOption(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState({key: props.value});\n  const options = props.options\n  const updateParentCallback = props.updateParentCallback\n\n  React.useEffect( () => {\n    setValue({key: props.value});\n  }, [props.value]);\n\n  return (\n    <Autocomplete\n      value={value}\n      className={classes.textField}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            key: newValue,\n          });\n          updateParentCallback(newValue)\n\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            key: newValue.inputValue,\n          });\n          updateParentCallback(newValue.inputValue)\n\n        } else {\n          setValue(newValue);\n          updateParentCallback(newValue?.key)\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.key);\n        if ((inputValue !== '') && !isExisting) {\n          filtered.push({\n            inputValue,\n            key: `Add \"${inputValue}\"`,\n          });\n        }\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-addition\"\n      options={options}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        if (option.key){\n          return option.key;\n        }\n        return \"\"\n      }}\n      renderOption={(props, option) => <li {...props}>{option.key}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label={props.label} />\n      )}\n    />\n  );\n}\n\n\n\nfunction ExperimentSummaryForm(props) {\n  const classes = useStyles();\n  const [formError, setFormError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [expName, setExpName] = React.useState(\"\");\n  const [timestamp, setTimestamp] = React.useState(moment.utc());\n  const [description, setDescription] = React.useState(\"\");\n  const [organismUsed, setOrganismUsed] = React.useState(\"\");\n  const [mediaUsed, setMediaUsed] = React.useState(\"\");\n  const [historicalMediaUsed, setHistoricalMediaUsed] = React.useState([]);\n  const [historicalOrganismUsed, setHistoricalOrganismUsed] = React.useState([]);\n\n  React.useEffect(() => {\n    function populateDropDowns() {\n      fetch(\"/get_historical_media_used\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n          })\n        .then(json => setHistoricalMediaUsed(json))\n\n      fetch(\"/get_historical_organisms_used\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n          })\n        .then(json => setHistoricalOrganismUsed(json))\n    }\n    populateDropDowns();\n  }, [])\n\n\n  function publishExpNameToMQTT(){\n\n    function onConnect() {\n      var message = new Message(expName.trim());\n      message.destinationName = \"pioreactor/latest_experiment\"\n      message.qos = 1;\n      message.retained = true;\n      client.publish(message);\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      );\n    }\n    client.connect({ onSuccess: onConnect, timeout: 180});\n\n  }\n\n  function populateFields(){\n    fetch(\"/get_latest_experiment\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExpName(data.experiment)\n        setDescription(data.description)\n        setOrganismUsed(data.organism_used)\n        setMediaUsed(data.media_used)\n      });\n  }\n\n\n  function killExistingJobs(){\n     fetch('/stop_all', {method: \"POST\"})\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (expName === \"\"){\n      setFormError(true)\n      setHelperText(\"Can't be blank.\")\n      return\n    }\n    else if (expName.includes(\"#\") || expName.includes(\"+\") || expName.includes(\"/\")) {\n      setFormError(true)\n      setHelperText(\"Can't use #, / or + characters in experiment name.\")\n      return\n    }\n\n    // TODO: confirm we are connected to MQTT\n\n    fetch('create_experiment',{\n        method: \"POST\",\n        body: JSON.stringify({experiment : expName.trim(), timestamp: timestamp.toISOString(), description: description, mediaUsed: mediaUsed, organismUsed: organismUsed }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200){\n          publishExpNameToMQTT()\n          setHelperText(\"\")\n          setFormError(false);\n          killExistingJobs()\n          props.handleNext()\n        }\n        else{\n          setFormError(true);\n          setHelperText(\"Experiment name already used.\")\n        }\n      }\n     )\n  }\n\n  const onExpNameChange = (e) => {\n    setExpName(e.target.value)\n  }\n  const onDescChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const onTimestampChange = (e) => {\n    setTimestamp(e.target.value)\n  }\n  return (\n    <div className={classes.root}>\n        <FormGroup>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              error={formError}\n              id=\"expName\"\n              label=\"Experiment name\"\n              value={expName}\n              required\n              className={classes.textField}\n              onChange={onExpNameChange}\n              helperText={helperText}\n              />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              id=\"datetime\"\n              label=\"Start time\"\n              type=\"datetime-local\"\n              defaultValue={timestamp.local().format(\"YYYY-MM-DDTHH:mm:ss\")}\n              className={classes.textField}\n              onChange={onTimestampChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TextField\n              label=\"Description (optional)\"\n              maxRows={4}\n              placeholder={\"Add a description: what is your hypothesis? What is the experiment protocol? This description can always be changed later.\"}\n              multiline\n              value={description}\n              className={classes.textField}\n              onChange={onDescChange}\n              fullWidth={true}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <FreeSoloCreateOption\n              options={historicalOrganismUsed}\n              label=\"Organism / strain (optional)\"\n              updateParentCallback={setOrganismUsed}\n              value={organismUsed}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <FreeSoloCreateOption\n              options={historicalMediaUsed}\n              label=\"Media (optional)\"\n              updateParentCallback={setMediaUsed}\n              value={mediaUsed}\n            />\n          </Grid>\n\n\n\n          <Grid item xs={12} md={4}/>\n          <Grid item xs={12} md={8}>\n            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n              <Button style={{marginRight: \"10px\"}} size=\"small\" color=\"primary\" onClick={populateFields}>Populate with previous experiment</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}> Create </Button>\n            </div>\n          </Grid>\n        </Grid>\n        </FormGroup>\n    </div>\n  );\n}\n\n\n\n\n\nfunction StartNewExperimentContainer(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const getStepContent = (index) => {\n    return steps[index].content\n  }\n  const isStepOptional = (index) => {\n    return steps[index].optional\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1){\n      window.location.href = \"/overview\";\n    } else {\n\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n      window.scrollTo({top: 0})\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const steps = [\n    {title: 'Experiment summary', content: <ExperimentSummaryForm config={props.config} handleNext={handleNext}/>, optional: false},\n    //{title: 'Cleaning and preparation', content: <CleaningScript config={props.config}/>, optional: true},\n    {title: 'Start sensors', content: <StartSensors config={props.config}/>, optional: false},\n    {title: 'Start calculations', content: <StartCalculations config={props.config}/>, optional: false},\n  ];\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Start a new experiment\n        </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (step.optional) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you're finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Go to overview' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nfunction StartNewExperiment(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12} md={12}>\n            <StartNewExperimentContainer config={props.config}/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default StartNewExperiment;\n\n","import React from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Select from '@mui/material/Select';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { CodeFlaskReact } from \"react-codeflask\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\nclass EditableCodeDiv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      openSnackbar: false,\n      filename: \"config.ini\",\n      snackbarMsg: \"\",\n      buttonText: \"Save\",\n      hasChangedSinceSave: true,\n      availableConfigs: [\n        {name: \"shared config.ini\", filename: \"config.ini\"},\n      ]\n    };\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n    this.deleteConfig = this.deleteConfig.bind(this);\n  }\n\n  getConfig(filename) {\n    fetch(\"/get_config/\" + filename)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        this.setState({code: text});\n      })\n  }\n\n  getListOfConfigFiles(filename) {\n    fetch(\"/get_configs\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState(prevState => ({\n          availableConfigs: [...prevState.availableConfigs, ...json.filter(e => (e !== 'config.ini')).map(e => ({name: e, filename: e}))]\n        }));\n      })\n  }\n\n  saveCurrentCode() {\n    this.setState({buttonText: <CircularProgress color=\"inherit\" size={24}/>})\n    fetch('/save_new_config',{\n        method: \"POST\",\n        body: JSON.stringify({code :this.state.code, filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" saved and synced.\", hasChangedSinceSave: false, buttonText: \"Saved\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong saving or syncing...\", hasChangedSinceSave: true, buttonText: \"Save\"})\n      }\n      this.setState({openSnackbar: true});\n    })\n  }\n\n  deleteConfig(){\n    fetch('/delete_config',{\n        method: \"POST\",\n        body: JSON.stringify({filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" deleted.\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong deleting...\"})\n      }\n      this.setState({openSnackbar: true});\n      setTimeout(function () {\n        window.location.reload();\n      }, 750);\n    })\n  }\n\n  componentDidMount() {\n    this.getConfig(this.state.filename)\n    this.getListOfConfigFiles()\n  }\n\n  onSelectionChange = (e) => {\n    this.setState({filename: e.target.value})\n    this.getConfig(e.target.value)\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code, hasChangedSinceSave: true, buttonText: \"Save\"})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <Select\n            style={{margin: \"10px 10px 10px 10px\"}}\n            native\n            variant=\"standard\"\n            value={this.state.filename}\n            onChange={this.onSelectionChange}\n            inputProps={{\n              name: 'config',\n              id: 'config',\n            }}\n          >\n            {this.state.availableConfigs.map((v) => {\n              return <option key={v.filename} value={v.filename}>{v.name}</option>\n              }\n            )}\n          </Select>\n        </div>\n\n        <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"300px\", border: \"1px solid #ccc\"}}>\n          <CodeFlaskReact\n            code={this.state.code}\n            onChange={this.onTextChange}\n            editorRef={this.getCodeFlaskRef}\n            language={\"python\"}\n          />\n        </div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Button\n            style={{margin: \"5px 12px 5px 12px\"}}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.saveCurrentCode}\n            disabled={!this.state.hasChangedSinceSave}\n            >\n            {this.state.buttonText}\n          </Button>\n          <Button\n            style={{margin: \"5px 10px 5px 10px\"}}\n            color=\"secondary\"\n            onClick={this.deleteConfig}\n            disabled={(this.state.filename === \"config.ini\")}>\n            Delete config file\n          </Button>\n        </div>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n          open={this.state.openSnackbar}\n          onClose={this.handleSnackbarClose}\n          message={this.state.snackbarMsg}\n          autoHideDuration={2000}\n          key={\"edit-config-snackbar\"}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n\nfunction EditConfigContainer(){\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Configuration\n            </Box>\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p>Update the <code>config.ini</code> files. The shared <code>config.ini</code> will be deployed to <em>all</em> Pioreactors, but configuration can be overwritten by editing specific Pioreactor's <code>config.ini</code>.</p>\n          <EditableCodeDiv/>\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}><span role=\"img\">💡</span> Learn more about Pioreactor  <a href=\"https://docs.pioreactor.com/user_guide/Configuration%20via%20config\" target=\"_blank\" rel=\"noopener noreferrer\">configuration</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction EditConfig(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n             <EditConfigContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default EditConfig;\n\n","import React from \"react\";\nimport MarkdownView from 'react-showdown';\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Link from '@mui/material/Link';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport Divider from '@mui/material/Divider';\nimport SystemUpdateAltIcon from '@mui/icons-material/SystemUpdateAlt';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction ConfirmDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false)\n\n  const updateVersion = () => {\n    setOpen(false)\n    setOpenSnackbar(true)\n    fetch(\"/update_app\", {method: \"POST\"})\n    .then(res => {\n      if (res.ok) {\n        window.location.reload();\n        return false\n      }\n    })\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n        <UpdateIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Update to latest release\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm update to latest release\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Updating will not stop or change currently running activities or experiments.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={updateVersion} color=\"primary\">\n            Update now\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        message=\"Updating in the background - you may leave this page\"\n        autoHideDuration={20000}\n        key=\"snackbar-update\"\n      />\n    </React.Fragment>\n  );\n}\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  const [version, setVersion] = React.useState(\"\")\n  const [latestVersion, setLatestVersion] = React.useState(\"\")\n\n\n\n  React.useEffect(() => {\n    async function getCurrentAppVersion() {\n         await fetch(\"/get_app_version\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestAppVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['name'])\n        });\n      }\n\n      getCurrentAppVersion()\n      getLatestAppVersion()\n  }, [])\n\n  return (\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Updates\n          </Box>\n        </Typography>\n        <div >\n          <ConfirmDialog/>\n          <Link color=\"inherit\" underline=\"none\" href=\"https://github.com/Pioreactor/pioreactor/releases\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Button style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n              <OpenInNewIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> View latest release\n            </Button>\n          </Link>\n        </div>\n      </div>\n      <Divider/>\n      <Typography variant=\"subtitle2\">\n\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n          <SystemUpdateAltIcon style={{ fontSize: 14, verticalAlign: \"-1px\" }}/> Version installed:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {version}\n        </Box>\n\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <UpdateIcon style={{ fontSize: 14, verticalAlign: \"-1px\" }}/>\n          Latest version available:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {latestVersion}\n        </Box>\n\n      </Typography>\n    </div>\n  )\n}\n\n\n\nfunction ChangelogContainer(){\n  const classes = useStyles();\n\n  const [changelog, setChangelog] = React.useState(\"\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"https://raw.githubusercontent.com/Pioreactor/pioreactor/master/CHANGELOG.md\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setChangelog(data)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" component=\"h6\">\n            Change log\n        </Typography>\n          <MarkdownView\n            markdown={changelog}\n          />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Updates(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PageHeader/>\n            <ChangelogContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Updates;\n\n","import { Hashicon } from \"@emeraldpay/hashicon-react\";\nimport React from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport Snackbar from '@mui/material/Snackbar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Avatar from '@mui/material/Avatar';\nimport GetAppIcon from '@mui/icons-material/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  pluginList:{\n    width: \"95%\",\n    margin: \"auto\",\n    marginBottom: \"15px\"\n  },\n  secondaryActionButton:{\n    marginLeft: \"10px\"\n  }\n}));\n\n\n\nfunction PageHeader(props) {\n  return (\n    <React.Fragment>\n    <div>\n      <div>\n        <Typography variant=\"h5\" component=\"h2\">\n          <Box fontWeight=\"fontWeightBold\">\n            Plugins\n          </Box>\n        </Typography>\n      </div>\n    </div>\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ListAvailablePlugins({alreadyInstalledPluginsNames}){\n\n  const classes = useStyles();\n  const [availablePlugins, setAvailablePlugins] = React.useState([])\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\")\n\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"https://raw.githubusercontent.com/Pioreactor/list-of-plugins/main/plugins.json\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          setAvailablePlugins(json)\n        });\n      }\n      getData()\n  }, [])\n\n  const installPlugin = (plugin_name) => () => {\n      setSnackbarOpen(true);\n      setSnackbarMsg(`Installing ${plugin_name} in the background...`);\n      fetch('/install_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then((response) => {\n        if (response.ok) {\n          window.location.reload();\n        } else {\n          throw new Error('Installation went wrong');\n        }\n      })\n  }\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n    <div className={classes.pluginList}>\n     <List dense={true}>\n        {availablePlugins\n            .filter(plugin => (!alreadyInstalledPluginsNames.includes(plugin.name)))\n            .map(plugin =>\n          <ListItem key={plugin.name}>\n            <ListItemAvatar>\n              <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                <Hashicon value={plugin.name} size={40} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={plugin.name}\n              secondary={plugin.description}\n              style={{maxWidth: \"500px\"}}\n            />\n            <ListItemSecondaryAction sx={{display: {xs: 'contents', md: 'block'}}}>\n\n              <Button\n                onClick={installPlugin(plugin.name)}\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                endIcon={<GetAppIcon />}\n                className={classes.secondaryActionButton}\n              >\n                Install\n              </Button>\n              <Button\n                href={plugin.homepage}\n                target=\"_blank\" rel=\"noopener\"\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"install\"\n                disabled={!plugin.homepage}\n                endIcon={<OpenInNewIcon />}\n                className={classes.secondaryActionButton}\n              >\n                View\n              </Button>\n              </ListItemSecondaryAction>\n\n          </ListItem>,\n        )}\n      </List>\n    </div>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMsg}\n      autoHideDuration={15000}\n      resumeHideDuration={2000}\n      key=\"snackbar-available\"\n    />\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ListInstalledPlugins({installedPlugins}){\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\")\n  const classes = useStyles();\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  const uninstallPlugin = (plugin_name) => () => {\n      setSnackbarOpen(true);\n      setSnackbarMsg(`Uninstalling ${plugin_name} in the background...`);\n      fetch('/uninstall_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then((response) => {\n        if (response.ok) {\n          window.location.reload();\n        } else {\n          throw new Error('Uninstallation went wrong');\n        }\n      })\n  }\n\n  return (\n    <React.Fragment>\n    <div className={classes.pluginList}>\n     <List dense={true}>\n        {installedPlugins.map(plugin =>\n          <ListItem key={plugin.name}>\n            <ListItemAvatar>\n              <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                <Hashicon value={plugin.name} size={40} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={`${plugin.name} (${plugin.version})`}\n              secondary={plugin.description}\n            />\n            <ListItemSecondaryAction sx={{display: {xs: 'contents', md: 'block'}}}>\n              <Button\n                onClick={uninstallPlugin(plugin.name)}\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                endIcon={<DeleteIcon />}\n                disabled={plugin.source === \"plugins_folder\"}\n                className={classes.secondaryActionButton}\n              >\n                {plugin.source === \"plugins_folder\" ? \"Delete from plugins folder\" : \"Uninstall\" }\n              </Button>\n              <Button\n                href={plugin.homepage}\n                target=\"_blank\" rel=\"noopener\"\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                disabled={!plugin.homepage}\n                endIcon={<OpenInNewIcon />}\n                className={classes.secondaryActionButton}\n              >\n                View\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>,\n        )}\n      </List>\n    </div>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMsg}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key=\"snackbar-installation\"\n    />\n    </React.Fragment>\n  )\n}\n\n\nfunction PluginContainer(){\n  const classes = useStyles();\n\n  const [installedPlugins, setInstalledPlugins] = React.useState([])\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_installed_plugins\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          setInstalledPlugins(json)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <PageHeader/>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p> Install, manage, and discover new Pioreactor plugins created by the community. These plugins can provide new functionalities for your Pioreactor (additional hardware may be necessary), or new automations to control dosing, temperature and LED operations.</p>\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Installed plugins\n         </Typography>\n          <ListInstalledPlugins installedPlugins={installedPlugins}/>\n\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Available plugins from the community\n         </Typography>\n          <ListAvailablePlugins alreadyInstalledPluginsNames={installedPlugins.map(plugin => plugin.name)}/>\n\n\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}><span role=\"img\">💡</span> Learn more about Pioreactor  <a href=\"https://docs.pioreactor.com/user_guide/Using%20community-built%20plugins\" target=\"_blank\" rel=\"noopener noreferrer\">plugins</a>.</p>\n\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Plugins(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PluginContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\n\nexport default Plugins;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Chart from \"./components/Chart\";\nimport PioreactorIcon from './components/PioreactorIcon';\nimport FormControl from '@mui/material/FormControl';\nimport { makeStyles } from '@mui/styles';\nimport Select from '@mui/material/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  }\n}));\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([{experiment: \"<All experiments>\"}])\n\n  React.useEffect(() => {\n    async function getData() {\n       await fetch(\"/get_experiments\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExperiments(prevState => [ ...data, ...prevState])\n        props.handleChange(data[0].experiment)\n      });\n    }\n    getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n\n        <Select\n          native\n          variant=\"standard\"\n          value={props.ExperimentSelection}\n          onChange={handleExperimentSelectionChange}\n          inputProps={{\n            name: 'experiment',\n            id: 'experiment',\n          }}\n        >\n          {experiments.map((v) => {\n            return <option value={v.experiment}>{v.experiment +  (v.timestamp ? ` (started ${moment(v.timestamp).format(\"MMMM D, YYYY\")})` : \"\")}</option>\n            }\n          )}\n        </Select>\n      </FormControl>\n\n    </div>\n  )\n}\n\n\n\nfunction Analysis(props) {\n\n  const [experimentSelection, setExperimentSelection] = React.useState(\"\")\n\n  React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title]);\n\n  function handleExperimentSelectionChange(value) {\n    setExperimentSelection(value)\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} justifyContent=\"space-between\">\n        <Grid item xs={12}>\n          <ExperimentSelection\n          experimentSelection={experimentSelection}\n          handleChange={handleExperimentSelectionChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} container spacing={2} justifyContent=\"flex-start\" style={{height: \"100%\"}}>\n          <Grid item xs={12}>\n            <Chart\n\n              dataSource=\"growth_rates\"\n              title=\"Implied growth rate\"\n              topic=\"growth_rate_calculating/growth_rate\"\n              payloadKey=\"growth_rate\"\n              yAxisLabel=\"Growth rate, h⁻¹\"\n              experiment={experimentSelection}\n              deltaHours={20}\n              interpolation=\"stepAfter\"\n              yAxisDomain={[-0.02, 0.1]}\n              lookback={100000}\n              fixedDecimals={2}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Chart\n\n              dataSource=\"temperature_readings\"\n              title=\"Temperature of vials\"\n              topic=\"temperature_control/temperature\"\n              yAxisLabel=\"temperature, ℃\"\n              payloadKey=\"temperature\"\n              experiment={experimentSelection}\n              interpolation=\"stepAfter\"\n              lookback={10000}\n              deltaHours={1}\n              yAxisDomain={[22.5, 37.5]}\n              fixedDecimals={1}\n            />\n          </Grid>\n\n\n          <Grid item xs={12}>\n            <Chart\n\n              yAxisDomain={[0.00, 0.05]}\n              dataSource=\"alt_media_fraction\"\n              interpolation=\"stepAfter\"\n              payloadKey=\"alt_media_fraction\"\n              title=\"Fraction of volume that is alternative media\"\n              topic=\"alt_media_calculating/alt_media_fraction\"\n              yAxisLabel=\"Fraction\"\n              experiment={experimentSelection}\n              deltaHours={1} // hack to make all points display\n              fixedDecimals={3}\n              lookback={100000}\n            />\n          </Grid>\n\n        </Grid>\n        <Grid item xs={12} md={6} container spacing={2} justifyContent=\"flex-start\" style={{height: \"100%\"}}>\n\n          <Grid item xs={12}>\n            <Chart\n\n              isODReading={true}\n              dataSource=\"od_readings_filtered\"\n              title=\"Normalized optical density\"\n              payloadKey=\"od_filtered\"\n              topic=\"growth_rate_calculating/od_filtered\"\n              yAxisLabel=\"Current OD / initial OD\"\n              experiment={experimentSelection}\n              deltaHours={20}\n              interpolation=\"stepAfter\"\n              lookback={100000}\n              fixedDecimals={2}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Chart\n\n              isODReading={true}\n              dataSource=\"od_readings_raw\"\n              title=\"Optical density\"\n              payloadKey=\"voltage\"\n              topic=\"od_reading/od_raw/+\"\n              yAxisLabel=\"Voltage\"\n              experiment={experimentSelection}\n              deltaHours={20}\n              interpolation=\"stepAfter\"\n              lookback={10000}\n              fixedDecimals={3}\n            />\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Analysis;\n","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport FormGroup from '@mui/material/FormGroup';\nimport TextField from '@mui/material/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  halfTextField: {\n    width: \"70%\"\n  },\n}));\n\n\n\nfunction FeedbackContainer(props){\n  const classes = useStyles();\n  const [formError, setFormError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [feedback, setFeedback] = React.useState(\"\");\n  const [sending, setSending] = React.useState(false);\n  const [hasBeenSent, setHasBeenSent] = React.useState(false);\n\n  function publishFeedbackToCloud(){\n    setSending(true)\n    fetch(\"https://us-central1-pioreactor-backend.cloudfunctions.net/feedback\", {\n      method:\"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          email: email,\n          message: feedback\n          })\n      })\n    setSending(false)\n    setHasBeenSent(true)\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (email === \"\"){\n      setFormError(true)\n      setHelperText(\"Can't be blank.\")\n      return\n    }\n    publishFeedbackToCloud()\n  }\n\n  const onEmailChange = (e) => {\n    setFormError(false)\n    setHelperText(\"\")\n    setEmail(e.target.value)\n  }\n  const onFeedbackChange = (e) => {\n    setFeedback(e.target.value)\n  }\n\n  return(\n    <React.Fragment>\n      <div>\n        <Typography variant=\"h5\" component=\"h2\">\n          <Box fontWeight=\"fontWeightBold\">\n            Share feedback\n          </Box>\n        </Typography>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n        <p>\n        Include your email, and we may get back to you with some questions or advice about your provided feedback.\n        We appreciate all feedback sent to us!\n        </p>\n        <FormGroup>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formError}\n                id=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                required\n                onChange={onEmailChange}\n                className={`${classes.halfTextField} ${classes.textField}`}\n                value={email}\n                helperText={helperText}\n                />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <TextField\n                label=\"What went wrong? What went right? What are you unsure about?\"\n                maxRows={4}\n                multiline\n                required\n                onChange={onFeedbackChange}\n                value={feedback}\n                className={classes.textField}\n                minRows={3}\n                fullWidth={true}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <LoadingButton\n                loading={sending}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={hasBeenSent}\n                onClick={onSubmit}>\n                {hasBeenSent ? \"Submitted\" : \"Submit\"}\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </FormGroup>\n\n\n\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Feedback(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={3} >\n          <Grid item md={12} xs={12}>\n            <FeedbackContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Feedback;\n\n","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Badge from '@mui/material/Badge';\nimport Divider from '@mui/material/Divider';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport IconButton from '@mui/material/IconButton';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport FeedbackOutlinedIcon from '@mui/icons-material/FeedbackOutlined';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport Toolbar from '@mui/material/Toolbar';\nimport {AppBar, Typography, Link, Button} from '@mui/material';\nimport PioreactorIcon from './PioreactorIcon';\nimport LibraryAddOutlinedIcon from '@mui/icons-material/LibraryAddOutlined';\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport InsertChartOutlinedIcon from '@mui/icons-material/InsertChartOutlined';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nconst drawerWidth = 212;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarRoot: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1\n    }\n  },\n  listItemIcon: {\n    minWidth: \"40px\"\n  },\n  divider: {\n    marginTop: \"15px\",\n    marginBottom: \"15px\",\n  }\n}));\n\n\n\nexport default function SideNavAndHeader() {\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [version, setVersion] = React.useState(null)\n  const [latestVersion, setLatestVersion] = React.useState(null)\n\n  React.useEffect(() => {\n    async function getCurrentApp() {\n         await fetch(\"/get_app_version\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['name'])\n        });\n      }\n\n      getCurrentApp()\n      getLatestVersion()\n  }, [])\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  function isSelected(path) {\n    return (window.location.pathname === path)\n  }\n\n  const helpNode = <React.Fragment>\n                     Help <OpenInNewIcon style={{fontSize:\"15px\", verticalAlign: \"middle\"}}/>\n                    </React.Fragment>\n\n  const list = () => (\n    <div className={classes.drawerContainer}>\n      <List>\n\n        <ListItemButton href=\"/overview\" component=\"a\"  key=\"overview\" selected={isSelected(\"/\") || isSelected(\"/overview\")}>\n          <ListItemIcon className={classes.listItemIcon}><DashboardOutlinedIcon color={(isSelected(\"/\") || isSelected(\"/overview\")) ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/\") || isSelected(\"/overview\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Overview\" />\n        </ListItemButton>\n\n        <ListItemButton href=\"/pioreactors\"  component=\"a\" key=\"pioreactors\" selected={isSelected(\"/pioreactors\")}>\n          <ListItemIcon className={classes.listItemIcon}> <PioreactorIcon color={isSelected(\"/pioreactors\") ? \"primary\" : \"inherit\"} viewBox=\"-3 0 24 24\"/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/pioreactors\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Pioreactors\" />\n        </ListItemButton>\n\n\n        <ListItemButton href=\"/export-data\" component=\"a\"  key=\"export_data\" selected={isSelected(\"/export-data\")}>\n          <ListItemIcon className={classes.listItemIcon}><SaveAltIcon color={isSelected(\"/export-data\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/export-data\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Export data\" />\n        </ListItemButton>\n\n        <ListItemButton  href=\"/config\"  component=\"a\" key=\"config\" selected={isSelected(\"/config\")}>\n          <ListItemIcon className={classes.listItemIcon}> <SettingsOutlinedIcon color={isSelected(\"/config\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/config\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Configuration\" />\n        </ListItemButton>\n\n        <ListItemButton  href=\"/analysis\"  component=\"a\" key=\"analysis\" selected={isSelected(\"/analysis\")}>\n          <ListItemIcon className={classes.listItemIcon}> <InsertChartOutlinedIcon color={isSelected(\"/analysis\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/analysis\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Analysis\" />\n        </ListItemButton>\n\n        <Divider className={classes.divider} />\n\n        <ListItemButton href=\"/plugins\" component=\"a\"  key=\"plugins\" selected={isSelected(\"/plugins\")}>\n          <ListItemIcon className={classes.listItemIcon}><LibraryAddOutlinedIcon color={isSelected(\"/plugins\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/plugins\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Plugins\" />\n        </ListItemButton>\n\n        <ListItemButton href=\"/updates\" component=\"a\"  key=\"updates\" selected={isSelected(\"/updates\")}>\n          <ListItemIcon className={classes.listItemIcon}>\n            <Badge variant=\"dot\" color=\"secondary\" invisible={!((version) && (latestVersion) && (version !== latestVersion))}>\n              <UpdateIcon color={isSelected(\"/updates\") ? \"primary\" : \"inherit\"}/>\n            </Badge>\n          </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/updates\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Updates\"/>\n        </ListItemButton>\n\n        <ListItemButton target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com\" component=\"a\"  key=\"help\">\n          <ListItemIcon className={classes.listItemIcon}><HelpOutlineIcon/> </ListItemIcon>\n          <ListItemText primary={helpNode} primaryTypographyProps={{color: \"rgba(0, 0, 0, 0.87)\"}}/>\n        </ListItemButton>\n\n        <ListItemButton href=\"/feedback\" component=\"a\"  key=\"feedback\" selected={isSelected(\"/feedback\")}>\n          <ListItemIcon className={classes.listItemIcon}>\n            <FeedbackOutlinedIcon color={isSelected(\"/feedback\") ? \"primary\" : \"inherit\"}/>\n          </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/feedback\") ? \"primary\" : \"rgba(0, 0, 0, 0.87)\"}} primary=\"Share feedback\"/>\n        </ListItemButton>\n\n      </List>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <div className={classes.appBarRoot}>\n        <AppBar position=\"fixed\" >\n          <Toolbar variant=\"dense\">\n\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              classes={{root: classes.menuButton}}\n              sx={{ display: { xs: 'block', sm: 'none' } }}\n              size=\"large\">\n              <MenuIcon />\n            </IconButton>\n\n\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link color=\"inherit\" underline=\"none\" href=\"/\" className={classes.title}> <img alt=\"pioreactor logo\" src=\"/white_colour.png\" style={{width: \"120px\", height: \"29px\"}}/> </Link>\n            </Typography>\n            <Link color=\"inherit\" underline=\"none\" href=\"https://docs.pioreactor.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button color=\"inherit\" style={{textTransform: \"none\"}}>Help <HelpOutlineIcon style={{ fontSize: 18, verticalAlign: \"middle\", marginLeft: 5 }}/></Button>\n            </Link>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Drawer\n        variant=\"temporary\"\n        anchor=\"left\"\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n        sx={{ display: { xs: 'block', sm: 'none' } }}\n      >\n        {list()}\n      </Drawer>\n      <Drawer\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        variant=\"permanent\"\n        open\n        className={classes.drawer}\n        sx={{ display: { xs: 'none', sm: 'block' } }}\n      >\n        <Toolbar />\n        {list()}\n      </Drawer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n    console.log(this.props.config);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n      <React.Fragment>\n        <div style={{maxWidth: 700, margin: \"auto\"}}>\n          <div>\n            <h1>Something went wrong with the PioreactorUI!</h1>\n            <h3>Don't worry. It's our fault. Here's what you can do:</h3>\n            <p> Looks like there's a bug in the UI. See the console (⌘+⌥+i) for error information. We would appreciate it\n            if you create an issue in <a href=\"https://github.com/Pioreactor/pioreactorui/issues\">Github</a> for us, with the information in the console (⌘+⌥+i).</p>\n          </div>\n          <div>\n            <h3> Current config.ini </h3>\n            <pre>\n              {JSON.stringify(this.props.config, null, 2)}\n            </pre>\n          </div>\n        </div>\n      </React.Fragment>\n      )\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createTheme} from '@mui/material/styles';\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { StyledEngineProvider } from '@mui/material/styles';\n\n\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\nimport ErrorSnackbar from \"./components/ErrorSnackbar\";\nimport ExperimentOverview from \"./ExperimentOverview\";\nimport ExportData from \"./ExportData\";\nimport Pioreactors from \"./Pioreactors\";\nimport PioreactorUnit from \"./PioreactorUnit\";\nimport StartNewExperiment from \"./StartNewExperiment\";\nimport EditConfig from \"./EditConfig\";\nimport Updates from \"./Updates\";\nimport Plugins from \"./Plugins\";\nimport Analysis from \"./Analysis\";\nimport Feedback from \"./Feedback\";\nimport SideNavAndHeader from \"./components/SideNavAndHeader\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nimport \"@fontsource/roboto/300.css\"\nimport \"@fontsource/roboto/400.css\"\nimport \"@fontsource/roboto/500.css\"\nimport \"@fontsource/roboto/700.css\"\nimport './styles.css';\nimport {parseINIString} from \"./utilities\"\n\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: \"#f6f6f7\",\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#5331CA',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      main: '#f44336',\n    },\n  },\n});\n\n\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MainSite />\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </React.StrictMode>\n  );\n}\n\nfunction MainSite() {\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n\n    function getConfig() {\n      fetch(\"/get_config/config.ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          setConfig(parseINIString(config)); // TODO: parse on server side and send a json object\n        })\n        .catch((error) => {})\n    }\n    getConfig();\n  }, [])\n  return (\n    <div style={{display: 'flex'}}>\n      <ErrorBoundary config={config}>\n        <SideNavAndHeader />\n        <main style={{flexGrow: 1, paddingTop: theme.spacing(9), paddingLeft: theme.spacing(4), paddingRight: theme.spacing(4)}}>\n          <Router>\n            <div className=\"pageContainer\">\n              <Switch>\n                <Route path=\"/export-data\">\n                  <ExportData config={config} title=\"Pioreactor ~ Export data\"/>\n                </Route>\n                <Route path=\"/start-new-experiment\">\n                  <StartNewExperiment config={config} title=\"Pioreactor ~ Start new experiment\" />\n                </Route>\n                <Route path=\"/overview\">\n                  <ExperimentOverview config={config} title=\"Pioreactor ~ Overview\"/>\n                </Route>\n                <Route path=\"/plugins\">\n                  <Plugins config={config} title=\"Pioreactor ~ Plugins\"/>\n                </Route>\n                <Route path=\"/analysis\">\n                  <Analysis config={config} title=\"Pioreactor ~ Analysis\"/>\n                </Route>\n                <Route path=\"/config\">\n                  <EditConfig config={config} title=\"Pioreactor ~ Configuration\"/>\n                </Route>\n                <Route path=\"/pioreactors\" exact>\n                  <Pioreactors config={config} title=\"Pioreactor ~ Pioreactors\"/>\n                </Route>\n                <Route path=\"/pioreactors/:unit\">\n                  <PioreactorUnit config={config} title=\"Pioreactor ~ Unit\"/>\n                </Route>\n                <Route path=\"/updates\">\n                  <Updates config={config} title=\"Pioreactor ~ Updates\"/>\n                </Route>\n                <Route path=\"/feedback\">\n                  <Feedback config={config} title=\"Pioreactor ~ Feedback\"/>\n                </Route>\n                <Route path=\"/\">\n                  <ExperimentOverview config={config} title=\"Pioreactor ~ Pioreactor\"/>\n                </Route>\n              </Switch>\n              <ErrorSnackbar config={config} />\n              <TactileButtonNotification config={config}/>\n            </div>\n          </Router>\n        </main>\n      </ErrorBoundary>\n    </div>\n)}\n\nexport default App;\n","\nexport function parseINIString(data){\n    var regex = {\n        section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\n        param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\n        comment: /^\\s*;.*$/\n    };\n    var value = {};\n    var lines = data.split(/[\\r\\n]+/);\n    var section = null;\n    lines.forEach(function(line){\n        if(regex.comment.test(line)){\n            return;\n        }else if(regex.param.test(line)){\n            var match = line.match(regex.param);\n            if(section){\n                value[section][match[1]] = match[2];\n            }else{\n                value[match[1]] = match[2];\n            }\n        }else if(regex.section.test(line)){\n            var match = line.match(regex.section);\n            value[match[1]] = {};\n            section = match[1];\n        }else if(line.length === 0 && section){\n            section = null;\n        };\n    });\n    return value;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}