{"version":3,"sources":["components/Chart.jsx","utilities.js","ExperimentOverview.jsx","components/LogTable.jsx","components/ExperimentSummary.jsx","components/MediaCard.jsx","Experiments.jsx","components/TactileButtonNotification.jsx","components/ErrorSnackbar.jsx","ExportData.jsx","components/AutomationForm.jsx","components/ChangeAutomationsDialog.jsx","components/ActionDosingForm.jsx","components/ActionManualDosingForm.jsx","components/ActionCirculatingForm.jsx","components/ActionLEDForm.jsx","components/UnderlineSpan.jsx","Pioreactors.jsx","components/AssignLabels.jsx","StartNewExperiment.jsx","CreateExperimentProfile.jsx","EditExperimentProfile.jsx","EditConfig.jsx","components/SelectButton.jsx","Updates.jsx","Plugins.jsx","components/DisplayProfile.jsx","components/DisplaySourceCode.jsx","Profiles.jsx","components/SideNavAndHeader.jsx","components/ErrorBoundary.jsx","App.jsx","serviceWorker.js","index.js","components/PioreactorIcon.jsx"],"names":["i","colors","primary","colorMaps","getColorFromName","name","sensorRe","test","match","newPallete","shift","Chart","props","createToolTip","d","x_value","byDuration","datum","x","toFixed","format","relabelAndFormatSeries","childName","Math","round","yTransformation","y","fixedDecimals","state","seriesMap","hiddenSeries","Set","names","legendEvents","fetched","onConnect","bind","onMessageArrived","selectLegendData","selectVictoryLines","VictoryVoronoiContainer","allowZoom","createContainer","this","client","subscribe","experiment","topic","prevProps","getHistoricalDataFromServer","isLiveChart","unsubscribe","error","config","remote","ws_url","Client","floor","random","connect","userName","password","keepAliveInterval","onSuccess","reconnect","queryParams","URLSearchParams","filter_mod_N","downSample","max","min","deltaHours","lookback","experimentStartTime","moment","utc","transformX","diff","local","fetch","dataSource","dataSourceColumn","then","response","json","data","initialSeriesMap","entries","v","length","map","item","color","Object","keys","setState","createLegendEvents","catch","e","console","log","forceUpdate","set","value","delete","target","eventHandlers","onClick","_","eventKey","mutation","has","prevState","deleteAndReturnSet","add","message","retained","payloadString","payloadKey","payload","JSON","parse","timestamp","y_value","parseFloat","duration","local_timestamp","key","isPartitionedBySensor","split","push","newSeriesMap","string","slice","relabelMap","results","index","sensor","breakString","reformattedName","symbol","fill","marker","size","chartKey","style","interpolation","labels","stroke","strokeWidth","parent","border","xTransformation","maxWidth","title","domainPadding","padding","left","right","bottom","top","events","height","width","scale","theme","VictoryTheme","material","containerComponent","zoomDimension","responsive","voronoiBlacklist","labelComponent","cornerRadius","flyoutStyle","text","textAnchor","fontSize","fontFamily","tickLabels","offsetY","label","orientation","fixLabelOverlap","axisLabelComponent","dy","dx","crossAxis","dependentAxis","domain","yAxisDomain","tickFormat","t","yAxisLabel","symbolSpacer","itemsPerRow","borderPadding","cursor","gutter","rowGutter","React","Component","getConfig","setCallback","ok","Error","regex","section","param","comment","lines","forEach","line","parseINIString","getRelabelMap","runPioreactorJob","unit","job","args","options","callback","method","body","stringify","headers","Overview","useState","experimentMetadata","setExperimentMetadata","setRelabelMap","setConfig","charts","setCharts","useEffect","document","reduce","obj","chart_key","Fragment","container","spacing","justifyContent","xs","md","filter","chart","maxHeight","data_source","mqtt_topic","payload_key","y_axis_label","delta_hours","created_at","down_sample","y_axis_domain","eval","fixed_decimals","y_transformation","data_source_column","to","component","Link","textTransform","verticalAlign","margin","levelMappingToOrdinal","NOTSET","DEBUG","INFO","NOTICE","WARNING","ERROR","CRITICAL","LogTable","listOfLogs","min_level","logging","ui_log_level","logs","getData","timeout","join","pop","level","toUpperCase","pioreactor_unit","String","task","is_error","is_warning","is_notice","ts","localTs","classes","variant","fontWeight","overflowY","stickyHeader","aria-label","className","clsx","headerCell","nowrap","tightCell","smallText","noticeLog","errorLog","warningLog","timestampCell","relabelUnit","replace","withStyles","backgroundColor","tightRight","textAlign","whiteSpace","useStyles","makeStyles","cardContent","pos","marginBottom","textIcon","headerMenu","display","breakpoints","down","flexFlow","flexDirection","headerButtons","EditableDescription","saveToDatabaseOrSkip","recentChange","setTimeout","description","desc","res","status","savingLoopActive","onFocus","evt","scrollHeight","handleChange","render","htmlFor","placeholder","id","multiline","fullWidth","onChange","overflow","contentEditable","createRef","ButtonNewExperiment","confirm","useConfirm","float","confirmationText","confirmationButtonProps","cancellationButtonProps","root","ButtonEndExperiment","ExperimentSummary","startedAt","flexGrow","marginRight","MediaCard","mediaThroughputPerUnit","altMediaThroughputPerUnit","mediaThroughput","altMediaThroughput","rates","all","mediaRate","altMediaRate","activeUnits","getRecentRates","hash","object","hasOwnProperty","topicParts","destinationName","objectRef","totalRef","addOrUpdate","total","values","a","b","align","scope","marginTop","formControl","caption","marginLeft","ExperimentSelection","experiments","setExperiments","selectedExperient","find","o","experimentSelection","handleExperimentSelectionChange","labelId","sx","p","pt","gutterBottom","ChartSelection","getCharts","handleChartSelectionChange","checked","control","chartSelection","ExperimentsContainer","setExperimentSelection","setChartSelection","experimentName","chart_obj","is_checked","rest","objectToQueryString","chartKeyToDataKey","implied_growth_rate","raw_optical_density","temperature","normalized_optical_density","fraction_of_volume_that_is_alternative_media","queryString","additionalQueryString","sort","Experiments","TactileButtonNotification","setUnit","renamedUnit","setRenamedUnit","open","setOpen","qos","msg","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","transitionDuration","enter","Alert","severity","icon","AlertTitle","ErrorSnackbar","setMsg","setLevel","setTask","onFailure","endsWith","handleClose","event","reason","toLowerCase","datasetItem","recommended","datasetDescription","FormControl","FormLabel","Select","MenuItem","CheckboxesGroup","FormGroup","FormControlLabel","Checkbox","isChecked","pioreactor_unit_activity_data","Typography","growth_rates","od_readings","od_readings_filtered","temperature_readings","alt_media_fractions","pioreactor_unit_activity_data_rollup","dosing_events","led_change_events","dosing_automation_settings","led_automation_settings","temperature_automation_settings","dosing_automation_events","led_automation_events","temperature_automation_events","kalman_filter_outputs","stirring_rates","pioreactor_unit_labels","pwm_dcs","ExportDataContainer","useSearchParams","isRunning","setIsRunning","isError","setIsError","errorMsg","setErrorMsg","get","datasetCheckbox","count","acc","errorFeedbackOrDefault","Box","LoadingButton","type","loading","loadingPosition","preventDefault","some","link","createElement","filename","setAttribute","href","appendChild","click","remove","endIcon","disabled","Card","Grid","rel","ExportData","textFieldCompact","AutomationForm","defaults","assign","fields","field","default","updateParent","onSettingsChange","listOfDisplayFields","TextField","autoComplete","defaultValue","InputProps","endAdornment","InputAdornment","position","onKeyPress","unitTitle","unitTitleDialog","suptitle","defaultAutomations","dosing","led","ChangeAutomationsDialog","automationType","automationTypeForDisplay","automationName","setAutomationName","skip_first_run","algoSettings","setAlgoSettings","setClient","automations","setAutomations","openSnackbar","setOpenSnackbar","listOfAuto","auto","automation_name","onFinished","Dialog","aria-labelledby","PaperProps","DialogTitle","PioreactorIcon","IconButton","palette","grey","DialogContent","no_skip_first_run","display_name","setting","Boolean","pathname","DialogActions","Button","isJobRunning","Message","publish","fromEntries","actionTextField","actionForm","actionToAct","ActionPumpForm","mL","setML","setDuration","snackbarMsg","setSnackbarMsg","textfieldError","setTextfieldError","dosingMethod","setDosingMethod","formErrorDuration","setFormErrorDuration","formErrorML","setFormErrorML","action","RadioGroup","Radio","params","ml","source_of_event","continuously","manualAction","setManualAction","handleMLChange","manually","ActionCirculatingForm","clicked","setClicked","ActionLEDForm","re","intensity","setIntensity","errorForm","setErrorForm","validInput","onSubmit","channel","proposedIntensity","UnderlineSpan","underlineSpan","children","lostRed","readyGreen","pioreactorCard","code","disabledText","textbox","textboxLabel","footnote","textField","textFieldWide","slider","divider","jobButton","paddingRight","paddingLeft","unitSettingsSubtext","wordBreak","unitSettingsSubtextEmpty","minHeight","ledBlock","rowOfUnitSettingDisplay","flexWrap","alignItems","alignContent","testingListItemIcon","minWidth","testingListItem","paddingTop","paddingBottom","cardHeaderSettings","cardHeaderButtons","patientButton","PythonBoolToJS","pythonBoolAsString","TabPanel","other","role","hidden","UnitSettingDisplaySubtext","subtext","UnitSettingDisplay","stateDisplay","prettyPrint","isStateSetting","isUnitActive","displaySettings","isLEDIntensity","ledIntensities","LEDMap","renamedA","renamedB","renamedC","renamedD","isPWMDc","pwmDcs","PWM_TO_PIN","1","2","3","4","PWMMap","renamed1","renamed2","renamed3","renamed4","precision","formatForDisplay","measurementUnit","ButtonStopProcess","AddNewPioreactor","setName","isSuccess","setIsSuccess","successMsg","setSuccessMsg","expectedPathMsg","setExpectedPathMsg","startAdornment","newPioreactorName","PioreactorHeader","SettingsActionsDialogAll","Divider","PatientButton","buttonText","setButtonText","disableElevation","CircularProgress","CalibrateDialog","tabValue","setTabValue","createUserButtonsBasedOnState","jobState","blankODButton","odBlankJobState","stirringCalibrationButton","stirringCalibrationState","Tabs","newValue","indicatorColor","textColor","Tab","odBlankReading","k","SelfTestDialog","displayIcon","selfTestTests","publishedSettings","colorOfIcon","selfTestButton","selfTestState","List","subheader","ListSubheader","lineHeight","disableSticky","disableGutters","ListItem","ListItemIcon","ListItemText","secondary","led_pd","SettingsActionsDialog","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","rebooting","setRebooting","shuttingDown","setShuttingDown","openChangeDosingDialog","setOpenChangeDosingDialog","openChangeLEDDialog","setOpenChangeLEDDialog","openChangeTemperatureDialog","setOpenChangeTemperatureDialog","setPioreactorJobState","setPioreactorJobAttr","stopPioreactorJob","job_attr","buttons","jobs","job_key","versionInfo","monitor","versions","voltageInfo","voltage_on_pwm_rail","ipInfo","ipv4","isLargeScreen","useMediaQuery","dosingControlJob","dosing_control","dosingControlJobRunning","includes","ledControlJob","led_control","ledControlJobRunning","temperatureControlJob","temperature_control","temperatureControlJobRunning","scrollButtons","allowScrollButtonsMobile","metadata","source","dangerouslySetInnerHTML","__html","SettingTextField","onUpdate","relabeledTo","setLabel","settings","setting_key","SettingSwitchField","units","circulate_media","circulate_alt_media","add_media","remove_waste","add_alt_media","hat","hat_serial","voltage","loadingIndicator","resumeHideDuration","setJobs","listOfJobs","jobs_","metaData_","job_name","prev","sendMessage","handleRunPioreactorJobResponse","startAction","backgroundImage","setValue","activeSubmit","setActiveSumbit","Switch","ActiveUnits","cards","PioreactorCard","emptyState","FlashLEDButton","flashing","setFlashing","blinkled","jobFetchComplete","setJobFetchComplete","is_testing","parseToType","typeOfSetting","updatedJob","updatedSetting","indicatorDotColor","indicatorLabel","isActive","getInicatorLabel","sm","Tooltip","placement","boxShadow","means","InactiveUnits","Pioreactors","inactiveUnits","button","AssignLabels","setLabels","confirmed","setConfirmed","onLabelChange","accumulator","lg","disable","unit_label","skipButton","instructions","thinTextField","createFilterOptions","FreeSoloCreateOption","updateParentCallback","Autocomplete","inputValue","filterOptions","filtered","isExisting","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","ExperimentSummaryForm","formError","setFormError","helperText","setHelperText","expName","setExpName","setDescription","organismUsed","setOrganismUsed","mediaUsed","setMediaUsed","historicalMediaUsed","setHistoricalMediaUsed","historicalOrganismUsed","setHistoricalOrganismUsed","historicalExperiments","setHistoricalExperiments","required","experimentNameProposed","trim","rows","organism_used","media_used","toISOString","handleNext","StartNewExperimentContainer","activeStep","setActiveStep","skipped","setSkipped","countActiveUnits","steps","window","location","newSkipped","step","prevActiveStep","scrollTo","content","optional","mr","StartNewExperiment","EditExperimentProfilesContent","DEFAULT_CODE","DEFAULT_FILENAME","getCodeFlaskRef","codeFlask","onTextChange","isChanged","onFilenameChange","handleSnackbarClose","saveCurrentCode","saving","parsedJson","styles","direction","letterSpacing","editorRef","language","ProfilesContainer","CreateNewProfile","filenameEditable","setSource","EditProfile","EditableCodeDiv","onSelectionChange","getHistoricalConfigFiles","onSelectionHistoricalChange","ix","historicalConfigs","findIndex","c","configBlob","timestamp_ix","hasChangedSinceSave","availableConfigs","deleteConfig","listOfHistoricalConfigs","reload","getListOfConfigFiles","displayEmpty","EditConfigContainer","EditConfig","buttonStyle","buttonDropdown","SelectButton","forwardRef","ref","textPrefix","initialValue","anchorRef","useRef","isOpen","valueRef","current","items","Children","child","selected","valueReadable","defineProperty","writable","aria-selected","undefined","data-value-readable","data-value","ButtonGroup","Menu","getContentAnchorEl","anchorEl","transformOrigin","displayName","VisuallyHiddenInput","styled","clip","clipPath","UploadArchiveAndConfirm","selectedFile","setSelectedFile","handleFileUpload","formData","FormData","append","errorData","save_path","handleUpdate","savePath","release_archive_location","handleUploadClick","aria-describedby","DialogContentText","file","files","accept","UpdateSoftwareConfirmDialog","updating","setUpdating","installOption","setInstallOption","showArchiveConfirm","setShowArchiveConfirm","getTitle","getDescription","PageHeader","version","setVersion","uiVersion","setUIVersion","latestVersion","setLatestVersion","getCurrentUIVersion","getCurrentAppVersion","getLatestAppVersion","underline","ChangelogContainer","changelog","setChangelog","markdown","Updates","pluginList","primaryActionButton","secondaryActionButton","InstallByNameDialog","setText","plugin_name","ListSuggestedPlugins","alreadyInstalledPluginsNames","availablePlugins","setSuggestedPlugins","dense","plugin","ListItemAvatar","Avatar","primaryTypographyProps","fontStyle","author","ListItemSecondaryAction","homepage","ListInstalledPlugins","installedPlugins","startsWith","PluginContainer","setInstalledPlugins","isFetchComplete","setIsFetchComplete","Plugins","DisplayProfileCard","borderRadius","humanReadableDuration","actionType","hoursElapsed","DisplayProfile","CardContent","experiment_profile_name","mb","worker","common","actions","hours_elapsed","pioreactors","pioreactor","DisplaySourceCode","sourceCode","ExperimentProfilesContent","experimentProfilesAvailable","setExperimentProfilesAvailable","selectedExperimentProfile","setSelectedExperimentProfile","viewSource","setViewSource","dryRun","setDryRun","isProfileActive","setIsProfileActive","setRunningProfileName","profiles","profilesByKey","cur","experimentProfile","leader_hostname","profile","runningProfileName","Profiles","drawer","up","flexShrink","menuButton","drawerPaper","appBarRoot","zIndex","listItemIcon","SideNavAndHeader","useLocation","mobileOpen","setMobileOpen","getCurrentApp","getLatestVersion","handleDrawerToggle","isSelected","path","list","renderExpandIcon","active","menuItemStyles","viewBox","Badge","invisible","suffix","AppBar","Toolbar","edge","alt","src","Drawer","anchor","paper","ModalProps","keepMounted","ErrorBoundary","hasError","errorInfo","createTheme","background","main","ScrollToTop","MainSite","element","ExperimentOverview","CreateExperimentProfile","EditExperimentProfile","App","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","fillColor","fillRule","transform","cx","cy","r"],"mappings":"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","file":"static/js/main.16a94683.chunk.js","sourcesContent":["import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport {\n  VictoryChart,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryScatter,\n  VictoryGroup,\n  VictoryLegend,\n  VictoryTooltip,\n  createContainer\n} from \"victory\";\nimport moment from \"moment\";\n\nconst colors = [\n  {primary: \"#0077BB\", \"1\": \"#0077BB\", \"2\": \"#0077BB\"},\n  {primary: \"#009988\", \"1\": \"#009988\", \"2\": \"#009988\"},\n  {primary: \"#CC3311\", \"1\": \"#CC3311\", \"2\": \"#CC3311\"},\n  {primary: \"#33BBEE\", \"1\": \"#33BBEE\", \"2\": \"#33BBEE\"},\n  {primary: \"#EE7733\", \"1\": \"#EE7733\", \"2\": \"#EE7733\"},\n  {primary: \"#EE3377\", \"1\": \"#EE3377\", \"2\": \"#EE3377\"},\n  {primary: \"#BBBBBB\", \"1\": \"#BBBBBB\", \"2\": \"#BBBBBB\"},\n  {primary: \"#a6cee3\", \"1\": \"#a6cee3\", \"2\": \"#a6cee3\"},\n  {primary: \"#1f78b4\", \"1\": \"#1f78b4\", \"2\": \"#1f78b4\"},\n  {primary: \"#b2df8a\", \"1\": \"#b2df8a\", \"2\": \"#b2df8a\"},\n  {primary: \"#33a02c\", \"1\": \"#33a02c\", \"2\": \"#33a02c\"},\n  {primary: \"#fb9a99\", \"1\": \"#fb9a99\", \"2\": \"#fb9a99\"},\n  {primary: \"#e31a1c\", \"1\": \"#e31a1c\", \"2\": \"#e31a1c\"},\n  {primary: \"#fdbf6f\", \"1\": \"#fdbf6f\", \"2\": \"#fdbf6f\"},\n  {primary: \"#ff7f00\", \"1\": \"#ff7f00\", \"2\": \"#ff7f00\"},\n  {primary: \"#cab2d6\", \"1\": \"#cab2d6\", \"2\": \"#cab2d6\"},\n  {primary: \"#6a3d9a\", \"1\": \"#6a3d9a\", \"2\": \"#6a3d9a\"},\n  {primary: \"#ffff99\", \"1\": \"#ffff99\", \"2\": \"#ffff99\"},\n  {primary: \"#b15928\", \"1\": \"#b15928\", \"2\": \"#b15928\"},\n];\n\nconst colorMaps = {}\n\nfunction getColorFromName(name){\n  if (name in colorMaps){\n    return colorMaps[name]\n  }\n\n  let sensorRe = /(.*)-[1234]/;\n  if (sensorRe.test(name)){\n    let primaryName = name.match(sensorRe)[1]\n    return getColorFromName(primaryName)\n  }\n  else{\n    var newPallete = colors.shift()\n    colorMaps[name] = newPallete.primary\n    colorMaps[name + \"-1\"] = newPallete[\"1\"]\n    colorMaps[name + \"-2\"] = newPallete[\"2\"]\n    colorMaps[name + \"-3\"] = newPallete[\"3\"]\n    colorMaps[name + \"-4\"] = newPallete[\"4\"]\n    return getColorFromName(name)\n  }\n}\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesMap: {},\n      hiddenSeries: new Set(),\n      names: [],\n      legendEvents: [],\n      fetched: false,\n    };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.selectLegendData = this.selectLegendData.bind(this);\n    this.selectVictoryLines = this.selectVictoryLines.bind(this);\n    this.yTransformation = this.props.yTransformation || ((y) => y)\n    this.VictoryVoronoiContainer = (this.props.allowZoom  || false) ? createContainer(\"zoom\", \"voronoi\") : createContainer(\"voronoi\");\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      `pioreactor/+/${this.props.experiment}/${this.props.topic}`\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.experiment !== this.props.experiment) {\n      this.getHistoricalDataFromServer()\n\n      if (this.props.isLiveChart){\n        try{\n          this.client.unsubscribe(\n            `pioreactor/+/${prevProps.experiment}/${prevProps.topic}`\n          )\n          this.client.subscribe(\n            `pioreactor/+/${this.props.experiment}/${this.props.topic}`\n          )\n        }\n        catch (error){\n          // not important.\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getHistoricalDataFromServer()\n\n    if (!this.props.isLiveChart){\n      return\n    }\n\n\n    if (!this.props.config || !this.props.config['cluster.topology']){\n      return\n    }\n\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `${this.props.config.remote.ws_url}/`,\n        \"webui_Chart\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_Chart\" + Math.floor(Math.random()*10000)\n      );\n    }\n\n    this.client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15,  onSuccess: this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  async getHistoricalDataFromServer() {\n    if (!this.props.experiment){\n      return\n    }\n    const tweak = 0.60 // increase to filter more\n    const queryParams = new URLSearchParams({\n        filter_mod_N: this.props.downSample ? Math.max(Math.floor(tweak * Math.min(this.props.deltaHours, this.props.lookback)), 1) : 1,\n        lookback: this.props.lookback\n    })\n\n    var transformX\n    if (this.props.byDuration){\n      const experimentStartTime = moment.utc(this.props.experimentStartTime)\n      transformX = (x) => Math.round(moment.utc(x, 'YYYY-MM-DDTHH:mm:ss.SSSSS').diff(experimentStartTime, 'hours', true) * 1e3)/1e3\n    } else {\n      transformX = (x) => moment.utc(x, 'YYYY-MM-DDTHH:mm:ss.SSSSS').local()\n    }\n\n    await fetch(`/api/time_series/${this.props.dataSource}/${this.props.experiment}${this.props.dataSourceColumn ? \"/\" + this.props.dataSourceColumn : \"\"}?${queryParams}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let initialSeriesMap = {};\n        for (const [i, v] of data[\"series\"].entries()) {\n          if (data[\"data\"][i].length > 0) {\n            initialSeriesMap[v] = {\n              data: (data[\"data\"][i]).map(item => ({y: item.y, x: transformX(item.x) })),\n              name: v,\n              color: getColorFromName(v),\n            };\n          }\n        }\n        let names = Object.keys(initialSeriesMap);\n        this.setState({\n          seriesMap: initialSeriesMap,\n          legendEvents: this.createLegendEvents(),\n          names: names,\n          fetched: true\n        });\n      })\n      .catch((e) => {\n        console.log(e)\n        this.setState({fetched: true})\n      });\n      this.forceUpdate()\n\n  }\n\n  deleteAndReturnSet(set, value){\n    set.delete(value)\n    return set\n  }\n\n  createLegendEvents() {\n    return [{\n      childName: \"legend\",\n      target: \"data\",\n      eventHandlers: {\n        onClick: (_, props) => {\n          return [\n            {\n              childName: props.datum.name,\n              target: \"data\",\n              eventKey: \"all\",\n              mutation: () => {\n                if (!this.state.hiddenSeries.has(props.datum.name)) {\n                  // Was not already hidden => add to set\n                  this.setState((prevState) => ({\n                    hiddenSeries: prevState.hiddenSeries.add(props.datum.name)\n                  }));\n                } else {\n                  // remove from set\n                  this.setState((prevState) => ({\n                    hiddenSeries: this.deleteAndReturnSet(prevState.hiddenSeries, props.datum.name)\n                  }));\n                }\n                return null;\n              },\n            },\n          ];\n        },\n      },\n    }]\n  }\n\n  onMessageArrived(message) {\n    if (!this.state.fetched){\n      return\n    }\n    if (message.retained){\n      return\n    }\n\n    if (!message.payloadString){\n      return\n    }\n\n    if (this.props.payloadKey){\n      var payload = JSON.parse(message.payloadString)\n      var timestamp = moment.utc(payload.timestamp)\n      var y_value = parseFloat(payload[this.props.payloadKey])\n    } else {\n      y_value = parseFloat(message.payloadString)\n      timestamp = moment.utc()\n    }\n    var duration = Math.round(timestamp.diff(moment.utc(this.props.experimentStartTime), 'hours', true) * 1e3)/1e3\n    var local_timestamp = timestamp.local()\n    const x_value = this.props.byDuration ? duration : local_timestamp\n\n    var key = this.props.isPartitionedBySensor\n      ? message.topic.split(\"/\")[1] + \"-\" + message.topic.split(\"/\")[5]\n      : message.topic.split(\"/\")[1];\n\n    try {\n      if (!(key in this.state.seriesMap)){\n        const newSeriesMap = {...this.state.seriesMap, [key]:  {\n          data: [{x: x_value, y: y_value}],\n          name: key,\n          color: getColorFromName(key)\n        }}\n\n        this.setState({ seriesMap: newSeriesMap })\n        this.setState({\n          names: [...this.state.names, key]\n        })\n      } else {\n        // .push seems like bad state management, and maybe a hit to performance...\n        this.state.seriesMap[key].data.push({\n          x: x_value,\n          y: y_value,\n        });\n        this.setState({ seriesMap: this.state.seriesMap })\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n    return;\n  }\n\n  xTransformation(x){\n    return x\n  }\n\n  breakString(string){\n    if (string.length > 12){\n      return string.slice(0, 5) + \"...\" + string.slice(string.length-2, string.length)\n    }\n    return string\n  }\n\n  relabelAndFormatSeries(name){\n    if (!this.props.relabelMap){\n      return name\n    }\n\n    if (name.match(/(.*)-([1234])/g)){\n      const results = name.match(/(.*)-([1234])/);\n      const index = results[1];\n      const sensor = results[2];\n      return this.breakString(this.props.relabelMap[index] || index) + \"-ch\" + sensor\n    }\n    else {\n      return this.breakString(this.props.relabelMap[name] || name)\n    }\n  }\n\n\n\n  createToolTip = (d) => {\n    var x_value\n    if (this.props.byDuration) {\n      x_value = `${d.datum.x.toFixed(2)} hours elapsed`\n    } else {\n      x_value = d.datum.x.format(\"MMM DD HH:mm\")\n    }\n\n    return `${x_value}\n${this.relabelAndFormatSeries(d.datum.childName)}: ${Math.round(this.yTransformation(d.datum.y) * 10 ** this.props.fixedDecimals) / 10 ** this.props.fixedDecimals}`\n  }\n\n\n  selectLegendData(name){\n    var reformattedName = this.relabelAndFormatSeries(name)\n    if (!this.state.seriesMap) {\n      return {}\n    }\n    const line = this.state.seriesMap[name];\n    const item = {\n      name: reformattedName,\n      symbol: { fill: line.color },\n    };\n    if (this.state.hiddenSeries.has(reformattedName)) {\n      return { ...item, symbol: { fill: \"white\" } };\n    }\n    return item;\n  }\n\n  selectVictoryLines(name) {\n    var reformattedName = this.relabelAndFormatSeries(name)\n\n    var marker = null;\n    if (this.state.seriesMap[name].data.length === 1){\n      marker = <VictoryScatter\n          size={4}\n          key={\"line-\" + reformattedName + this.props.chartKey}\n          name={reformattedName}\n          style={{\n            data: {\n              fill: this.state.seriesMap[name].color\n            },\n          }}\n        />\n    }\n    else {\n        marker = <VictoryLine\n          interpolation={this.props.interpolation}\n          key={\"line-\" + reformattedName + this.props.chartKey}\n          name={reformattedName}\n          style={{\n            labels: {fill: this.state.seriesMap[name].color},\n            data: {\n              stroke: this.state.seriesMap[name].color,\n              strokeWidth: 2,\n            },\n            parent: { border: \"1px solid #ccc\" },\n          }}\n        />\n    }\n\n    return (\n      <VictoryGroup\n        key={this.props.chartKey}\n        data={(this.state.hiddenSeries.has(reformattedName)) ? [] : this.state.seriesMap[name].data}\n        x={(datum) => this.xTransformation(datum.x)}\n        y={(datum) => this.yTransformation(datum.y)}\n      >\n        {marker}\n\n      </VictoryGroup>\n    );\n  }\n\n  render() {\n    return (\n        <VictoryChart\n          style={{ parent: { maxWidth: \"700px\"}}}\n          title={this.props.title}\n          domainPadding={10}\n          padding={{ left: 70, right: 50, bottom: 80, top: 50 }}\n          events={this.state.legendEvents}\n          height={315}\n          width={600}\n          scale={{x: this.props.byDuration ? 'linear' : \"time\"}}\n          theme={VictoryTheme.material}\n          containerComponent={\n           <this.VictoryVoronoiContainer\n             zoomDimension={'x'}\n             responsive={true}\n             voronoiBlacklist={['parent']}\n             labels={this.createToolTip}\n             labelComponent={\n               <VictoryTooltip\n                 cornerRadius={0}\n                 flyoutStyle={{\n                   fill: \"white\",\n                   stroke: \"#90a4ae\",\n                   strokeWidth: 1.5,\n                 }}\n               />\n             }\n\n           />\n          }\n        >\n          <VictoryLabel\n            text={this.props.title}\n            x={300}\n            y={30}\n            textAnchor=\"middle\"\n            style={{\n              fontSize: 16,\n              fontFamily: \"inherit\",\n            }}\n          />\n          <VictoryAxis\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n            offsetY={80}\n            label={this.props.byDuration ? \"Hours\" : \"Time\"}\n            orientation=\"bottom\"\n            fixLabelOverlap={true}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-15}\n                dx={262}\n                style={{\n                  fontSize: 12,\n                  fontFamily: \"inherit\",\n                  fill: \"grey\",\n                }}\n              />\n            }\n          />\n          <VictoryAxis\n            crossAxis={false}\n            dependentAxis\n            domain={this.props.allowZoom ? null : this.props.yAxisDomain}\n            tickFormat={(t) => `${t.toFixed(this.props.fixedDecimals)}`}\n            label={this.props.yAxisLabel}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-41}\n                style={{\n                  fontSize: 15,\n                  padding: 10,\n                  fontFamily: \"inherit\",\n                }}\n              />\n            }\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n          />\n          <VictoryLegend\n            x={65}\n            y={270}\n            symbolSpacer={6}\n            itemsPerRow={4}\n            name=\"legend\"\n            borderPadding={{ right: 8 }}\n            orientation=\"horizontal\"\n            cursor=\"pointer\"\n            gutter={15}\n            rowGutter={5}\n            style={{\n              labels: { fontSize: 13 },\n              data: { stroke: \"#485157\", strokeWidth: 0.5, size: 6.5 },\n            }}\n            data={this.state.names.map(this.selectLegendData)}\n          />\n          {Object.keys(this.state.seriesMap).map(this.selectVictoryLines)}\n        </VictoryChart>\n    );\n  }\n}\n\nexport default Chart;\n","\nfunction parseINIString(data){\n    var regex = {\n        section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\n        param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\n        comment: /^\\s*;.*$/\n    };\n    var value = {};\n    var lines = data.split(/[\\r\\n]+/);\n    var section = null;\n    lines.forEach(function(line){\n        if(regex.comment.test(line)){\n            return;\n        }else if(regex.param.test(line)){\n            var match = line.match(regex.param);\n            if(section){\n                value[section][match[1]] = match[2];\n            }else{\n                value[match[1]] = match[2];\n            }\n        }else if(regex.section.test(line)){\n            var match = line.match(regex.section);\n            value[match[1]] = {};\n            section = match[1];\n        }else if(line.length === 0 && section){\n            section = null;\n        };\n    });\n    return value;\n}\n\n\nexport function getConfig(setCallback) {\n  fetch(\"/api/configs/config.ini\")\n    .then((response) => {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error('Something went wrong');\n        }\n      })\n    .then((config) => {\n      setCallback(parseINIString(config));\n    })\n    .catch((error) => {})\n}\n\nexport function getRelabelMap(setCallback, experiment=\"current\") {\n  fetch(`/api/unit_labels/${experiment}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setCallback(data)\n  });\n}\n\n\n\nexport function runPioreactorJob(unit, job, args = [], options = {}, callback) {\n    fetch(`/api/run/${unit}/${job}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ args: args, options: options }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    }).then(response => {\n      if (callback && typeof callback === 'function') {\n        callback(response);\n      }\n    });\n}\n","import React from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport LogTable from \"./components/LogTable\";\nimport ExperimentSummary from \"./components/ExperimentSummary\";\nimport Chart from \"./components/Chart\";\nimport MediaCard from \"./components/MediaCard\";\nimport { Link } from 'react-router-dom';\nimport {getConfig, getRelabelMap} from \"./utilities\"\nimport Card from \"@mui/material/Card\";\nimport ListAltOutlinedIcon from '@mui/icons-material/ListAltOutlined';\n\nfunction Overview(props) {\n\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n  const [relabelMap, setRelabelMap] = React.useState({})\n  const [config, setConfig] = React.useState({})\n  const [charts, setCharts] = React.useState({})\n\n  React.useEffect(() => {\n    document.title = props.title;\n\n    function getLatestExperiment() {\n        fetch(\"/api/experiments/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n\n    function getCharts() {\n        fetch(\"/api/contrib/charts\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setCharts(data.reduce((map, obj) => (map[obj.chart_key] = obj, map), {}))\n        });\n      }\n\n\n    getLatestExperiment()\n    getCharts()\n    getRelabelMap(setRelabelMap)\n    getConfig(setConfig)\n  }, [props.title])\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} justifyContent=\"space-between\">\n\n        <Grid item xs={12} md={12}>\n          <ExperimentSummary experimentMetadata={experimentMetadata}/>\n        </Grid>\n\n\n        <Grid item xs={12} md={7} container spacing={2} justifyContent=\"flex-start\" style={{height: \"100%\"}}>\n          {Object.entries(charts)\n            .filter(([chart_key, _]) => config['ui.overview.charts'] && (config['ui.overview.charts'][chart_key] === \"1\"))\n            .map(([chart_key, chart]) =>\n              <React.Fragment key={`grid-chart-${chart_key}`}>\n                <Grid item xs={12} >\n                  <Card style={{ maxHeight: \"100%\"}}>\n                    <Chart\n                      key={`chart-${chart_key}`}\n                      chartKey={chart_key}\n                      config={config}\n                      dataSource={chart.data_source}\n                      title={chart.title}\n                      topic={chart.mqtt_topic}\n                      payloadKey={chart.payload_key}\n                      yAxisLabel={chart.y_axis_label}\n                      experiment={experimentMetadata.experiment}\n                      deltaHours={experimentMetadata.delta_hours}\n                      experimentStartTime={experimentMetadata.created_at}\n                      downSample={chart.down_sample}\n                      interpolation={chart.interpolation || \"stepAfter\"}\n                      yAxisDomain={chart.y_axis_domain ? chart.y_axis_domain : null}\n                      lookback={chart.lookback ? eval(chart.lookback) : 10000}\n                      fixedDecimals={chart.fixed_decimals}\n                      relabelMap={relabelMap}\n                      yTransformation={eval(chart.y_transformation || \"(y) => y\")}\n                      dataSourceColumn={chart.data_source_column}\n                      isPartitionedBySensor={chart_key === \"raw_optical_density\"}\n                      isLiveChart={true}\n                      byDuration={config['ui.overview.settings']['time_display_mode'] === 'hours'}\n                    />\n                  </Card>\n                </Grid>\n              </React.Fragment>\n\n        )}\n        </Grid>\n\n        <Grid item xs={12} md={5} container spacing={1} justifyContent=\"flex-end\" style={{height: \"100%\"}}>\n\n\n          {( config['ui.overview.cards'] && (config['ui.overview.cards']['dosings'] === \"1\")) &&\n            <Grid item xs={12} >\n              <MediaCard experiment={experimentMetadata.experiment} config={config} relabelMap={relabelMap}/>\n            </Grid>\n          }\n\n\n          {( config['ui.overview.cards'] && (config['ui.overview.cards']['event_logs'] === \"1\")) &&\n            <Grid item xs={12}>\n              <LogTable byDuration={config['ui.overview.settings']['time_display_mode'] === 'hours'} experimentStartTime={experimentMetadata.created_at} experiment={experimentMetadata.experiment} config={config} relabelMap={relabelMap}/>\n              <Button to={`/export-data?experiment=${experimentMetadata.experiment}&logs=1`} component={Link} color=\"primary\" style={{textTransform: \"none\", verticalAlign: \"middle\", margin: \"0px 3px\"}}>\n                <ListAltOutlinedIcon style={{ fontSize: 17, margin: \"0px 3px\"}} color=\"primary\"/> Export all logs\n              </Button>\n            </Grid>\n          }\n\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\nexport default Overview;\n","import React from 'react'\n\nimport clsx from 'clsx';\nimport {Client} from 'paho-mqtt';\nimport moment from 'moment';\n\n\nimport {withStyles} from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"6px 6px 6px 10px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n  errorLog: {\n    backgroundColor: \"#ff7961\"\n  },\n  warningLog: {\n    backgroundColor: \"#FFEA8A\"\n  },\n  noticeLog: {\n    backgroundColor: \"#addcaf\"\n  },\n  nowrap: {\n    whiteSpace: \"nowrap\",\n  }\n});\n\nconst levelMappingToOrdinal = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  NOTICE: 2.5,\n  WARNING: 3,\n  ERROR: 4,\n  CRITICAL: 5\n}\n\n\nclass LogTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {listOfLogs: []};\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getData() {\n    await fetch(\"/api/logs/recent?\" + new URLSearchParams({\n        min_level: this.props.config.logging.ui_log_level\n      }))\n      .then(response => {\n        return response.json();\n      })\n      .then(logs => {\n        this.setState({listOfLogs: logs.map((log, index) => {\n          return {...log, key: index};\n          })\n        })\n      }).catch((e) => {\n        console.log(e)\n      });\n  }\n\n  componentDidMount() {\n    this.getData()\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `${this.props.config.remote.ws_url}/`,\n        \"webui_LogTable\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_LogTable\" + Math.floor(Math.random()*10000)\n      );\n    }\n    this.client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, timeout: 180, 'onSuccess': this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getData()\n     }\n  }\n\n  onConnect() {\n    this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"logs\", \"+\"].join(\"/\"))\n    this.client.subscribe([\"pioreactor\", \"+\", \"$experiment\",         \"logs\", \"+\"].join(\"/\"))\n  }\n\n  onMessageArrived(message) {\n    if (this.state.listOfLogs.length > 50){\n      this.state.listOfLogs.pop()\n    }\n    const unit = message.topic.split(\"/\")[1]\n    const payload = JSON.parse(message.payloadString)\n\n    if (levelMappingToOrdinal[payload.level.toUpperCase()] < levelMappingToOrdinal[this.props.config.logging.ui_log_level.toUpperCase()]){\n      return\n    }\n\n    this.setState({\n      listOfLogs: [\n      {\n        timestamp: moment.utc().format('YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]'),\n        pioreactor_unit: unit,\n        message: String(payload.message),\n        task: payload.task, is_error: (payload.level === \"ERROR\"),\n        is_warning: (payload.level === \"WARNING\"),\n        is_notice: (payload.level === \"NOTICE\"),\n        key: Math.random()\n      }\n    , ...this.state.listOfLogs]\n    });\n  }\n\n  relabelUnit(unit) {\n    return (this.props.relabelMap && this.props.relabelMap[unit]) ? `${this.props.relabelMap[unit]} / ${unit}` : unit\n  }\n\n  timestampCell(timestamp) {\n    const ts = moment.utc(timestamp, 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]')\n    const localTs = ts.local()\n    if (this.props.byDuration){\n      const deltaHours = Math.round(ts.diff(this.props.experimentStartTime, 'hours', true) * 1e2)/1e2\n      return <span title={localTs.format('YYYY-MM-DD HH:mm:ss.SS')}> {deltaHours} h </span>\n    }\n    else {\n      return <span title={localTs.format('YYYY-MM-DD HH:mm:ss.SS')}>{localTs.format('HH:mm:ss')} </span>\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"h2\">\n            <Box fontWeight=\"fontWeightRegular\">\n              Recent event logs\n            </Box>\n          </Typography>\n          <TableContainer style={{ height: \"660px\", width: \"100%\", overflowY: \"scroll\"}}>\n            <Table stickyHeader size=\"small\" aria-label=\"log table\">\n               <TableHead>\n                <TableRow>\n                  <TableCell className={clsx(classes.headerCell)}>Time</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Pioreactor</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Source</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Message</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {this.state.listOfLogs.map(log => (\n                  <TableRow key={log.key}>\n                    <TableCell className={clsx(classes.nowrap, classes.tightCell, classes.smallText, {[classes.noticeLog]: log.is_notice, [classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>\n                      {this.timestampCell(log.timestamp)}\n                    </TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.noticeLog]: log.is_notice, [classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {this.relabelUnit(log.pioreactor_unit)}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.noticeLog]: log.is_notice, [classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.task.replace(/_/g, ' ')}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.noticeLog]: log.is_notice, [classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.message}</TableCell>\n                  </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    );}\n}\n\n\n\nexport default withStyles(useStyles)(LogTable);\n","import React from 'react'\nimport moment from \"moment\";\nimport Card from '@mui/material/Card';\nimport {makeStyles} from '@mui/styles';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport TimelapseIcon from '@mui/icons-material/Timelapse';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useConfirm } from 'material-ui-confirm';\nimport { Link } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"}\n}));\n\n\n\nclass EditableDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef();\n    this.state = {\n      desc: \"\",\n      recentChange: false,\n      savingLoopActive: false\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({desc: this.props.description})\n    }\n  }\n\n  saveToDatabaseOrSkip = () => {\n    if (this.state.recentChange) {\n      this.setState({recentChange: false})\n      setTimeout(this.saveToDatabaseOrSkip, 150)\n    } else {\n      fetch(`/api/experiments/${this.props.experiment}`, {\n          method: \"PATCH\",\n          body: JSON.stringify({description: this.state.desc}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status !== 200){\n            console.log(\"Didn't save successfully.\")\n          }\n        })\n        this.setState({savingLoopActive: false})\n      }\n  }\n\n  onFocus = evt => {\n    evt.target.style.height = evt.target.scrollHeight + 'px'\n  }\n\n  handleChange = evt => {\n    evt.target.style.height = evt.target.scrollHeight + 'px'\n    this.setState({desc: evt.target.value});\n    this.setState({recentChange: true})\n    if (this.state.savingLoopActive){\n      return\n    }\n    else {\n      this.setState({savingLoopActive: true})\n      setTimeout(this.saveToDatabaseOrSkip, 150)\n    }\n  };\n\n\n  render = () => {\n    return (\n      <div style={{padding: \"0px 5px 0px 5px\"}}>\n        <InputLabel htmlFor=\"description-box\">Description</InputLabel>\n        <OutlinedInput\n          placeholder={\"Provide a description of your experiment.\"}\n          id=\"description-box\"\n          multiline\n          fullWidth={true}\n          onChange={this.handleChange}\n          value={this.state.desc}\n          style={{padding: \"10px 5px 10px 5px\",  fontSize: \"14px\", fontFamily: \"Roboto\", width: \"100%\", overflow: \"hidden\"}}\n        />\n      </div>\n    )\n  };\n};\n\n\nconst ButtonNewExperiment = () => {\n  const classes = useStyles();\n  const confirm = useConfirm();\n\n  const handleClick = () => {\n    confirm({\n      description: 'Starting a new experiment will stop data collection for the current experiment. Do you wish to proceed?',\n      title: \"Start a new experiment?\",\n      confirmationText: \"Confirm\",\n      confirmationButtonProps: {color: \"primary\", to: \"/start-new-experiment\", component: Link},\n      cancellationButtonProps: {color: \"secondary\"},\n    })\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClick}>\n        <AddIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> New experiment\n      </Button>\n    </React.Fragment>\n  );\n}\n\nconst ButtonEndExperiment = () =>{\n  const classes = useStyles();\n  const confirm = useConfirm();\n\n  const handleClick = () => {\n    confirm({\n      description: 'This will stop all activities (stirring, dosing, etc.) in all Pioreactor units. Do you wish to end the experiment?',\n      title: \"End experiment?\",\n      confirmationText: \"Confirm\",\n      confirmationButtonProps: {color: \"primary\"},\n      cancellationButtonProps: {color: \"secondary\"},\n\n      }).then(() =>\n        fetch(\"/api/stop_all\", {method: \"POST\"})\n    )\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClick}>\n        <ClearIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> End experiment\n      </Button>\n    </React.Fragment>\n  );\n}\n\n\nfunction ExperimentSummary(props){\n  const classes = useStyles();\n  const experiment = props.experimentMetadata.experiment || \"\"\n  const startedAt = props.experimentMetadata.created_at || \"\"\n  const desc = props.experimentMetadata.description || \"\"\n  const deltaHours = props.experimentMetadata.delta_hours || 0\n\n  return(\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h1\">\n            <Box fontWeight=\"fontWeightBold\">{experiment}</Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <ButtonNewExperiment/>\n            <ButtonEndExperiment/>\n          </div>\n        </div>\n\n        <Divider/>\n        <div style={{margin: \"10px 2px 10px 2px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"}}>\n          <Typography variant=\"subtitle2\" style={{flexGrow: 1}}>\n            <div style={{display:\"inline\"}}>\n              <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\"}}>\n                <CalendarTodayIcon style={{ fontSize: 12, verticalAlign: \"-1px\" }}/> Experiment created:&nbsp;\n              </Box>\n              <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"1%\", display:\"inline-block\"}}>\n                {(startedAt !== \"\") &&\n                <span title={moment(startedAt).format(\"YYYY-MM-DD HH:mm:ss\")}>{moment(startedAt).format(\"dddd, MMMM D, h:mm a\")}</span>\n                }\n              </Box>\n            </div>\n\n            <div style={{display:\"inline\"}}>\n              <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\"}}>\n                <TimelapseIcon style={{ fontSize: 12, verticalAlign: \"-1px\"  }}/>Time elapsed:&nbsp;\n              </Box>\n              <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"1%\", display:\"inline-block\"}}>\n               {deltaHours}h\n              </Box>\n            </div>\n\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableDescription experiment={experiment} description={desc} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  )\n}\n\n\nexport default ExperimentSummary;\n","import React from 'react'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport {Client} from 'paho-mqtt';\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport {withStyles} from '@mui/styles';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport PioreactorIcon from \"./PioreactorIcon\"\n\n\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n});\n\n\n\nclass MediaCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mediaThroughputPerUnit: {},\n        altMediaThroughputPerUnit: {},\n        mediaThroughput: 0,\n        altMediaThroughput: 0,\n        rates: {all: {mediaRate: 0, altMediaRate: 0}},\n        activeUnits: []\n      };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getRecentRates() {\n\n     await fetch(\"/api/media_rates/current\")\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(prevState => ({...prevState, rates: data}))\n    });\n    return\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getRecentRates()\n     }\n  }\n\n  componentDidMount() {\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `${this.props.config.remote.ws_url}/`,\n        \"webui_MediaCard\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_MediaCard\" + Math.floor(Math.random()*10000)\n      );\n    }\n\n    this.client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, timeout: 180, 'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n    this.setState({activeUnits: Object.entries(this.props.config['cluster.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0])})\n    this.getRecentRates()\n  }\n\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"dosing_automation\", \"alt_media_throughput\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"dosing_automation\", \"media_throughput\"].join(\"/\"))\n  }\n\n  addOrUpdate(hash, object, value) {\n      if (Object.hasOwnProperty(hash)){\n        object[hash] = value + object[hash]\n      }\n      else{\n        object[hash] = value\n      }\n      return object\n  }\n\n  onMessageArrived(message) {\n    const topic = message.destinationName\n    const topicParts = topic.split(\"/\")\n    const payload = parseFloat(message.payloadString)\n    const unit = topicParts[1]\n    const objectRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughputPerUnit\"  : \"mediaThroughputPerUnit\"\n    const totalRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughput\"  : \"mediaThroughput\"\n\n    this.setState({\n      [objectRef]: this.addOrUpdate(unit, this.state[objectRef], payload)\n    });\n\n    var total = Object.values(this.state[objectRef]).reduce((a, b) => a + b, 0)\n\n    this.setState({\n      [totalRef]: total\n    })\n  }\n\n  relabelUnit(unit) {\n    return (this.props.relabelMap && this.props.relabelMap[unit]) ? `${this.props.relabelMap[unit]} / ${unit}` : unit\n  }\n\n  render(){\n    return (\n    <Card style={{marginBottom: \"6px\"}}>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          <Box fontWeight=\"fontWeightRegular\">\n            Dosing\n          </Box>\n        </Typography>\n       <TableContainer style={{ width: \"100%\"}}>\n          <Table size=\"small\" aria-label=\"media throughput\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{padding: \"6px 0px\"}}></TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Media</TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Alt. Media</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"all\">\n                <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                  All Pioreactors\n                </TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.mediaThroughput.toFixed(1)}mL (~{this.state.rates.all.mediaRate.toFixed(1)}mL/h)</TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.altMediaThroughput.toFixed(1)}mL (~{this.state.rates.all.altMediaRate.toFixed(1)}mL/h)</TableCell>\n              </TableRow>\n\n              {this.state.activeUnits.map((unit) => (\n                <TableRow key={unit}>\n                  <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                      <PioreactorIcon style={{ fontSize: 14, verticalAlign: \"middle\" }} color=\"inherit\"/>{this.relabelUnit(unit)}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.mediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].mediaRate.toFixed(1) : \"0.0\"}mL/h)</TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.altMediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].altMediaRate.toFixed(1): \"0.0\"}mL/h)</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  )}\n}\n\nexport default  withStyles(useStyles)(MediaCard);\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Chart from \"./components/Chart\";\nimport { makeStyles } from '@mui/styles';\nimport Select from '@mui/material/Select';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {getConfig, getRelabelMap} from \"./utilities\"\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport { Link } from 'react-router-dom';\n\n// TODO:\n// figure out how to display lots of data from long-running experiments without breaking the thing,\n//\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n  const [experiments, setExperiments] = React.useState([])\n  const selectedExperient = experiments.find(o => o.experiment === props.experimentSelection);\n\n  React.useEffect(() => {\n    async function getData() {\n       await fetch(\"/api/experiments\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExperiments(prevState => [ ...data, ...prevState])\n        props.handleExperimentSelectionChange(data[0].experiment)\n      });\n    }\n    getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleExperimentSelectionChange(e.target.value)\n  }\n\n\n  return (\n    <div style={{maxWidth: \"450px\", margin: \"10px\"}}>\n      <FormControl fullWidth component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Experiment</FormLabel>\n        <Select\n          labelId=\"expSelect\"\n          variant=\"standard\"\n          value={props.experimentSelection}\n          onChange={handleExperimentSelectionChange}\n        >\n          {experiments.map((v) => {\n            return <MenuItem key={v.experiment} value={v.experiment}>{v.experiment +  (v.created_at ? ` (${moment(v.created_at).format(\"MMMM D, YYYY\")})` : \"\")}</MenuItem>\n            }\n          )}\n        </Select>\n      </FormControl>\n      <Box sx={{ p: 2, pt: 0 }}>\n        <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\n          Experiment created\n        </Typography>\n        <Typography variant=\"body2\" style={{whiteSpace: \"pre-line\"}} gutterBottom>\n          {moment(selectedExperient?.created_at).format(\"MMMM D, YYYY, h:mm a\")}\n        </Typography>\n        <Typography sx={{ fontSize: 16, pt: 1}} color=\"text.secondary\" gutterBottom>\n          Description\n        </Typography>\n        <Typography variant=\"body2\" style={{whiteSpace: \"pre-line\"}}>\n          {selectedExperient?.description}\n        </Typography>\n      </Box>\n    </div>\n  )\n}\n\n\nfunction ChartSelection(props) {\n  const classes = useStyles();\n\n  const [charts, setCharts] = React.useState({})\n\n  React.useEffect(() => {\n    async function getCharts() {\n        await fetch(\"/api/contrib/charts\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setCharts(data.reduce((map, obj) => (map[obj.chart_key] = obj, map), {}))\n        });\n      }\n    getCharts()\n  }, [])\n\n  const handleChange = (e) => {\n      props.handleChartSelectionChange(charts[e.target.name], e.target.checked)\n    };\n\n  return (\n    <div style={{maxWidth: \"450px\", margin: \"10px\"}}>\n      <FormControl fullWidth component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Charts</FormLabel>\n        <FormGroup>\n          {Object.entries(charts)\n            .filter(([chart_key, _]) => props.config['ui.overview.charts'] && (props.config['ui.overview.charts'][chart_key] === \"1\"))\n            .map(([chart_key, chart]) =>\n            <FormControlLabel\n              key={chart_key}\n              control={\n                <Checkbox checked={chart_key in props.chartSelection} onChange={handleChange} name={chart_key} size=\"small\"/>\n              }\n              label={chart.title}/>\n            )}\n        </FormGroup>\n      </FormControl>\n    </div>\n  )\n}\n\n\n\nfunction ExperimentsContainer(props) {\n  const classes = useStyles();\n\n  const [experimentSelection, setExperimentSelection] = React.useState(\"\")\n  const [chartSelection, setChartSelection] = React.useState({})\n  const [config, setConfig] = React.useState({})\n  const [relabelMap, setRelabelMap] = React.useState({})\n\n\n  React.useEffect(() => {\n    document.title = props.title;\n    getConfig(setConfig)\n\n  }, [props.title]);\n\n  function handleExperimentSelectionChange(experimentName) {\n    setExperimentSelection(experimentName)\n    getRelabelMap(setRelabelMap, experimentName)\n  };\n\n  function handleChartSelectionChange(chart_obj, is_checked) {\n    if (is_checked){\n      setChartSelection({ ...chartSelection, [chart_obj.chart_key]: chart_obj })\n    } else {\n      const { [chart_obj.chart_key]: tmp, ...rest } = chartSelection;\n      setChartSelection(rest)\n    }\n  };\n\n\n  function objectToQueryString(obj) {\n    const chartKeyToDataKey = {\n      implied_growth_rate : \"growth_rates\",\n      raw_optical_density : \"od_readings\",\n      temperature : \"temperature_readings\",\n      normalized_optical_density : \"od_readings_filtered\",\n      fraction_of_volume_that_is_alternative_media : \"alt_media_fraction\",\n    }\n\n    let queryString = \"\";\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key) && chartKeyToDataKey.hasOwnProperty(key)) {\n        queryString += `&${chartKeyToDataKey[key]}=1`;\n      }\n    }\n    return queryString;\n  }\n\n\n  const additionalQueryString = objectToQueryString(chartSelection)\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Past Experiments\n            </Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <Button to={`/export-data?experiment=${experimentSelection}&experiments=1${additionalQueryString}`} component={Link} style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <GetAppIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Export experiment data\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <Grid container spacing={2} justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <ExperimentSelection\n                experimentSelection={experimentSelection}\n                handleExperimentSelectionChange={handleExperimentSelectionChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <ChartSelection\n                chartSelection={chartSelection}\n                handleChartSelectionChange={handleChartSelectionChange}\n                config={config}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} container spacing={2} justifyContent=\"flex-start\" style={{height: \"100%\"}}>\n              {Object.entries(chartSelection).sort()\n                .map(([chart_key, chart]) =>\n                  <React.Fragment key={`grid-chart-${chart_key}`}>\n                    <Grid item xs={6}>\n                      <Chart\n                        chart_key={`chart-${chart_key}`}\n                        config={config}\n                        dataSource={chart.data_source}\n                        title={chart.title}\n                        topic={chart.mqtt_topic}\n                        payloadKey={chart.payload_key}\n                        yAxisLabel={chart.y_axis_label}\n                        experiment={experimentSelection}\n                        //experimentStartTime={experimentMetadata.created_at}\n                        deltaHours={10}\n                        downSample={true}\n                        interpolation={chart.interpolation || \"stepAfter\"}\n                        yAxisDomain={chart.y_axis_domain ? chart.y_axis_domain : null}\n                        lookback={10000}\n                        fixedDecimals={chart.fixed_decimals}\n                        yTransformation={eval(chart.y_transformation || \"(y) => y\")}\n                        dataSourceColumn={chart.data_source_column}\n                        relabelMap={relabelMap}\n                        isPartitionedBySensor={chart_key === \"raw_optical_density\"}\n                        allowZoom={true}\n                        isLiveChart={false}\n                        byDuration={false}\n                      />\n                    </Grid>\n                  </React.Fragment>\n\n            )}\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nfunction Experiments(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ExperimentsContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Experiments;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport {getConfig, getRelabelMap} from \"../utilities\"\n\nimport Snackbar from '@mui/material/Snackbar';\n\nfunction TactileButtonNotification(props) {\n  const [unit, setUnit] = React.useState(\"\")\n  const [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  const [open, setOpen] = React.useState(false)\n  const [relabelMap, setRelabelMap] = React.useState({})\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n    getRelabelMap(setRelabelMap)\n    getConfig(setConfig)\n  }, [])\n\n  React.useEffect(() => {\n    if (!config['cluster.topology']){\n      return\n    }\n\n    const onMessageArrived = (msg) => {\n      if (msg.payloadString === \"True\"){\n        var unit = msg.topic.split(\"/\")[1]\n        setUnit(unit)\n        try {\n          setRenamedUnit(relabelMap[unit])\n        }\n        catch {}\n        setOpen(true)\n      }\n      else {\n        setOpen(false)\n      }\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"$experiment\",\n        \"monitor\",\n        \"button_down\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `${config.remote.ws_url}/`,\n        \"webui_TactileButtonNotification\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_TactileButtonNotification\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, onSuccess: onSuccess, timeout: 180, reconnect: true});\n    client.onMessageArrived = onMessageArrived;\n\n  },[config, relabelMap])\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={null}\n      onClose={() => {}}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      key={\"button-tactile-snackbar\"}\n      transitionDuration={{enter: 10}}\n    >\n    <Alert severity=\"info\" variant=\"filled\" icon={false}>\n      <AlertTitle style={{fontSize: 30}}>{unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      Holding <b>{unit}</b>'s button down\n    </Alert>\n    </Snackbar>\n)}\n\nexport default TactileButtonNotification;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport {getConfig, getRelabelMap} from \"../utilities\"\n\nimport Snackbar from '@mui/material/Snackbar';\n\nfunction ErrorSnackbar(props) {\n  const [open, setOpen] = React.useState(false)\n  const [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  const [unit, setUnit] = React.useState(\"\")\n  const [msg, setMsg] = React.useState(\"\")\n  const [level, setLevel] = React.useState(\"error\")\n  const [task, setTask] = React.useState(\"\")\n  const [relabelMap, setRelabelMap] = React.useState({})\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n    getRelabelMap(setRelabelMap)\n    getConfig(setConfig)\n  }, [])\n\n  React.useEffect(() => {\n    if (!config['cluster.topology']){\n      return\n    }\n\n    const onFailure = () => {\n      setMsg(`Failed to connect to MQTT. Is configuration for leader_address correct? Currently set to ${config['cluster.topology']['leader_address']}.`)\n      setTask(\"PioreactorUI\")\n      setLevel(\"ERROR\")\n      setUnit(config['cluster.topology']['leader_hostname'])\n      setOpen(true)\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"+\",\n        \"logs\",\n        \"+\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `${config.remote.ws_url}/`,\n        \"webui_ErrorSnackbarNotification\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_ErrorSnackbarNotification\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, timeout: 10, onSuccess: onSuccess, onFailure: onFailure});\n    client.onMessageArrived = onMessageArrived;\n\n  },[config])\n\n  const onMessageArrived = (message) => {\n      const payload = JSON.parse(message.payloadString)\n\n      if ((payload.level === \"ERROR\" || payload.level === \"WARNING\" || payload.level === \"NOTICE\") && (!message.topic.endsWith(\"/ui\"))){\n        const unit = message.topic.split(\"/\")[1]\n        try {\n          setRenamedUnit(relabelMap[unit])\n        }\n        catch {}\n        setMsg(payload.message)\n        setTask(payload.task)\n        setLevel(payload.level === \"NOTICE\" ? \"SUCCESS\" : payload.level)\n        setUnit(unit)\n        setOpen(true)\n      }\n    }\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n\n  return (\n    <Snackbar\n      open={open}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}}\n      key=\"error-snackbar\"\n      autoHideDuration={14000}\n      style={{maxWidth: \"500px\"}}\n      onClose={handleClose}\n    >\n    <Alert variant=\"standard\" severity={level.toLowerCase()} onClose={handleClose}>\n      <AlertTitle style={{fontSize: 15}}>{task} encountered a{level===\"ERROR\" ? 'n' : ''} {level.toLowerCase()} in {unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      <span style={{whiteSpace: 'pre-wrap'}}>{msg}</span>\n    </Alert>\n    </Snackbar>\n)}\n\nexport default ErrorSnackbar;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@mui/material/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@mui/styles';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport MenuItem from '@mui/material/MenuItem';\nimport {Typography} from '@mui/material';\nimport Select from '@mui/material/Select';\nimport Box from '@mui/material/Box';\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { useSearchParams } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  datasetItem: {\n    padding: \"10px\"\n  },\n  recommended: {\n    backgroundColor: \"rgba(83, 49, 202, 0.08)\",\n  },\n  datasetDescription: {\n    marginLeft: \"30px\",\n    fontSize: 14\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n}));\n\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([{experiment: \"<All experiments>\"}])\n\n  React.useEffect(() => {\n    async function getData() {\n       await fetch(\"/api/experiments\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExperiments(prevState => [ ...data, ...prevState])\n        if (props.experimentSelection === \"\") {\n          props.handleChange(data[0].experiment)\n        }\n        else if (data.filter(e => e.experiment === props.experimentSelection).length === 0) {\n          props.handleChange(data[0].experiment)\n        }\n      });\n    }\n    getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n  return (\n    <div style={{maxWidth: \"450px\", margin: \"10px\"}}>\n      <FormControl fullWidth component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Experiment</FormLabel>\n        <Select\n          labelId=\"expSelect\"\n          variant=\"standard\"\n          value={props.experimentSelection}\n          onChange={handleExperimentSelectionChange}\n        >\n          {experiments.map((v) => {\n            return <MenuItem value={v.experiment}>{v.experiment +  (v.created_at ? ` (started ${moment(v.created_at).format(\"MMMM D, YYYY\")})` : \"\")}</MenuItem>\n            }\n          )}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\n\n\nconst CheckboxesGroup = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} style={{margin: \"10px\"}}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Available datasets</FormLabel>\n        <FormGroup>\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n              control={<Checkbox checked={props.isChecked.pioreactor_unit_activity_data} onChange={props.handleChange} name=\"pioreactor_unit_activity_data\" />}\n              label=\"Pioreactor unit activity data (recommended)\"\n            />\n            <Typography className={classes.datasetDescription} gutterBottom>\n              This dataset contains most of your experiment data, including the time series of OD metrics, temperature, stirring rates, LED updates, and dosings.\n            </Typography>\n          </div>\n\n\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.logs} onChange={props.handleChange} name=\"logs\" />}\n            label=\"Pioreactor logs\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes the append-only collection of logs from all Pioreactors. A subset of the these logs are displayed in the Log Table in the Experiment Overview.\n              These are the logs that should be provided to get assistance when troubleshooting, but choose \"&lt;All experiments&gt;\" above.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n              control={<Checkbox checked={props.isChecked.growth_rates} onChange={props.handleChange} name=\"growth_rates\" />}\n              label=\"Implied growth rate\"\n            />\n            <Typography className={classes.datasetDescription} gutterBottom>\n             This dataset includes a time series of the calculated (implied) growth rate. This data matches what's presented in the \"Implied growth rate\" chart in the Experiment Overview.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n              control={<Checkbox checked={props.isChecked.od_readings} onChange={props.handleChange} name=\"od_readings\" />}\n              label=\"Optical density\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a time series of readings provided by the sensors (transformed via a calibration curve, if available), the inputs for growth calculations and normalized optical densities. This data matches what's presented in the \"Optical density\" chart in the Experiment Overview.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_filtered} onChange={props.handleChange} name=\"od_readings_filtered\" />}\n            label=\"Normalized optical density\"\n          />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a time series of normalized optical densities. This data matches what's presented in the \"Normalized optical density\" chart in the Experiment Overview.\n            </Typography>\n          </div>\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_readings} onChange={props.handleChange} name=\"temperature_readings\" />}\n            label=\"Temperature readings\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a time series of temperature readings from the Pioreactors. This data matches what's presented in the \"Temperature of vials\" chart in the Experiment Overview.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.experiments} onChange={props.handleChange} name=\"experiments\" />}\n            label=\"Experiment metadata\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes your experiment description and metadata.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.alt_media_fractions} onChange={props.handleChange} name=\"alt_media_fractions\" />}\n            label=\"Alternative media fraction\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a time series of how much alternative media is in each Pioreactor. This data matches what's presented in the \"Fraction of volume that is alternative media\" chart in the Experiment Overview.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n              <FormControlLabel\n              control={<Checkbox checked={props.isChecked.pioreactor_unit_activity_data_rollup} onChange={props.handleChange} name=\"pioreactor_unit_activity_data_rollup\" />}\n              label=\"Pioreactor unit activity data roll-up\"\n            />\n            <Typography className={classes.datasetDescription} gutterBottom>\n              This dataset is a rolled-up version of Pioreactor unit activity data (above) aggregated to the minute level. This is useful for reducing the size of the exported dataset.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_events} onChange={props.handleChange} name=\"dosing_events\" />}\n            label=\"Dosing event log\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              In this dataset, you'll find a detailed log table of all dosing events, including the volume exchanged, and the source of who or what triggered the event.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_change_events} onChange={props.handleChange} name=\"led_change_events\" />}\n            label=\"LED event log\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              In this dataset, you'll find a log table of all LED events, including the channel, intensity, and the source of who or what triggered the event.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_automation_settings} onChange={props.handleChange} name=\"dosing_automation_settings\" />}\n            label=\"Dosing automation changelog\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              Anytime an automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the dosing automation states\n              from this dataset.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_automation_settings} onChange={props.handleChange} name=\"led_automation_settings\" />}\n            label=\"LED automation changelog\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              Whenever a LED automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the LED automation states\n              from this dataset.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_automation_settings} onChange={props.handleChange} name=\"temperature_automation_settings\" />}\n            label=\"Temperature automation changelog\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              Whenever a temperature automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the temperature automation states\n              from this dataset.\n            </Typography>\n          </div>\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_automation_events} onChange={props.handleChange} name=\"dosing_automation_events\" />}\n            label=\"Dosing automation events\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a log of automation events created by dosing automations.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_automation_events} onChange={props.handleChange} name=\"led_automation_events\" />}\n            label=\"LED automation events\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a log of automation events created by LED automations.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_automation_events} onChange={props.handleChange} name=\"temperature_automation_events\" />}\n            label=\"Temperature automation events\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a log of automation events created by temperature automations.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.kalman_filter_outputs} onChange={props.handleChange} name=\"kalman_filter_outputs\" />}\n            label=\"Kalman filter outputs\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset includes a time series of the internal Kalman filter. The Kalman filter produces the normalized optical densities, growth rates, an acceleration term, and variances (and covariances) between the estimates.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.stirring_rates} onChange={props.handleChange} name=\"stirring_rates\" />}\n            label=\"Stirring rates\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dowload includes the measured RPM of the onboard stirring.\n            </Typography>\n          </div>\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.pioreactor_unit_labels} onChange={props.handleChange} name=\"pioreactor_unit_labels\" />}\n            label=\"Pioreactor unit labels\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              In this dataset, you'll find the labels assigned to a Pioreactor during an experiment.\n            </Typography>\n          </div>\n\n\n          <div className={clsx(classes.datasetItem)}>\n            <FormControlLabel\n            control={<Checkbox checked={props.isChecked.pwm_dcs} onChange={props.handleChange} name=\"pwm_dcs\" />}\n            label=\"PWM duty cycles\"\n            />\n            <Typography  className={classes.datasetDescription} gutterBottom>\n              This dataset contains a time series of the PWMs duty cycle percentages. Useful for debugging PWM use.\n            </Typography>\n          </div>\n\n        </FormGroup>\n      </FormControl>\n    </div>\n)}\n\n\nfunction ExportDataContainer() {\n  const [queryParams, setQueryParams] = useSearchParams();\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [isError, setIsError] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n\n\n  const [state, setState] = React.useState({\n    experimentSelection: queryParams.get(\"experiment\") || \"\",\n    datasetCheckbox: {\n      pioreactor_unit_activity_data: false || queryParams.get(\"pioreactor_unit_activity_data\") === \"1\",\n      growth_rates: false || queryParams.get(\"growth_rates\") === \"1\",\n      dosing_events: false || queryParams.get(\"dosing_events\") === \"1\",\n      led_change_events: false || queryParams.get(\"led_change_events\") === \"1\",\n      experiments: false || queryParams.get(\"experiments\") === \"1\",\n      od_readings: false || queryParams.get(\"od_readings\") === \"1\",\n      od_readings_filtered: false || queryParams.get(\"od_readings_filtered\") === \"1\",\n      logs: false || queryParams.get(\"logs\") === \"1\",\n      alt_media_fractions: false || queryParams.get(\"alt_media_fractions\") === \"1\",\n      dosing_automation_settings: false || queryParams.get(\"dosing_automation_settings\") === \"1\",\n      led_automation_settings: false || queryParams.get(\"led_automation_settings\") === \"1\",\n      temperature_automation_settings: false || queryParams.get(\"temperature_automation_settings\") === \"1\",\n      kalman_filter_outputs: false || queryParams.get(\"kalman_filter_outputs\") === \"1\",\n      stirring_rates: false || queryParams.get(\"stirring_rates\") === \"1\",\n      temperature_readings: false || queryParams.get(\"temperature_readings\") === \"1\",\n      pioreactor_unit_labels: false || queryParams.get(\"pioreactor_unit_labels\") === \"1\",\n      led_automation_events: false || queryParams.get(\"led_automation_events\") === \"1\",\n      dosing_automation_events: false || queryParams.get(\"dosing_automation_events\") === \"1\",\n      temperature_automation_events: false || queryParams.get(\"temperature_automation_events\") === \"1\",\n      pwm_dcs: false || queryParams.get(\"pwm_dcs\") === \"1\",\n      pioreactor_unit_activity_data_rollup: false || queryParams.get(\"pioreactor_unit_activity_data_rollup\") === \"1\",\n    }\n  });\n\n  const count = () => Object.values(state.datasetCheckbox).reduce((acc, checked) => acc + (checked === true ? 1 : 0), 0);\n\n  const onSubmit =  (event) => {\n    event.preventDefault()\n\n    if (!Object.values(state['datasetCheckbox']).some((e) => e)) {\n      setIsError(true)\n      setErrorMsg(\"At least one dataset must be selected.\")\n      return\n    }\n\n    setIsRunning(true)\n    setErrorMsg(\"\")\n    fetch('/api/export_datasets',{\n        method: \"POST\",\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => res.json())\n      .then(res => {\n      var link = document.createElement(\"a\");\n      const filename = res['filename'].replace(/%/g, \"%25\")\n      link.setAttribute('export', filename);\n      link.href = \"/static/exports/\" + filename;\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setIsRunning(false)\n    }).catch(e => {\n      setIsRunning(false)\n      setIsError(true)\n      setErrorMsg(\"Server error occurred. Check UI logs.\")\n    });\n  }\n\n  const handleCheckboxChange = (event) => {\n    setState(prevState => ({\n      ...prevState,\n      datasetCheckbox: {...state.datasetCheckbox, [event.target.name]: event.target.checked }\n    }));\n  };\n\n  function handleExperimentSelectionChange(experimentName) {\n    setState(prevState => ({\n      ...prevState,\n      experimentSelection: experimentName\n    }));\n  };\n\n  const errorFeedbackOrDefault = isError ? <Box color=\"error.main\">{errorMsg}</Box>: \"\"\n  return (\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Export Experiment Data\n            </Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <LoadingButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                loading={isRunning}\n                loadingPosition=\"end\"\n                onClick={onSubmit}\n                endIcon={<FileDownloadIcon />}\n                disabled={count() === 0}\n              >\n                Export { count() > 0 ?  count() : \"\"}\n            </LoadingButton>\n          </div>\n        </div>\n      </div>\n      <Card className={classes.root}>\n\n        <CardContent className={classes.cardContent}>\n          <p style={{marginLeft: 10}}>{errorFeedbackOrDefault}</p>\n\n          <form>\n            <Grid container spacing={0}>\n              <Grid item xs={12} md={12}>\n                <ExperimentSelection\n                  experimentSelection={state.experimentSelection}\n                  handleChange={handleExperimentSelectionChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <CheckboxesGroup\n                isChecked={state.datasetCheckbox}\n                handleChange={handleCheckboxChange}\n                />\n              </Grid>\n\n              <Grid item xs={0}/>\n              <Grid item xs={12}>\n                <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about <a href=\"https://docs.pioreactor.com/user-guide/export-data\" target=\"_blank\" rel=\"noopener noreferrer\">data exporting</a>.</p>\n              </Grid>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n  </React.Fragment>\n  )\n}\n\n\nfunction ExportData(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ExportDataContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default ExportData;\n\n","import React, {useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"18ch\",\n  }\n}));\n\n\n\nfunction AutomationForm(props){\n  const classes = useStyles();\n  const defaults = Object.assign({}, ...props.fields.map(field => ({[field.key]: field.default})))\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [props.fields])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n\n  var listOfDisplayFields = props.fields.map(field => {\n      switch (field.type) {\n        case 'numeric':\n          return <TextField\n            type=\"number\"\n            size=\"small\"\n            autoComplete={\"off\"}\n            id={field.key}\n            key={field.key + props.name}\n            label={field.label}\n            defaultValue={field.default}\n            disabled={field.disabled}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">{field.unit}</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onChange={onSettingsChange}\n            onKeyPress={(e) => {e.key === 'Enter' && e.preventDefault();}}\n            className={classes.textFieldCompact}\n          />\n        case 'string':\n          return <TextField\n            size=\"small\"\n            autoComplete={\"off\"}\n            id={field.key}\n            key={field.key + props.name}\n            label={field.label}\n            defaultValue={field.default}\n            disabled={field.disabled}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">{field.unit}</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onChange={onSettingsChange}\n            onKeyPress={(e) => {e.key === 'Enter' && e.preventDefault();}}\n            className={classes.textFieldCompact}\n          />\n      }\n    }\n  )\n\n  return (\n    <div>\n        <p style={{whiteSpace: \"pre-line\"}}> {props.description} </p>\n        {listOfDisplayFields}\n    </div>\n)}\n\n\nexport default AutomationForm;","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormLabel from '@mui/material/FormLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport {runPioreactorJob} from \"../utilities\"\n\nimport { Link } from 'react-router-dom';\n\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport AutomationForm from \"./AutomationForm\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\n\nconst defaultAutomations = {\n  temperature: \"thermostat\",\n  dosing: \"chemostat\",\n  led: \"light_dark_cycle\"\n}\n\n\nfunction ChangeAutomationsDialog(props) {\n  const classes = useStyles();\n  const automationType = props.automationType\n  const automationTypeForDisplay = (automationType === \"led\") ? \"LED\" : automationType\n  const [automationName, setAutomationName] = useState(defaultAutomations[automationType])\n  const [algoSettings, setAlgoSettings] = useState({\n    skip_first_run: 0 //TODO: this should be not included if !props.no_skip_first_run\n  })\n  const [client, setClient] = useState(null)\n  const [automations, setAutomations] = useState({})\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n\n  useEffect(() => {\n    function fetchAutomations() {\n      fetch(\"/api/contrib/automations/\" + automationType)\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfAuto) => {\n          setAutomations(Object.assign({}, ...listOfAuto.map(auto => ({ [auto.automation_name]: auto}))))\n        })\n        .catch((error) => {})\n    }\n    fetchAutomations();\n  }, [automationType])\n\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['cluster.topology']){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeDialog\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeDialog\" + Math.floor(Math.random()*10000)\n      );\n    }\n\n    client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, });\n    setClient(client)\n  },[props.config])\n\n\n  const removeEmpty = (obj) => {\n    return Object.fromEntries(Object.entries(obj).filter(([_, v]) => v != null));\n  }\n\n\n  const handleClose = () => {\n    props.onFinished();\n  };\n\n  const handleSkipFirstRunChange = (e) => {\n    setAlgoSettings({...algoSettings, skip_first_run: e.target.checked ? 1 : 0})\n  }\n\n  const handleAlgoSelectionChange = (e) => {\n    setAutomationName(e.target.value)\n    setAlgoSettings({\n        ...( !props.no_skip_first_run && {skip_first_run: algoSettings.skip_first_run})\n    })\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const startJob = (event) => {\n    event.preventDefault()\n    runPioreactorJob(props.unit, `${automationType}_control`, [], {\"automation_name\": automationName, ...removeEmpty(algoSettings)})\n    setOpenSnackbar(true);\n    handleClose()\n  }\n\n  const changeAutomation = (event) => {\n    event.preventDefault()\n    var message = new Message(JSON.stringify({\"automation_name\": automationName, \"type\": automationType, \"args\": algoSettings}),);\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      `${automationType}_control`,\n      \"automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n      setOpenSnackbar(true);\n    }\n    catch (e){\n      console.log(e)\n    }\n    handleClose();\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <React.Fragment>\n    <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/>\n            {(props.unit === \"$broadcast\")\n              ? <b>All active Pioreactors</b>\n              :((props.title || props.label)\n                  ? ` ${props.label} / ${props.unit}`\n                  : `${props.unit}`\n              )\n            }\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Select {automationTypeForDisplay} automation\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"span\" gutterBottom>\n          <span style={{textTransform: \"capitalize\"}}>{automationTypeForDisplay}</span> automations control the {automationTypeForDisplay} in the Pioreactor's vial. Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://docs.pioreactor.com/user-guide/\" + automationTypeForDisplay + \"-automations\"}>{automationTypeForDisplay} automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Automation</FormLabel>\n            <Select\n              variant=\"standard\"\n              value={automationName}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"270px\"}}\n            >\n              {Object.keys(automations).map((key) => <MenuItem id={key} value={key} key={\"change-io\" + key}>{automations[key].display_name}</MenuItem>)}\n\n            </Select>\n            {Object.keys(automations).length > 0 && <AutomationForm fields={automations[automationName].fields} description={automations[automationName].description} updateParent={updateFromChild} name={automationName}/>}\n\n            {!props.no_skip_first_run ?\n              <div>\n                <FormControlLabel\n                  control={<Checkbox checked={Boolean(algoSettings.skip_first_run)}\n                                      color=\"primary\"\n                                      onChange={handleSkipFirstRunChange}\n                                      size=\"small\"/>\n                          }\n                  label=\"Skip first run\"\n                  style={{marginRight: \"3px\"}}\n                />\n                <IconButton component={Link} target=\"_blank\" rel=\"noopener noreferrer\" to={{pathname: \"https://docs.pioreactor.com/user-guide/intro-to-automations#skip-first-run\"}} >\n                  <HelpOutlineIcon style={{ fontSize: 17, verticalAlign: \"middle\", marginLeft: \"0px\" }}/>\n                </IconButton>\n              </div>\n            : <React.Fragment/> }\n\n          </FormControl>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.isJobRunning ? changeAutomation :  startJob}\n        >\n          Start\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={handleClose}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={`Starting ${automationTypeForDisplay} automation ${automations[automationName]?.display_name}.`}\n      autoHideDuration={7000}\n      key={\"snackbar-change-\" + automationType}\n    />\n    </React.Fragment>\n  );}\n\n\nexport default ChangeAutomationsDialog;\n","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport {runPioreactorJob} from \"../utilities\"\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"140px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"Removing waste\",\n  \"add_media\": \"Adding media\",\n  \"add_alt_media\": \"Adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [mL, setML] = useState(EMPTYSTATE);\n  const [duration, setDuration] = useState(EMPTYSTATE);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState(\"\");\n  const [textfieldError, setTextfieldError] = useState(false);\n  const [dosingMethod, setDosingMethod] = useState(\"volume\")\n\n  const [formErrorDuration, setFormErrorDuration] = useState(false)\n  const [formErrorML, setFormErrorML] = useState(false)\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if ((dosingMethod === \"continuously\") || (dosingMethod === 'volume' && mL !== EMPTYSTATE) || (dosingMethod === 'duration' && duration !== EMPTYSTATE)) {\n\n      var params = {}\n      var msg = \"\"\n      if (dosingMethod === 'volume'){\n        params = { ml: parseFloat(mL), source_of_event: \"UI\"};\n        msg = actionToAct[props.action] + (\" until \" + mL + \"mL is reached.\")\n      } else if (dosingMethod === 'duration') {\n        params = { duration: parseFloat(duration), source_of_event: \"UI\"}\n        msg = actionToAct[props.action] + (\" for \" +  duration + \" seconds.\")\n      } else {\n        params = {continuously: true, source_of_event: \"UI\"}\n        msg = actionToAct[props.action] + \" continuously\"\n      }\n\n      runPioreactorJob(props.unit, props.action, [], params)\n      setSnackbarMsg(msg)\n      setOpenSnackbar(true);\n    }\n    else {\n      setTextfieldError(true)\n    }\n\n  }\n\n  function stopPump(e) {\n    fetch(`/api/stop/${props.unit}/${props.action}`, {method: \"PATCH\"})\n    .catch((error) => {\n      setSnackbarMsg(\"🛑 Failed to stop - please try again!\")\n      setOpenSnackbar(true)\n    });\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  function handleMLChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setML(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorML(false)\n    }\n    else {\n      setFormErrorML(true)\n    }\n  }\n\n  function handleRadioChange(e) {\n    setDosingMethod(e.target.value);\n  }\n\n  function handleDurationChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setDuration(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorDuration(false)\n    }\n    else {\n      setFormErrorDuration(true)\n    }\n  }\n  return (\n    <div id={props.action} className={classes.actionForm}>\n      <FormControl>\n        <RadioGroup\n          aria-labelledby=\"how to dose\"\n          name=\"how-to-dose-media\"\n          value={dosingMethod}\n          onChange={handleRadioChange}\n        >\n          <div style={{marginBottom: \"10px\", maxWidth: \"260px\", display: \"flex\", justifyContent: \"space-between\"}}>\n            <FormControlLabel value=\"volume\" control={<Radio />} label=\"Volume\" />\n            <TextField\n              name=\"mL\"\n              autoComplete={\"off\"}\n              error={formErrorML || textfieldError}\n              value={mL}\n              size=\"small\"\n              id={props.action + \"_mL\"}\n              variant=\"outlined\"\n              onChange={handleMLChange}\n              disabled={dosingMethod !== 'volume'}\n              className={classes.actionTextField}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n              }}\n            />\n          </div>\n          <div style={{marginBottom: \"10px\", maxWidth: \"260px\", display: \"flex\", justifyContent: \"space-between\"}}>\n            <FormControlLabel value=\"duration\" control={<Radio />} label=\"Duration\" />\n            <TextField\n              name=\"duration\"\n              autoComplete={\"off\"}\n              value={duration}\n              error={formErrorDuration || textfieldError}\n              size=\"small\"\n              id={props.action + \"_duration\"}\n              variant=\"outlined\"\n              disabled={dosingMethod !== 'duration'}\n              onChange={handleDurationChange}\n              className={classes.actionTextField}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n              }}\n            />\n          </div>\n          <FormControlLabel value=\"continuously\" control={<Radio />} label=\"Run continuously\" />\n        </RadioGroup>\n      </FormControl>\n\n\n      <div style={{display: \"flex\", marginTop: '5px'}}>\n        <Button\n          disabled={(formErrorML && dosingMethod === 'volume') || (formErrorDuration && dosingMethod === 'duration') || (props?.job?.state === \"ready\")}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n          style={{marginRight: '3px'}}\n        >\n          Start\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          disabled={ (props?.job?.state !== \"ready\") && (props.unit !== \"$broadcast\")} // always allow for \"stop\" in the \"Manage all\" dialog\n          onClick={stopPump}\n        >\n          Stop\n        </Button>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={snackbarMsg}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.action}\n      />\n    </div>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport {runPioreactorJob} from \"../utilities\"\n\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"140px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"removing waste\",\n  \"add_media\": \"adding media\",\n  \"add_alt_media\": \"adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [mL, setML] = useState(EMPTYSTATE);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState(\"\");\n  const [textfieldError, setTextfieldError] = useState(false);\n  const [manualAction, setManualAction] = useState(\"add_media\")\n\n  const [formErrorML, setFormErrorML] = useState(false)\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (mL > 0) {\n\n      var msg = `Recorded ${actionToAct[manualAction]} of ${mL} mL at ${moment().format('h:mm:ss a')}.`\n      var params = { ml: parseFloat(mL), source_of_event: \"manually\", manually: true};\n      runPioreactorJob(props.unit, manualAction, [], params)\n      setSnackbarMsg(msg)\n      setOpenSnackbar(true);\n      setML(EMPTYSTATE)\n    }\n    else {\n      setTextfieldError(true)\n    }\n\n  }\n\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  function handleMLChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setML(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorML(false)\n    }\n    else {\n      setFormErrorML(true)\n    }\n  }\n\n  function handleRadioChange(e) {\n    setManualAction(e.target.value);\n    setML(EMPTYSTATE)\n  }\n\n  return (\n    <div id={props.action} className={classes.actionForm}>\n      <FormControl>\n        <RadioGroup\n          aria-labelledby=\"what action\"\n          name=\"what action\"\n          value={manualAction}\n          onChange={handleRadioChange}\n        >\n          <div style={{marginBottom: \"10px\", maxWidth: \"460px\", display: \"flex\", justifyContent: \"space-between\"}}>\n            <FormControlLabel value=\"add_media\" control={<Radio />} label=\"Add media\" />\n            <TextField\n              name=\"mL\"\n              autoComplete={\"off\"}\n              error={formErrorML || textfieldError}\n              value={manualAction === 'add_media' ? mL : EMPTYSTATE}\n              size=\"small\"\n              variant=\"outlined\"\n              onChange={handleMLChange}\n              disabled={manualAction !== 'add_media'}\n              className={classes.actionTextField}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n              }}\n            />\n          </div>\n          <div style={{marginBottom: \"10px\", maxWidth: \"460px\", display: \"flex\", justifyContent: \"space-between\"}}>\n            <FormControlLabel value=\"add_alt_media\" control={<Radio />} label=\"Add alt-media\" />\n            <TextField\n              name=\"mL\"\n              autoComplete={\"off\"}\n              error={formErrorML || textfieldError}\n              value={manualAction === 'add_alt_media' ? mL : EMPTYSTATE}\n              size=\"small\"\n              variant=\"outlined\"\n              onChange={handleMLChange}\n              disabled={manualAction !== 'add_alt_media'}\n              className={classes.actionTextField}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n              }}\n            />\n          </div>\n          <div style={{marginBottom: \"10px\", maxWidth: \"460px\", display: \"flex\", justifyContent: \"space-between\"}}>\n            <FormControlLabel value=\"remove_waste\" control={<Radio />} label=\"Remove waste\" />\n            <TextField\n              name=\"mL\"\n              autoComplete={\"off\"}\n              error={formErrorML || textfieldError}\n              value={manualAction === 'remove_waste' ? mL : EMPTYSTATE}\n              size=\"small\"\n              variant=\"outlined\"\n              onChange={handleMLChange}\n              disabled={manualAction !== 'remove_waste'}\n              className={classes.actionTextField}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n              }}\n            />\n          </div>\n        </RadioGroup>\n      </FormControl>\n\n\n      <div style={{display: \"flex\", marginTop: '5px'}}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n          disabled={formErrorML}//(mL === EMPTYSTATE) || formErrorML}\n          style={{marginRight: '3px'}}\n        >\n          Adjust\n        </Button>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={snackbarMsg}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit}\n      />\n    </div>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport {runPioreactorJob} from \"../utilities\"\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"140px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"circulate_media\": \"Circulating media\",\n  \"circulate_alt_media\": \"Circulating alt. media\",\n\n}\n\nexport default function ActionCirculatingForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [duration, setDuration] = useState(EMPTYSTATE);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState(\"\");\n  const [textfieldError, setTextfieldError] = useState(false);\n  const [clicked, setClicked] = useState(false)\n\n  const [formErrorDuration, setFormErrorDuration] = useState(false)\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (duration !== EMPTYSTATE) {\n      setClicked(true)\n\n      var params = { duration: parseFloat(duration), source_of_event: \"UI\"}\n      var msg = actionToAct[props.action] + (\" for \" +  duration + \" seconds.\")\n\n      runPioreactorJob(props.unit, props.action, [], params)\n      setSnackbarMsg(msg)\n      setOpenSnackbar(true);\n      setTimeout(() => setClicked(false), 2500)\n    }\n    else {\n      setTextfieldError(true)\n    }\n\n  }\n\n  function stopPump(e) {\n    fetch(`/api/stop/${props.unit}/${props.action}`, {method: \"PATCH\"})\n    .catch((error) => {\n      setSnackbarMsg(\"🛑 Failed to stop - please try again!\")\n      setOpenSnackbar(true)\n    });\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n\n  function handleDurationChange(e) {\n    const re = /^[0-9.\\b]+$/;\n    setTextfieldError(false)\n\n    setDuration(e.target.value);\n\n    if (e.target.value === EMPTYSTATE || re.test(e.target.value)) {\n      setFormErrorDuration(false)\n    }\n    else {\n      setFormErrorDuration(true)\n    }\n  }\n  return (\n    <div id={props.action} className={classes.actionForm}>\n      <FormControl>\n        <div style={{marginBottom: \"10px\", maxWidth: \"260px\", display: \"flex\", justifyContent: \"space-between\"}}>\n          <TextField\n            name=\"duration\"\n            autoComplete={\"off\"}\n            value={duration}\n            error={formErrorDuration || textfieldError}\n            size=\"small\"\n            id={props.action + \"_duration\"}\n            variant=\"outlined\"\n            disabled={false}\n            onChange={handleDurationChange}\n            className={classes.actionTextField}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n            }}\n          />\n        </div>\n      </FormControl>\n\n\n      <br />\n      <div style={{display: \"flex\"}}>\n        <LoadingButton\n          loading={clicked && (props?.job?.state === \"disconnected\")}\n          disabled={formErrorDuration || (props?.job?.state === \"ready\")}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n          style={{marginRight: '3px'}}\n        >\n          Start\n        </LoadingButton>\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          disabled={ (props?.job?.state !== \"ready\") && (props.unit !== \"$broadcast\")} // always allow for \"stop\" in the \"Manage all\" dialog\n          onClick={stopPump}\n        >\n          Stop\n        </Button>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={snackbarMsg}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.action}\n      />\n    </div>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport {runPioreactorJob} from \"../utilities\"\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 0px 0px 0px\",\n    width: \"150px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\n\nexport default function ActionLEDForm(props) {\n  const EMPTYSTATE = \"\";\n  const re = /^[0-9.]+$/;\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [intensity, setIntensity] = useState(EMPTYSTATE);\n  const [errorForm, setErrorForm] = useState(false);\n\n  const validInput = (intensity) => {\n    if (intensity !== EMPTYSTATE && re.test(intensity)){\n      if (parseFloat(intensity) >= 0 && parseFloat(intensity) <= 100){\n        return true\n      }\n    }\n    return false\n  }\n\n  function onSubmit(e) {\n    if (validInput(intensity)) {\n      setErrorForm(false)\n      setOpenSnackbar(true);\n\n      const params = {[props.channel]: parseFloat(intensity), source_of_event: \"UI\"}\n      runPioreactorJob(props.unit, \"led_intensity\", [], params)\n    } else if (intensity === EMPTYSTATE) {\n      setErrorForm(false)\n    } else {\n      setErrorForm(true)\n    }\n  }\n\n\n  function onChange(e) {\n    const proposedIntensity = e.target.value\n    setIntensity(proposedIntensity);\n    if (validInput(proposedIntensity)) {\n      setErrorForm(false)\n    } else if (proposedIntensity === EMPTYSTATE) {\n      setErrorForm(false)\n    } else {\n      setErrorForm(true)\n    }\n  }\n\n  const handleSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n\n  const onKeyPress = (e) => {\n      if ((e.key === \"Enter\") && (e.target.value)) {\n        e.preventDefault()\n        onSubmit()\n    }\n  }\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <div style={{display: \"flex\"}}>\n        <TextField\n          size=\"small\"\n          error={errorForm}\n          name=\"intensity\"\n          autoComplete=\"off\"\n          value={intensity}\n          id={props.channel + \"_intensity_edit\"}\n          label=\"new intensity\"\n          variant=\"outlined\"\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n          className={classes.actionTextField}\n        />\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n          disabled={!validInput(intensity)}\n          style={{marginLeft: \"7px\"}}\n        >\n          Update\n        </Button>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={`Updating channel ${props.channel} to ${intensity}%.`}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.channel}\n      />\n    </form>\n  );\n}","import React from 'react'\n\nimport clsx from 'clsx';\n\nexport default  function UnderlineSpan(props){\n  const title = props.title\n\n  return (\n    <span className={clsx({underlineSpan: title ? true : false})} title={title}>\n      {props.children}\n    </span>\n )\n}\n","import clsx from 'clsx';\nimport { Client, Message } from \"paho-mqtt\";\nimport moment from 'moment';\n\nimport React, {useState, useEffect} from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport { useMediaQuery } from \"@mui/material\";\n\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Snackbar from '@mui/material/Snackbar';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Button from \"@mui/material/Button\";\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport FlareIcon from '@mui/icons-material/Flare';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\nimport IndeterminateCheckBoxIcon from '@mui/icons-material/IndeterminateCheckBox';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport IndeterminateCheckBoxOutlinedIcon from '@mui/icons-material/IndeterminateCheckBoxOutlined';\nimport Switch from '@mui/material/Switch';\nimport { useConfirm } from 'material-ui-confirm';\nimport {getConfig, getRelabelMap, runPioreactorJob} from \"./utilities\"\nimport Alert from '@mui/material/Alert';\n\n\nimport ChangeAutomationsDialog from \"./components/ChangeAutomationsDialog\"\nimport ActionDosingForm from \"./components/ActionDosingForm\"\nimport ActionManualDosingForm from \"./components/ActionManualDosingForm\"\nimport ActionCirculatingForm from \"./components/ActionCirculatingForm\"\nimport ActionLEDForm from \"./components/ActionLEDForm\"\nimport PioreactorIcon from \"./components/PioreactorIcon\"\nimport UnderlineSpan from \"./components/UnderlineSpan\";\n\nconst readyGreen = \"#4caf50\"\nconst disconnectedGrey = \"grey\"\nconst lostRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  lostRed: {\n    color: lostRed\n  },\n  readyGreen: {\n    color: readyGreen\n  },\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  pioreactorCard: {\n    marginTop: \"0px\",\n    marginBottom: \"20px\",\n  },\n  cardContent: {\n    padding: \"10px 20px 20px 20px\"\n  },\n  code: {\n    backgroundColor: \"rgba(0, 0, 0, 0.07)\",\n    padding: \"1px 4px\"\n  },\n  unitTitle: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontWeight: 500,\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  disabledText: {\n    color: \"rgba(0, 0, 0, 0.38)\",\n  },\n  textbox:{\n    width: \"130px\",\n    marginTop: \"10px\"\n  },\n  textboxLabel:{\n    width: \"100px\",\n    marginTop: \"10px\",\n    marginRight: \"5px\"\n  },\n  footnote: {\n    marginBottom: 0,\n    fontSize: 12,\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldWide: {\n    marginTop: \"15px\",\n    maxWidth: \"220px\",\n  },\n  textFieldCompact: {\n    marginTop: \"15px\",\n    width: \"120px\",\n  },\n  slider: {\n    width: \"70%\",\n    margin: \"40px auto 0px auto\",\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  jobButton: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\"\n  },\n  unitSettingsSubtext:{\n    fontSize: \"11px\",\n    wordBreak: \"break-word\"\n  },\n  unitSettingsSubtextEmpty:{\n    minHeight: \"15px\"\n  },\n  ledBlock:{\n    width: \"55px\",\n    display: \"inline-block\"\n  },\n  rowOfUnitSettingDisplay:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n  },\n  testingListItemIcon: {\n    minWidth: \"30px\"\n  },\n  testingListItem : {\n    paddingTop: \"0px\",\n    paddingBottom: \"0px\",\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  cardHeaderSettings:{\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down('md')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  cardHeaderButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    [theme.breakpoints.down('md')]: {\n      justifyContent: \"space-between\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  patientButton: {width: \"70px\", marginTop: \"5px\", height: \"31px\", marginRight: '3px'},\n}));\n\nfunction PythonBoolToJS(pythonBoolAsString){\n  if (pythonBoolAsString === \"True\"){\n    return true\n  } else if (pythonBoolAsString === \"False\"){\n    return false\n  }\n  else {\n    return null\n  }\n}\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      key={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\nfunction UnitSettingDisplaySubtext(props){\n  const classes = useStyles();\n\n  if (props.subtext){\n    return <div className={classes.unitSettingsSubtext}><code>{props.subtext}</code></div>\n  }\n  else{\n    return <div className={classes.unitSettingsSubtextEmpty}></div>\n  };\n}\n\n\nfunction UnitSettingDisplay(props) {\n  const classes = useStyles();\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n  const value = props.value === null ?  \"\"  : props.value\n\n  function prettyPrint(x){\n    if (x >= 10){\n      return x.toFixed(0)\n    }\n    else if (x===0){\n      return \"0\"\n    }\n    else if (x < 1){\n      return `<1`\n    } else {\n      return (x).toFixed(1).replace(/[.,]0$/, \"\");\n    }\n  }\n\n  function formatForDisplay(value){\n    if (typeof value === \"string\"){\n      return value\n    } else if (typeof value === \"boolean\"){\n      return value ? \"On\" : \"Off\"\n    }\n    else {\n      return +value.toFixed(props.precision)\n    }\n  }\n\n  if (props.isStateSetting) {\n    if (!props.isUnitActive) {\n      return <div className={clsx({[classes.disabledText]: !props.isUnitActive})}> {stateDisplay[value].display} </div>;\n    } else {\n      var displaySettings = stateDisplay[value]\n      return (\n        <React.Fragment>\n          <div style={{ color: displaySettings.color, fontWeight: 500}}>\n            {displaySettings.display}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n    )}\n  } else if (props.isLEDIntensity) {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      const ledIntensities = JSON.parse(value)\n        // the | {} is here to protect against the UI loading from a broken config.\n      const LEDMap = props.config['leds']\n      const renamedA = (LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \")) : null\n      const renamedB = (LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \")) : null\n      const renamedC = (LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \")) : null\n      const renamedD = (LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \")) : null\n\n      return(\n        <React.Fragment>\n          <div style={{fontSize: \"13px\"}}>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedA ? renamedA : null}>A</UnderlineSpan>: {prettyPrint(ledIntensities[\"A\"])}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedB ? renamedB : null}>B</UnderlineSpan>: {prettyPrint(ledIntensities[\"B\"])}%\n              </span>\n            </div>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedC ? renamedC : null}>C</UnderlineSpan>: {prettyPrint(ledIntensities[\"C\"])}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedD ? renamedD : null}>D</UnderlineSpan>: {prettyPrint(ledIntensities[\"D\"])}%\n              </span>\n            </div>\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      )\n    }\n  } else if (props.isPWMDc) {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      const pwmDcs = JSON.parse(value)\n      const PWM_TO_PIN = {1: \"17\",  2: \"13\", 3: \"16\",  4: \"12\"}\n\n      const PWMMap = props.config['PWM']\n      const renamed1 = (PWMMap[1]) ? (PWMMap[1].replace(\"_\", \" \")) : null\n      const renamed2 = (PWMMap[2]) ? (PWMMap[2].replace(\"_\", \" \")) : null\n      const renamed3 = (PWMMap[3]) ? (PWMMap[3].replace(\"_\", \" \")) : null\n      const renamed4 = (PWMMap[4]) ? (PWMMap[4].replace(\"_\", \" \")) : null\n\n\n      return(\n        <React.Fragment>\n          <div style={{fontSize: \"13px\"}}>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamed1 ? renamed1 : null}>1</UnderlineSpan>: {prettyPrint(pwmDcs[PWM_TO_PIN[1]] || 0)}%\n              </span>\n              <span className={classes.ledBlock}>\n               <UnderlineSpan title={renamed2 ? renamed2 : null}>2</UnderlineSpan>: {prettyPrint(pwmDcs[PWM_TO_PIN[2]] || 0)}%\n              </span>\n            </div>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamed3 ? renamed3 : null}>3</UnderlineSpan>: {prettyPrint(pwmDcs[PWM_TO_PIN[3]] || 0)}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamed4 ? renamed4 : null}>4</UnderlineSpan>: {prettyPrint(pwmDcs[PWM_TO_PIN[4]] || 0)}%\n              </span>\n            </div>\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      )\n    }\n  } else {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return (\n        <React.Fragment>\n          <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div style={{ fontSize: \"13px\"}}>\n            {formatForDisplay(value) + \" \" +\n              (props.measurementUnit ? props.measurementUnit : \"\")}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\n\n\nfunction ButtonStopProcess() {\n  const classes = useStyles();\n  const confirm = useConfirm();\n\n  const handleClick = () => {\n    confirm({\n      description: 'This will immediately stop all activities (stirring, dosing, etc.) in all Pioreactor units. Do you wish to continue?',\n      title: \"Stop all activities?\",\n      confirmationText: \"Confirm\",\n      confirmationButtonProps: {color: \"primary\"},\n      cancellationButtonProps: {color: \"secondary\"},\n\n      }).then(() =>\n        fetch(\"/api/stop_all\", {method: \"POST\"})\n    )\n  };\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\" }} color=\"secondary\" onClick={handleClick}>\n      <ClearIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Stop all activity\n    </Button>\n  );\n}\n\n\nfunction AddNewPioreactor(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const [isError, setIsError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState(\"\")\n\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [successMsg, setSuccessMsg] = useState(\"\")\n\n  const [isRunning, setIsRunning] = useState(false)\n  const [expectedPathMsg, setExpectedPathMsg] = useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNameChange = evt => {\n    setName(evt.target.value)\n  }\n\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n    if (!name) {\n      setIsError(true)\n      setErrorMsg(\"Provide the hostname for the new Pioreactor worker\")\n      return\n    }\n    setIsError(false)\n    setIsSuccess(false)\n    setIsRunning(true)\n    setExpectedPathMsg(\"Setting up new Pioreactor...\")\n    fetch('/api/setup_worker_pioreactor', {\n        method: \"POST\",\n        body: JSON.stringify({newPioreactorName: name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    })\n    .then(response => {\n        setIsRunning(false)\n        setExpectedPathMsg(\"\")\n        if(!response.ok){\n          setIsError(true)\n          response.json().then(data => setErrorMsg(`Unable to complete installation. The following error occurred: ${data.msg}`))\n        } else {\n          setIsSuccess(true)\n          setSuccessMsg(`Success! Rebooting ${name} now. Refresh to see ${name} in your cluster.`)\n        }\n    })\n  }\n\n  return (\n    <React.Fragment>\n    <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n      <AddIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Add new Pioreactor\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        Add a Pioreactor worker to your current cluster\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <p>Follow the instructions at <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://docs.pioreactor.com/user-guide/software-set-up#adding-additional-workers-to-your-cluster\">set up your new Pioreactor's Raspberry Pi</a>.</p>\n\n        <p>After\n\n        <ol>\n         <li> image installation is complete and,</li>\n         <li> the new Pioreactor worker is powered on, </li>\n        </ol>\n\n        provide the hostname you used when installing the Pioreactor image onto the Raspberry Pi.\n        Your existing Pioreactor will automatically connect the new Pioreactor to the cluster. When finished, the new Pioreactor will show up on this page (after a refresh).</p>\n        <div>\n          <TextField\n            size=\"small\"\n            id=\"new-pioreactor-name\"\n            label=\"Hostname\"\n            variant=\"outlined\"\n            className={classes.textField}\n            onChange={handleNameChange}\n            value={name}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <PioreactorIcon style={{fontSize: \"1.1em\"}}/>\n                </InputAdornment>\n              ),\n              endAdornment: <InputAdornment position=\"end\">.local</InputAdornment>,\n            }\n          }\n          />\n        </div>\n\n        <div style={{minHeight: \"60px\", alignItems: \"center\", display: \"flex\"}}>\n          {isError   ? <p><CloseIcon className={clsx(classes.textIcon, classes.lostRed)}/>{errorMsg}</p>           : <React.Fragment/>}\n          {isRunning ? <p>{expectedPathMsg}</p>                                                                    : <React.Fragment/>}\n          {isSuccess ? <p><CheckIcon className={clsx(classes.textIcon, classes.readyGreen)}/>{successMsg}</p>      : <React.Fragment/>}\n        </div>\n\n        <LoadingButton\n          variant=\"contained\"\n          color=\"primary\"\n          style={{marginTop: \"10px\"}}\n          onClick={onSubmit}\n          type=\"submit\"\n          loading={isRunning}\n          endIcon={<AddIcon />}\n        >\n          Add Pioreactor\n        </LoadingButton>\n\n      </DialogContent>\n    </Dialog>\n    </React.Fragment>\n  );}\n\n\n\nfunction PioreactorHeader(props) {\n  const classes = useStyles()\n  return (\n    <div>\n      <div className={classes.headerMenu}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Pioreactors\n          </Box>\n        </Typography>\n        <div className={classes.headerButtons}>\n          <ButtonStopProcess/>\n          <AddNewPioreactor config={props.config}/>\n          <SettingsActionsDialogAll config={props.config} experiment={props.experiment}/>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  )\n}\n\n\n\nfunction PatientButton(props) {\n  const classes = useStyles()\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  useEffect(\n    () => {\n      setButtonText(props.buttonText)\n    }\n  , [props.buttonText])\n\n  const onClick = () => {\n      setButtonText(<CircularProgress color=\"inherit\" size={21}/>)\n      props.onClick()\n      setTimeout(() => setButtonText(props.buttonText), 30000)\n  }\n\n  return (\n    <Button\n      disableElevation\n      className={classes.patientButton}\n      color={props.color}\n      variant={props.variant}\n      disabled={props.disabled}\n      size=\"small\"\n      onClick={onClick}\n    >\n      {buttonText}\n    </Button>\n  )\n}\n\n\nfunction CalibrateDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n  };\n\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => runPioreactorJob(props.unit, job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"ready\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                buttonText=\"Running\"\n                disabled={true}\n               />\n              </div>)\n      default:\n        return(<div></div>)\n    }\n   }\n\n  const blankODButton = createUserButtonsBasedOnState(props.odBlankJobState, \"od_blank\")\n  const stirringCalibrationButton = createUserButtonsBasedOnState(props.stirringCalibrationState, \"stirring_calibration\")\n\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"primary\" disabled={props.disabled} onClick={handleClickOpen}>\n        <TuneIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> Calibrate\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle>\n          <Typography className={classes.suptitle}>\n            <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {(props.label) ? `${props.label} / ${props.unit}` : `${props.unit}`}\n          </Typography>\n          <Tabs\n            value={tabValue}\n            onChange={handleTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            >\n            <Tab label=\"Blanks\"/>\n            <Tab label=\"Stirring\"/>\n            <Tab label=\"Dosing\" />\n            <Tab label=\"OD600\"  />\n          </Tabs>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n            size=\"large\">\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <TabPanel value={tabValue} index={0}>\n            <Typography  gutterBottom>\n             Record optical densities of blank (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              For more accurate growth rate and biomass inferences, the Pioreactor can subtract out the\n              media's <b>un-inoculated</b> optical density <i>per experiment</i>. Read more about <a href=\"https://docs.pioreactor.com/user-guide/od-normal-growth-rate#blanking\">using blanks</a>.\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" style={{margin: \"20px 0px\"}}>\n              Recorded optical densities of blank vial: <code>{props.odBlankReading ? Object.entries(JSON.parse(props.odBlankReading)).map( ([k, v]) => `${k}:${v.toFixed(5)}` ).join(\", \") : \"—\"}</code>\n            </Typography>\n\n            <div style={{display: \"flex\"}}>\n              {blankODButton}\n              <div><Button size=\"small\" className={classes.patientButton} color=\"secondary\" disabled={props.odBlankReading === null} onClick={() => runPioreactorJob(props.unit, \"od_blank\", ['delete']) }> Clear </Button></div>\n            </div>\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n          <TabPanel value={tabValue} index={1}>\n            <Typography  gutterBottom>\n             Stirring calibration (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              You can improve the responsiveness of stirring RPM changes by running this calibration. This calibration is\n              optional, and stirring RPM changes can still occur without running this calibration. Only needs to be performed once - results are saved to disk.\n            </Typography>\n\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Add a vial, with a stirbar and ~15ml of liquid, to the Pioreactor, then hit Start below. This calibration will take less than five minutes.\n            </Typography>\n\n            {stirringCalibrationButton}\n\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n          <TabPanel value={tabValue} index={2}>\n            <Typography  gutterBottom>\n             Dosing calibration for pumps\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            To use a peristatlic pump with your Pioreactor, you'll need to calibrate it to accuractly dose specific volumes.\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            See instructions <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/hardware-calibrations#pump-calibration\">here</a>.\n            </Typography>\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n\n          <TabPanel value={tabValue} index={3}>\n            <Typography  gutterBottom>\n             OD600 Calibration (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            By performing the following calibration, you can relate Pioreactor's internal OD readings (measured in volts) to an offline OD600 value. The UI and datasets will be measured in your OD600 values instead of voltages.\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            See instructions <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/calibrate-od600\">here</a>.\n            </Typography>\n            <Divider className={classes.divider} />\n          </TabPanel>\n        </DialogContent>\n      </Dialog>\n  </React.Fragment>\n  );\n}\n\n\n\nfunction SelfTestDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function displayIcon(key, state){\n    if (props.selfTestTests == null){\n      return <IndeterminateCheckBoxIcon />\n    }\n    else if (props.selfTestTests.publishedSettings[key].value === true){\n      return <CheckIcon className={classes.readyGreen}/>\n    }\n    else if (props.selfTestTests.publishedSettings[key].value === false){\n      return <CloseIcon className={classes.lostRed}/>\n    }\n    else if (state === \"ready\") {\n      return <CircularProgress size={20} />\n    }\n    else {\n      return <IndeterminateCheckBoxIcon />\n    }\n  }\n\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"disconnected\":\n       return (<div key={\"disconnected_\" + job}>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => runPioreactorJob(props.unit, job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"ready\":\n       return (<div key={\"ready_\" + job}>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={true}\n                buttonText=\"Running\"\n               />\n              </div>)\n      default:\n        return(<div></div>)\n    }\n  }\n\n  function colorOfIcon(){\n    return props.disabled ? \"disabled\" : \"primary\"\n  }\n\n  function Icon(){\n    if (props.selfTestTests == null){\n      return <IndeterminateCheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/>\n    }\n    else {\n      return props.selfTestTests.publishedSettings[\"all_tests_passed\"].value ? <CheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/> : <IndeterminateCheckBoxOutlinedIcon color={colorOfIcon()} fontSize=\"15\" classes={{root: classes.textIcon}}/>\n    }\n  }\n\n  const selfTestButton = createUserButtonsBasedOnState(props.selfTestState, \"self_test\")\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"primary\" disabled={props.disabled} onClick={handleClickOpen}>\n        {Icon()} Self test\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>\n          <Typography className={classes.suptitle} gutterBottom>\n            <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.label ? `${props.label} / ${props.unit}` : `${props.unit}`}\n          </Typography>\n           Self test\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n            size=\"large\">\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Perform a check of the heating & temperature sensor, LEDs & photodiodes, and stirring.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Add a closed vial with water and stirbar into the Pioreactor.\n          </Typography>\n\n            {selfTestButton}\n            <Divider className={classes.divider} />\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"20px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  LEDs & photodiodes\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_pioreactor_HAT_present\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Pioreactor HAT is detected\" />\n              </ListItem>\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_all_positive_correlations_between_pds_and_leds\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Photodiodes are responsive to IR LED\" secondary={\n                    props.selfTestTests ?\n                      JSON.parse(props.selfTestTests.publishedSettings[\"correlations_between_pds_and_leds\"].value).map(led_pd => `${led_pd[0]} ⇝ ${led_pd[1]}`).join(\",  \") :\n                      \"\"\n                    }/>\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_ambient_light_interference\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"No ambient IR light detected\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_REF_is_lower_than_0_dot_256_volts\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Reference photodiode is correct magnitude\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_REF_is_in_correct_position\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Reference photodiode is in correct position\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_PD_is_near_0_volts_for_blank\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Photodiode measures near nil signal for aturbid water\" />\n              </ListItem>\n\n            </List>\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"20px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  Heating & temperature\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_detect_heating_pcb\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Heating PCB is detected\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_positive_correlation_between_temperature_and_heating\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Heating is responsive\" />\n              </ListItem>\n            </List>\n\n\n            <List component=\"nav\"\n              subheader={\n                <ListSubheader style={{lineHeight: \"20px\"}} component=\"div\" disableSticky={true} disableGutters={true}>\n                  Stirring\n                </ListSubheader>\n              }\n            >\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_positive_correlation_between_rpm_and_stirring\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"Stirring RPM is responsive\" />\n              </ListItem>\n\n              <ListItem className={classes.testingListItem}>\n                <ListItemIcon className={classes.testingListItemIcon}>\n                  {displayIcon(\"test_aux_power_is_not_too_high\", props.selfTestState)}\n                </ListItemIcon>\n                <ListItemText primary=\"AUX power supply is appropriate value\" />\n              </ListItem>\n\n\n            </List>\n\n          <Divider className={classes.divider} />\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Learn more about self tests and <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://docs.pioreactor.com/user-guide/running-self-test#explanation-of-each-test\">what to do if a test fails.</a>\n          </Typography>\n        </DialogContent>\n      </Dialog>\n  </React.Fragment>\n  );\n}\n\n\n\n\n\n\nfunction SettingsActionsDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = useState(0);\n  const [rebooting, setRebooting] = useState(false);\n  const [shuttingDown, setShuttingDown] = useState(false);\n  const [openChangeDosingDialog, setOpenChangeDosingDialog] = useState(false);\n  const [openChangeLEDDialog, setOpenChangeLEDDialog] = useState(false);\n  const [openChangeTemperatureDialog, setOpenChangeTemperatureDialog] = useState(false);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n\n  function setPioreactorJobState(job, state) {\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, state)\n    };\n  }\n\n\n  function rebootRaspberryPi(){\n    return function() {\n      setRebooting(true)\n      fetch(\"/api/reboot/\" + props.unit, {method: \"POST\"})\n    }\n  }\n\n  function shutDownRaspberryPi(){\n    return function() {\n      setShuttingDown(true)\n      fetch(\"/api/shutdown/\" + props.unit, {method: \"POST\"})\n    }\n  }\n\n  function stopPioreactorJob(job){\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, \"disconnected\")\n      //fetch(\"/api/stop/\" + job + \"/\" + props.unit, {method: \"PATCH\"}).then(res => {})\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = `pioreactor/${props.unit}/${props.experiment}/${job_attr}/set`\n    message.qos = 1;\n    try{\n      props.client.publish(message);\n    }\n    catch (e) {\n      console.log(e)\n      props.client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n\n  function updateRenameUnit(_, value) {\n      const relabeledTo = value\n      setSnackbarMessage(`Updating to ${relabeledTo}`)\n      setSnackbarOpen(true)\n      fetch('/api/unit_labels/current',{\n          method: \"PUT\",\n          body: JSON.stringify({label: relabeledTo, unit: props.unit}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.ok) {\n            props.setLabel(relabeledTo)\n          }\n        })\n    }\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n  };\n\n  const handleSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false)\n  }\n\n  function createUserButtonsBasedOnState(jobState, job){\n    switch (jobState){\n      case \"lost\":\n        return (<div key={\"patient_buttons_lost\" + job}>\n                  <PatientButton\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => runPioreactorJob(props.unit, job)}\n                    buttonText=\"Start\"\n                  />\n        </div>)\n      case \"disconnected\":\n       return (<div key={\"patient_buttons_disconnected\" + job}>\n                 <PatientButton\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => runPioreactorJob(props.unit, job)}\n                  buttonText=\"Start\"\n                 />\n                <PatientButton\n                  color=\"secondary\"\n                  disabled={true}\n                  buttonText=\"Stop\"\n                />\n              </div>)\n      case \"init\":\n        return (\n          <div key={\"patient_buttons_init\" + job}>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={()=>(false)}\n              buttonText=<CircularProgress color=\"inherit\" size={22}/>\n              disabled={true}\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={stopPioreactorJob(job)}\n              buttonText=\"Stop\"\n            />\n          </div>\n        )\n      case \"ready\":\n        return (\n          <div key={\"patient_buttons_ready\" + job}>\n            <PatientButton\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"sleeping\")}\n              buttonText=\"Pause\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={stopPioreactorJob(job)}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      case \"sleeping\":\n        return (\n          <div key={\"patient_buttons_sleeping\" + job}>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"ready\")}\n              buttonText=\"Resume\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={stopPioreactorJob(job)}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      default:\n        return(<div key={\"patient_buttons_empty\" + job}></div>)\n    }\n   }\n  const LEDMap = props.config['leds']\n  const buttons = Object.fromEntries(Object.entries(props.jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job.state, job_key)]))\n  const versionInfo = JSON.parse(props.jobs.monitor.publishedSettings.versions.value || \"{}\")\n  const voltageInfo = JSON.parse(props.jobs.monitor.publishedSettings.voltage_on_pwm_rail.value || \"{}\")\n  const ipInfo = props.jobs.monitor.publishedSettings.ipv4.value\n\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n\n  const isLargeScreen = useMediaQuery(theme => theme.breakpoints.down('xl'));\n  var dosingControlJob = props.jobs.dosing_control\n  var dosingControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(dosingControlJob?.state)\n\n  var ledControlJob = props.jobs.led_control\n  var ledControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(ledControlJob?.state)\n\n  var temperatureControlJob = props.jobs.temperature_control\n  var temperatureControlJobRunning = [\"ready\", \"sleeping\", \"init\"].includes(temperatureControlJob?.state)\n\n\n\n  return (\n    <div>\n    <Button style={{textTransform: 'none', float: \"right\" }} disabled={props.disabled} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> Manage\n    </Button>\n    <Dialog maxWidth={isLargeScreen ? \"sm\" : \"md\"} fullWidth={true} open={open} onClose={handleClose} PaperProps={{\n      sx: {\n        height: \"calc(100% - 64px)\"\n      }\n    }}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/>\n          <span> {props.label ? `${props.label} / ${props.unit}` : `${props.unit}`} </span>\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons\n        allowScrollButtonsMobile\n        >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n        <Tab label=\"System\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n        <TabPanel value={tabValue} index={0}>\n          {/* Unit Specific Activites */}\n          {Object.entries(props.jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .filter(([job_key, job]) => !['dosing_control', 'led_control', 'temperature_control'].includes(job_key))\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n                <Typography display=\"block\">\n                  {job.metadata.display_name}\n                </Typography>\n                <Typography display=\"block\" gutterBottom>\n                  <span style={{color: stateDisplay[job.state].color}}>{stateDisplay[job.state].display}</span>\n                </Typography>\n              </div>\n              <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n                {job.metadata.source !== \"app\" ? `Installed by ${job.metadata.source || \"unknown\"}` : \"\"}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider className={classes.divider} />\n            </div>\n          )}\n\n\n          {/* Unit Specific Automations */}\n          {temperatureControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Temperature automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[temperatureControlJob.state].color}}>{stateDisplay[temperatureControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={temperatureControlJob.metadata.key}>\n              {(temperatureControlJob.state === \"ready\") || (temperatureControlJob.state === \"sleeping\") || (temperatureControlJob.state === \"init\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running temperature automation <code className={classes.code}>{temperatureControlJob.publishedSettings.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/temperature-automations\">temperature automations</a>.\n                </Typography>\n                {buttons[temperatureControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: temperatureControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeTemperatureDialog(true)}\n                >\n                  Start\n                </Button>\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={true}\n                >\n                  Stop\n                </Button>\n\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeTemperatureDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!temperatureControlJobRunning}\n            >\n              Change temperature automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              open={openChangeTemperatureDialog}\n              onFinished={() => setOpenChangeTemperatureDialog(false)}\n              unit={props.unit}\n              label={props.label}\n              config={props.config}\n              experiment={props.experiment}\n              isJobRunning={temperatureControlJobRunning}\n              automationType=\"temperature\"\n              no_skip_first_run={true}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n          {dosingControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Dosing automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[dosingControlJob.state].color}}>{stateDisplay[dosingControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={dosingControlJob.metadata.key}>\n              {(dosingControlJob.state === \"ready\") || (dosingControlJob.state === \"sleeping\") || (temperatureControlJob.state === \"init\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running dosing automation <code>{dosingControlJob.publishedSettings.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/dosing-automations\">dosing automations</a>.\n                </Typography>\n                {buttons[dosingControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: dosingControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeDosingDialog(true)}\n                >\n                  Start\n                </Button>\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={true}\n                >\n                  Stop\n                </Button>\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeDosingDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!dosingControlJobRunning}\n            >\n              Change dosing automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"dosing\"\n              open={openChangeDosingDialog}\n              onFinished={() => setOpenChangeDosingDialog(false)}\n              unit={props.unit}\n              label={props.label}\n              config={props.config}\n              experiment={props.experiment}\n              isJobRunning={dosingControlJobRunning}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n          {ledControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                LED automation\n              </Typography>\n              <Typography display=\"block\" gutterBottom>\n                <span style={{color:stateDisplay[ledControlJob.state].color}}>{stateDisplay[ledControlJob.state].display}</span>\n              </Typography>\n            </div>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n            </Typography>\n            <div key={ledControlJob.metadata.key}>\n              {(ledControlJob.state === \"ready\") || (ledControlJob.state === \"sleeping\") || (temperatureControlJob.state === \"init\")\n              ?<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                Currently running LED automation <code>{ledControlJob.publishedSettings.automation_name.value}</code>.\n                Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/led-automations\">LED automations</a>.\n                </Typography>\n                {buttons[ledControlJob.metadata.key]}\n               </React.Fragment>\n              :<React.Fragment>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  <div dangerouslySetInnerHTML={{__html: ledControlJob.metadata.description}}/>\n                </Typography>\n\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setOpenChangeLEDDialog(true)}\n                >\n                  Start\n                </Button>\n                <Button\n                  className={classes.patientButton}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={true}\n                >\n                  Stop\n                </Button>\n               </React.Fragment>\n              }\n            </div>\n\n            <Button\n              onClick={() => setOpenChangeLEDDialog(true)}\n              style={{marginTop: \"10px\"}}\n              size=\"small\"\n              color=\"primary\"\n              disabled={!ledControlJobRunning}\n            >\n              Change LED automation\n            </Button>\n\n            <ChangeAutomationsDialog\n              automationType=\"led\"\n              open={openChangeLEDDialog}\n              onFinished={() => setOpenChangeLEDDialog(false)}\n              unit={props.unit}\n              config={props.config}\n              label={props.label}\n              experiment={props.experiment}\n              isJobRunning={ledControlJobRunning}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n        </TabPanel>\n\n\n        <TabPanel value={tabValue} index={1}>\n          <Typography  gutterBottom>\n            Assign label to Pioreactor\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Assign a temporary label to this Pioreactor for this experiment. The new label will display in graph legends, and throughout the interface.\n          </Typography>\n          <SettingTextField\n            value={props.label}\n            onUpdate={updateRenameUnit}\n            setSnackbarMessage={setSnackbarMessage}\n            setSnackbarOpen={setSnackbarOpen}\n            id={'relabeller' + props.unit}\n            disabled={false}\n          />\n          <Divider className={classes.divider} />\n\n          {Object.values(props.jobs)\n            .filter(job => job.metadata.display)\n            .map(job => [job.state, job.metadata.key, job.publishedSettings])\n            .map(([state, job_key, settings], index) => (\n              Object.entries(settings)\n                .filter(([setting_key, setting],_) => setting.display)\n                .map(([setting_key, setting],_) =>\n                        <React.Fragment key={setting_key}>\n                          <Typography gutterBottom>\n                            {setting.label}\n                          </Typography>\n\n                          <Typography variant=\"body2\" component=\"p\">\n                            {setting.description}\n                          </Typography>\n\n                          {(setting.type === \"boolean\") && (\n                            <SettingSwitchField\n                              onUpdate={setPioreactorJobAttr}\n                              setSnackbarMessage={setSnackbarMessage}\n                              setSnackbarOpen={setSnackbarOpen}\n                              value={setting.value}\n                              units={setting.unit}\n                              id={`${job_key.replace(\"_control\", \"_automation\")}/${setting_key}`}\n                              disabled={state === \"disconnected\"}\n                            />\n                          )}\n\n                          {(setting.type !== \"boolean\") && (\n                              <SettingTextField\n                                onUpdate={setPioreactorJobAttr}\n                                setSnackbarMessage={setSnackbarMessage}\n                                setSnackbarOpen={setSnackbarOpen}\n                                value={setting.value}\n                                units={setting.unit}\n                                id={`${job_key.replace(\"_control\", \"_automation\")}/${setting_key}`}\n                                disabled={state === \"disconnected\"}\n                              />\n                          )}\n\n                          <Divider className={classes.divider} />\n                        </React.Fragment>\n          )))}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Cycle Media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Safely cycle media in and out of your Pioreactor for a set duration (seconds) by running the media and waste pump simultaneously.\n          </Typography>\n\n          <ActionCirculatingForm action=\"circulate_media\" unit={props.unit} job={props.jobs.circulate_media} />\n\n          <Divider classes={{root: classes.divider}} />\n\n          <Typography  gutterBottom>\n            Cycle alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Safely cycle alternative media in and out of your Pioreactor for a set duration (seconds) by running the alt-media and waste pump simultaneously.\n          </Typography>\n\n          <ActionCirculatingForm action=\"circulate_alt_media\" unit={props.unit} job={props.jobs.circulate_alt_media} />\n\n          <Divider classes={{root: classes.divider}} />\n\n          <Alert severity=\"warning\" style={{marginBottom: '10px', marginTop: '10px'}}>It's easy to overflow your vial. Make sure you don't add too much media.</Alert>\n\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the media pump for a set duration (s), moving a set volume (mL), or continuously add until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to add media:\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={props.unit} job={props.jobs.add_media} />\n          <Divider classes={{root: classes.divider}} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the waste pump for a set duration (s), moving a set volume (mL), or continuously remove until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to remove waste:\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={props.unit} job={props.jobs.remove_waste} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the alt-media pump for a set duration (s), moving a set volume (mL), or continuously add until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to add alt-media:\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={props.unit} job={props.jobs.add_alt_media} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Manual adjustments\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Record adjustments before manually adding or removing from the vial. This is recorded in the database and will ensure accurate metrics.\n          </Typography>\n          <ActionManualDosingForm unit={props.unit}/>\n\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel A\" }\n          </Typography>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['A']) ? \"Channel A\" : \"\"}\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel B\" }\n          </Typography>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['B']) ? \"Channel B\" : \"\"}\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel C\" }\n          </Typography>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['C']) ? \"Channel C\" : \"\"}\n          </Typography>\n\n          <ActionLEDForm channel=\"C\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel D\" }\n          </Typography>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['D']) ? \"Channel D\" : \"\"}\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={4}>\n\n          <Typography  gutterBottom>\n            Addresses and hostname\n          </Typography>\n\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              Learn about how to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.pioreactor.com/user-guide/accessing-raspberry-pi\">access the Pioreactor's Raspberry Pi</a>.\n            </Typography>\n\n            <Typography variant=\"body2\" component=\"p\">\n              IPv4: <code className={classes.code}>{ipInfo}</code>\n            </Typography>\n\n            <Typography variant=\"body2\" component=\"p\">\n              Hostname: <code className={classes.code}>{props.unit}.local</code>\n            </Typography>\n\n          <Divider className={classes.divider} />\n\n          <Typography  gutterBottom>\n            Version information\n          </Typography>\n\n            <Typography variant=\"body2\" component=\"p\">\n              HAT version: {versionInfo.hat}\n            </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n              HAT serial number: <code className={classes.code}>{versionInfo.hat_serial}</code>\n            </Typography>\n\n\n          <Divider className={classes.divider} />\n\n          <Typography  gutterBottom>\n            Voltage on PWM rail\n          </Typography>\n\n            <Typography variant=\"body2\" component=\"p\">\n              Voltage: {voltageInfo.voltage}V\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Last updated at: {moment.utc(voltageInfo.timestamp || \"\", 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]').local().format('MMMM Do, h:mm a') }\n            </Typography>\n\n          <Divider className={classes.divider} />\n\n          <Typography  gutterBottom>\n            Reboot\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Reboot the Raspberry Pi operating system. This will stop all jobs, and the Pioreactor will be inaccessible for a few minutes. It will blink its blue LED when back up, or press the onboard button to light up the blue LED.\n          </Typography>\n\n          <LoadingButton\n            loadingIndicator=\"Rebooting\"\n            loading={rebooting}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            style={{marginTop: \"15px\"}}\n            disabled={props.jobs.monitor.state !== \"ready\"}\n            onClick={rebootRaspberryPi()}\n          >\n            Reboot RPi\n          </LoadingButton>\n\n          <Divider className={classes.divider} />\n\n          <Typography  gutterBottom>\n            Shut down\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            After 20 seconds, shut down the Pioreactor. This will stop all jobs, and the Pioreactor will be inaccessible until it is restarted by unplugging and replugging the power supply.\n          </Typography>\n          <LoadingButton\n            loadingIndicator=\"😵\"\n            loading={shuttingDown}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            style={{marginTop: \"15px\"}}\n            disabled={props.jobs.monitor.state !== \"ready\"}\n            onClick={shutDownRaspberryPi()}\n          >\n            Shut down\n          </LoadingButton>\n\n          <Divider className={classes.divider} />\n\n\n\n        </TabPanel>\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </div>\n  );\n}\n\n\nfunction SettingsActionsDialogAll({config, experiment}) {\n\n  const classes = useStyles();\n  const unit = \"$broadcast\"\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = useState(0);\n  const [jobs, setJobs] = useState({});\n  const [openChangeTemperatureDialog, setOpenChangeTemperatureDialog] = useState(false);\n  const [openChangeDosingDialog, setOpenChangeDosingDialog] = useState(false);\n  const [openChangeLEDDialog, setOpenChangeLEDDialog] = useState(false);\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/api/contrib/jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {publishedSettings: {}, metadata: {display_name: job.display_name, display: job.display, description: job.description, key: job.job_name, source:job.source}}\n            for(var i = 0; i < job[\"published_settings\"].length; ++i){\n              var field = job[\"published_settings\"][i]\n              metaData_.publishedSettings[field.key] = {value: field.default || null, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n\n  useEffect(() => {\n    if (!config['cluster.topology']){\n      return\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `${config.remote.ws_url}/`,\n        \"webui_SettingsActionsDialogAll\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_SettingsActionsDialogAll\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, reconnect: true});\n    setClient(client)\n  },[config])\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        unit,\n        experiment,\n        job.metadata.key,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 750)\n      }\n      finally {\n        const verbs = {\n          \"sleeping\":  \"Pausing\",\n          \"disconnected\":  \"Stopping\",\n          \"ready\":  \"Resuming\",\n        }\n        setSnackbarMessage(`${verbs[state]} ${job.metadata.display_name.toLowerCase()} on all active Pioreactors`)\n        setSnackbarOpen(true)\n      }\n    };\n  }\n\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      unit,\n      experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      client.publish(message);\n      setSnackbarOpen(true)\n    }\n    catch (e) {\n      console.log(e)\n      client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(()=> setTabValue(0), 200) // we put a timeout here so the switching tabs doesn't occur during the close transition.\n\n  };\n\n  const handleSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(job){\n\n    const handleRunPioreactorJobResponse = (response) => {\n      if (response.ok) {\n        setSnackbarMessage(`Starting ${job.metadata.display_name.toLowerCase()} on all active Pioreactors`)\n        setSnackbarOpen(true)\n        return;\n      }\n    };\n\n    if (job.metadata.key === \"temperature_control\"){\n      var startAction = () => setOpenChangeTemperatureDialog(true)\n    }\n    else if (job.metadata.key === \"dosing_control\"){\n      startAction = () => setOpenChangeDosingDialog(true)\n    }\n    else if (job.metadata.key === \"led_control\"){\n      startAction = () => setOpenChangeLEDDialog(true)\n    }\n    else {\n      startAction = () => runPioreactorJob(unit, job.metadata.key, [], {}, handleRunPioreactorJobResponse)\n    }\n\n\n    return (<div key={job.metadata.key}>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={startAction}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"sleeping\")}\n        >\n          Pause\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"ready\")}\n        >\n          Resume\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"secondary\"\n          onClick={setPioreactorJobState(job, \"disconnected\")}\n        >\n          Stop\n        </Button>\n      </div>\n  )}\n\n\n  const buttons = Object.fromEntries(Object.entries(jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job)]))\n  const isLargeScreen = useMediaQuery(theme => theme.breakpoints.down('xl'));\n  var dosingControlJob = jobs.dosing_control\n  var ledControlJob = jobs.led_control\n  var temperatureControlJob = jobs.temperature_control\n\n  return (\n    <React.Fragment>\n    <Button style={{textTransform: 'none', float: \"right\" }} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Manage all Pioreactors\n    </Button>\n    <Dialog  maxWidth={isLargeScreen ? \"sm\" : \"md\"} fullWidth={true}  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\"  PaperProps={{\n      sx: {\n        height: \"calc(100% - 64px)\"\n      }\n    }}>\n      <DialogTitle style={{backgroundImage: \"linear-gradient(to bottom left, rgba(83, 49, 202, 0.4), rgba(0,0,0,0))\"}}>\n        <Typography className={classes.suptitle}>\n          <b>All active Pioreactors</b>\n        </Typography>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[600],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons\n        allowScrollButtonsMobile\n      >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n\n        <TabPanel value={tabValue} index={0}>\n          {Object.entries(jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .filter(([job_key, job]) => !['dosing_control', 'led_control', 'temperature_control'].includes(job_key))\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <Typography gutterBottom>\n                {job.metadata.display_name}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider classes={{root: classes.divider}} />\n            </div>\n          )}\n\n\n          {temperatureControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Temperature automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: temperatureControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['temperature_control']}\n            </div>\n\n            <ChangeAutomationsDialog\n              open={openChangeTemperatureDialog}\n              onFinished={() => setOpenChangeTemperatureDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={false}\n              automationType=\"temperature\"\n              no_skip_first_run={true}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n\n          {dosingControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                Dosing automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: dosingControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['dosing_control']}\n            </div>\n\n            <ChangeAutomationsDialog\n              automationType=\"dosing\"\n              open={openChangeDosingDialog}\n              onFinished={() => setOpenChangeDosingDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={false}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n\n          {ledControlJob &&\n          <React.Fragment>\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n              <Typography display=\"block\">\n                LED automation\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: ledControlJob.metadata.description}}/>\n              </Typography>\n\n              {buttons['led_control']}\n            </div>\n\n            <ChangeAutomationsDialog\n              automationType=\"led\"\n              open={openChangeLEDDialog}\n              onFinished={() => setOpenChangeLEDDialog(false)}\n              unit={unit}\n              config={config}\n              experiment={experiment}\n              isJobRunning={false}\n              no_skip_first_run={false}\n            />\n          </React.Fragment>\n          }\n\n          <Divider className={classes.divider} />\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          {Object.values(jobs)\n            .filter(job => job.metadata.display)\n            .map(job => [job.state, job.metadata.key, job.publishedSettings])\n            .map(([state, job_key, settings], index) => (\n              Object.entries(settings)\n                .filter(([setting_key, setting],_) => setting.display)\n                .map(([setting_key, setting],_) =>\n              <React.Fragment key={job_key + setting_key}>\n                <Typography  gutterBottom>\n                  {setting.label}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {setting.description}\n                </Typography>\n\n                  {(setting.type === \"boolean\") && (\n                    <SettingSwitchField\n                      onUpdate={setPioreactorJobAttr}\n                      setSnackbarMessage={setSnackbarMessage}\n                      setSnackbarOpen={setSnackbarOpen}\n                      value={setting.value}\n                      units={setting.unit}\n                      id={`${job_key.replace(\"_control\", \"_automation\")}/${setting_key}`}\n                      disabled={false}\n                    />\n                  )}\n\n                  {(setting.type !== \"boolean\") && (\n                  <SettingTextField\n                    onUpdate={setPioreactorJobAttr}\n                    setSnackbarMessage={setSnackbarMessage}\n                    setSnackbarOpen={setSnackbarOpen}\n                    value={setting.value}\n                    units={setting.unit}\n                    id={`${job_key.replace(\"_control\", \"_automation\")}/${setting_key}`}\n                    disabled={false}\n                  />\n                  )}\n                <Divider classes={{root: classes.divider}} />\n              </React.Fragment>\n\n          )))}\n\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Cycle Media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Safely cycle media in and out of your Pioreactor for a set duration (seconds).\n          </Typography>\n\n          <ActionCirculatingForm action=\"circulate_media\" unit={unit} />\n\n          <Divider classes={{root: classes.divider}} />\n\n          <Typography  gutterBottom>\n            Cycle alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Safely cycle alternative media in and out of your Pioreactor for a set duration (seconds).\n          </Typography>\n\n          <ActionCirculatingForm action=\"circulate_alt_media\" unit={unit} />\n\n          <Divider classes={{root: classes.divider}} />\n\n          <Alert severity=\"warning\" style={{marginBottom: '10px', marginTop: '10px'}}>It's easy to overflow your vial. Make sure you don't add too much media.</Alert>\n\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the media pumps for a set duration (seconds), moving a set volume (mL), or continuously add until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to add media:\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the waste pumps for a set duration (seconds), moving a set volume (mL), or continuously add until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to remove media:\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Run the alternative media pumps for a set duration (seconds), moving a set\n            volume (mL), or continuously add until stopped.\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Specify how you’d like to add alt-media:\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Manual adjustments\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Record adjustments before manually adding or removing from the vial. This is recorded in the database and will ensure accurate metrics.\n          </Typography>\n          <ActionManualDosingForm unit={unit}/>\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel A\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel B\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel C\n          </Typography>\n          <ActionLEDForm channel=\"C\" unit={unit} />\n\n          <Divider className={classes.divider} />\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel D\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={unit} />\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + unit + \"settings\"}\n    />\n    </React.Fragment>\n  );\n}\n\n\nfunction SettingTextField(props){\n    const classes = useStyles();\n\n    const [value, setValue] = useState(props.value || \"\")\n    const [activeSubmit, setActiveSumbit] = useState(false)\n\n    useEffect(() => {\n      if (props.value !== value) {\n        setValue(props.value || \"\");\n      }\n    }, [props.value]);\n\n\n    const onChange = (e) => {\n      setActiveSumbit(true)\n      setValue(e.target.value)\n    }\n\n    const onKeyPress = (e) => {\n        if ((e.key === \"Enter\") && (e.target.value)) {\n          onSubmit()\n      }\n    }\n\n    const onSubmit = () => {\n        props.onUpdate(props.id, value);\n        if (value !== \"\") {\n          props.setSnackbarMessage(`Updating to ${value}${(!props.units) ? \"\" : (\" \"+props.units)}.`)\n        } else {\n          props.setSnackbarMessage(\"Updating.\")\n        }\n        props.setSnackbarOpen(true)\n        setActiveSumbit(false)\n    }\n\n    return (\n     <div style={{display: \"flex\"}}>\n        <TextField\n          size=\"small\"\n          autoComplete=\"off\"\n          disabled={props.disabled}\n          id={props.id}\n          value={value}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">{props.units}</InputAdornment>,\n            autoComplete: 'new-password',\n          }}\n          variant=\"outlined\"\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          className={classes.textFieldCompact}\n        />\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!activeSubmit}\n          onClick={onSubmit}\n          style={{marginTop: \"15px\", marginLeft: \"7px\", display: (props.disabled ? \"None\" : \"\") }}\n        >\n          Update\n        </Button>\n     </div>\n    )\n}\n\n\n\nfunction SettingSwitchField(props){\n    const [value, setValue] = useState(PythonBoolToJS(props.value) || false)\n\n    useEffect(() => {\n      if (props.value !== value) {\n        setValue(PythonBoolToJS(props.value) || false);\n      }\n    }, [props.value]);\n\n    const onChange = (e) => {\n      setValue(e.target.checked)\n      props.onUpdate(props.id,  e.target.checked ? 1 : 0);\n      const v = e.target.checked ? \"on\" : \"off\"\n      props.setSnackbarMessage(`Updating to ${v}.`)\n      props.setSnackbarOpen(true)\n    }\n\n    return (\n      <Switch\n        checked={value}\n        disabled={props.disabled}\n        onChange={onChange}\n        id={props.id}\n      />\n    )\n}\n\n\n\nfunction ActiveUnits(props){\n  const [relabelMap, setRelabelMap] = useState({})\n\n  useEffect(() => {\n    getRelabelMap(setRelabelMap)\n  }, [])\n\n  const cards = props.units.map(unit =>\n      <PioreactorCard isUnitActive={true} key={unit} unit={unit} config={props.config} experiment={props.experiment} label={relabelMap[unit]}/>\n  )\n  var emptyState = (\n    <div style={{textAlign: \"center\", marginBottom: '50px', marginTop: \"50px\"}}>\n      <Typography component='div' variant='body2'>\n        <Box fontWeight=\"fontWeightRegular\">\n          No active Pioreactors. Do you need to update `cluster.inventory` section in the <a href=\"/config\">configuration</a>?\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\">\n          Or, <a href=\"https://docs.pioreactor.com/user-guide/create-cluster\">read our documentation</a> about managing inventory.\n        </Box>\n      </Typography>\n    </div>\n  )\n\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Active Pioreactors\n        </Box>\n      </Typography>\n      <div >\n\n      </div>\n    </div>\n\n    {(props.units.length === 0) && (props.experiment) ? emptyState : cards }\n\n  </React.Fragment>\n)}\n\n\nfunction FlashLEDButton(props){\n  const classes = useStyles();\n\n  const [flashing, setFlashing] = useState(false)\n\n\n  const onClick = () => {\n    setFlashing(true)\n    const sendMessage = () => {\n      var message = new Message(\"1\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        \"$experiment\",\n        \"monitor\",\n        \"flicker_led_response_okay\",\n      ].join(\"/\");\n      message.qos = 0;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 1000)\n      }\n    }\n\n    sendMessage()\n    setTimeout(() => {setFlashing(false)}, 3600 ) // .9 * 4\n  }\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\"}} className={clsx({blinkled: flashing})} disabled={props.disabled} onClick={onClick} color=\"primary\">\n      <FlareIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> <span > Identify </span>\n    </Button>\n)}\n\n\n\nfunction PioreactorCard(props){\n  const classes = useStyles();\n  const unit = props.unit\n  const isUnitActive = props.isUnitActive\n  const experiment = props.experiment\n  const config = props.config\n  const [jobFetchComplete, setJobFetchComplete] = useState(false)\n  const [label, setLabel] = useState(\"\")\n  const [client, setClient] = useState(null)\n  const [jobs, setJobs] = useState({\n    monitor: {\n      state : \"disconnected\",\n      metadata: {display: false},\n      publishedSettings: {\n        versions: {\n            value: null, label: null, type: \"json\", unit: null, display: false, description: null\n        },\n        voltage_on_pwm_rail: {\n            value: null, label: null, type: \"json\", unit: null, display: false, description: null\n        },\n        ipv4: {\n            value: null, label: null, type: \"string\", unit: null, display: false, description: null\n        },\n      },\n    },\n  })\n\n  useEffect(() => {\n    setLabel(props.label)\n  }, [props.label])\n\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/api/contrib/jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {state: \"disconnected\", publishedSettings: {}, metadata: {display_name: job.display_name, subtext: job.subtext, display: job.display, description: job.description, key: job.job_name, source: job.source, is_testing: job.is_testing}}\n            for(var i = 0; i < job[\"published_settings\"].length; ++i){\n              var field = job[\"published_settings\"][i]\n              metaData_.publishedSettings[field.key] = {value: field.default || null, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n          setJobFetchComplete(true)\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n  const parseToType = (payloadString, typeOfSetting) => {\n    if (typeOfSetting === \"numeric\"){\n      return [null, \"\"].includes(payloadString) ? payloadString : parseFloat(payloadString)\n    }\n    else if (typeOfSetting === \"boolean\"){\n      if ([null, \"\"].includes(payloadString)){\n        return null\n      }\n      return ([\"1\", \"true\", \"True\", 1].includes(payloadString))\n    }\n    return payloadString\n  }\n\n  useEffect(() => {\n    const onConnect = () => {\n      client.subscribe([\"pioreactor\", unit, \"$experiment\", \"monitor\", \"$state\"].join(\"/\"));\n      for (const job of Object.keys(jobs)) {\n\n        // for some jobs (self_test), we use a different experiment name to not clutter datasets,\n        const experimentName = jobs[job].metadata.is_testing ? \"_testing_\" + experiment : experiment\n\n        client.subscribe([\"pioreactor\", unit, experimentName, job, \"$state\"].join(\"/\"));\n        for (const setting of Object.keys(jobs[job].publishedSettings)){\n            var topic = [\n              \"pioreactor\",\n              unit,\n              (job === \"monitor\" ? \"$experiment\" : experimentName),\n              (setting === \"automation_name\") ? job : job.replace(\"_control\", \"_automation\"), // this is for, ex, automation_name\n              setting\n            ].join(\"/\")\n            client.subscribe(topic);\n        }\n      }\n    }\n\n    const onMessageArrived = (message) => {\n      var [job, setting] = message.topic.split('/').slice(-2)\n      if (setting === \"$state\"){\n        var payload = message.payloadString\n        setJobs((prev) => ({...prev, [job]: {...prev[job], state: payload}}))\n      } else if (job.endsWith(\"_automation\")) {\n        // needed because settings are attached to _automations, not _control\n        job = job.replace(\"_automation\", \"_control\")\n        var payload = parseToType(message.payloadString, jobs[job].publishedSettings[setting].type)\n        setJobs((prev) => ({...prev, [job]: {...prev[job], publishedSettings:\n            {...prev[job].publishedSettings,\n              [setting]:\n                {...prev[job].publishedSettings[setting], value: payload }}}}))\n      } else {\n        var payload = parseToType(message.payloadString, jobs[job].publishedSettings[setting].type)\n        setJobs(prev => {\n          const updatedJob = { ...prev[job] };\n          const updatedSetting = { ...updatedJob.publishedSettings[setting], value: payload };\n\n          updatedJob.publishedSettings = { ...updatedJob.publishedSettings, [setting]: updatedSetting };\n\n          return { ...prev, [job]: updatedJob };\n        });\n      }\n    }\n\n    if (!props.config['cluster.topology']){\n      return\n    }\n\n    if (!isUnitActive){\n      return\n    }\n\n    if (!jobFetchComplete){\n      return\n    }\n\n    if (!experiment){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `${props.config.remote.ws_url}/`,\n        \"webui_PioreactorCard\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_PioreactorCard\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.onMessageArrived = onMessageArrived\n    client.connect({userName: 'pioreactor', password: 'raspberry', keepAliveInterval: 60 * 15, onSuccess: onConnect, reconnect: true});\n    setClient(client)\n  },[config, experiment, jobFetchComplete, isUnitActive])\n\n  const getInicatorLabel = (state, isActive) => {\n    if ((state === \"disconnected\") && isActive) {\n      return \"Offline\"\n    }\n    else if ((state === \"disconnected\") && !isActive){\n      return \"Offline, change inventory status in config.ini\"\n    }\n    else if (state === \"lost\"){\n      return \"Lost, something went wrong. Try manually power-cycling the unit.\"\n    }\n    else {\n      return \"Online and ready\"\n    }\n  }\n\n  const getIndicatorDotColor = (state) => {\n    if (state === \"disconnected\") {\n      return disconnectedGrey\n    }\n    else if (state === \"lost\"){\n      return lostRed\n    }\n    else {\n      return \"#1AFF1A\"\n    }\n  }\n\n  const indicatorDotColor = getIndicatorDotColor(jobs.monitor.state)\n  const indicatorDotShadow = 0\n  const indicatorLabel = getInicatorLabel(jobs.monitor.state, isUnitActive)\n\n  return (\n    <Card className={classes.pioreactorCard} id={unit}>\n      <CardContent className={classes.cardContent}>\n        <div className={\"fixme\"}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(label) ? unit : \"\"}\n          </Typography>\n          <div className={classes.cardHeaderSettings}>\n            <div style={{display: \"flex\", justifyContent: \"left\"}}>\n              <Typography className={clsx(classes.unitTitle, {[classes.disabledText]: !isUnitActive})} gutterBottom>\n                <PioreactorIcon color={isUnitActive ? \"inherit\" : \"disabled\"} style={{verticalAlign: \"middle\", marginRight: \"3px\"}} sx={{ display: {xs: 'none', sm: 'none', md: 'inline' } }}/>\n                {(label ) ? label : unit }\n              </Typography>\n              <Tooltip title={indicatorLabel} placement=\"right\">\n                <div>\n                  <div aria-label={indicatorLabel} className=\"indicator-dot\" style={{boxShadow: `0 0 ${indicatorDotShadow}px ${indicatorDotColor}, inset 0 0 12px  ${indicatorDotColor}`}}/>\n                </div>\n              </Tooltip>\n            </div>\n            <div className={classes.cardHeaderButtons}>\n              <div>\n                <SelfTestDialog\n                  client={client}\n                  disabled={!isUnitActive}\n                  unit={unit}\n                  label={label}\n                  selfTestState={jobs['self_test'] ? jobs['self_test'].state : null}\n                  selfTestTests={jobs['self_test'] ? jobs['self_test'] : null}\n                />\n              </div>\n              <div>\n                <FlashLEDButton client={client} disabled={!isUnitActive} config={props.config} unit={unit}/>\n              </div>\n              <div>\n                <CalibrateDialog\n                  client={client}\n                  odBlankReading={jobs['od_blank'] ? jobs['od_blank'].publishedSettings.means.value : null}\n                  odBlankJobState={jobs['od_blank'] ? jobs['od_blank'].state : null}\n                  stirringCalibrationState={jobs['stirring_calibration'] ? jobs['stirring_calibration'].state : null}\n                  experiment={experiment}\n                  unit={unit}\n                  label={label}\n                  disabled={!isUnitActive}\n                />\n              </div>\n              <SettingsActionsDialog\n                config={props.config}\n                client={client}\n                unit={unit}\n                label={label}\n                disabled={!isUnitActive}\n                experiment={experiment}\n                jobs={jobs}\n                setLabel={setLabel}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Activities:\n            </Box>\n          </Typography>\n        </div>\n        <div\n         className={classes.rowOfUnitSettingDisplay}\n        >\n          {Object.values(jobs)\n              .filter(job => job.metadata.display)\n              .map(job => (\n            <div className={classes.textbox} key={job.metadata.key}>\n              <Typography variant=\"body2\" style={{fontSize: \"0.84rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                {job.metadata.display_name}\n              </Typography>\n              <UnitSettingDisplay\n                value={job.state}\n                isUnitActive={isUnitActive}\n                default=\"disconnected\"\n                subtext={job.metadata.subtext ? job.publishedSettings[job.metadata.subtext].value : null}\n                isStateSetting\n              />\n            </div>\n         ))}\n\n        </div>\n      </div>\n\n      <Divider/>\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Settings:\n            </Box>\n          </Typography>\n        </div>\n        <div className={classes.rowOfUnitSettingDisplay}>\n          {Object.values(jobs)\n            //.filter(job => (job.state !== \"disconnected\") || (job.metadata.key === \"leds\"))\n            .map(job => [job.state, job.metadata.key, job.publishedSettings])\n            .map(([state, job_key, settings], index) => (\n              Object.entries(settings)\n                .filter(([setting_key, setting], _) => setting.display)\n                .map(([setting_key, setting], _) =>\n                  <div className={classes.textbox} key={job_key + setting_key}>\n                    <Typography variant=\"body2\" style={{fontSize: \"0.84rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                      {setting.label}\n                    </Typography>\n                    <UnitSettingDisplay\n                      value={setting.value}\n                      isUnitActive={isUnitActive}\n                      measurementUnit={setting.unit}\n                      precision={2}\n                      default=\"—\"\n                      isLEDIntensity={setting.label === \"LED intensity\"}\n                      isPWMDc={setting.label === \"PWM intensity\"}\n                      config={props.config}\n                    />\n                  </div>\n            )))}\n        </div>\n      </div>\n\n\n      </CardContent>\n    </Card>\n)}\n\n\nfunction InactiveUnits(props){\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Inactive Pioreactors\n        </Box>\n      </Typography>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={false} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n    </React.Fragment>\n)}\n\nfunction Pioreactors({title}) {\n  const [experimentMetadata, setExperimentMetadata] = useState({})\n  const [config, setConfig] = useState({})\n\n  useEffect(() => {\n    document.title = title;\n\n    function getLatestExperiment() {\n        fetch(\"/api/experiments/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n\n    getConfig(setConfig)\n    getLatestExperiment()\n  }, [title])\n\n  const entries = (a) => Object.entries(a)\n  const activeUnits = config['cluster.inventory'] ? entries(config['cluster.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]) : []\n  const inactiveUnits = config['cluster.inventory'] ? entries(config['cluster.inventory']).filter((v) => v[1] === \"0\").map((v) => v[0]) : []\n\n  return (\n    <Grid container spacing={2} >\n      <Grid item md={12} xs={12}>\n        <PioreactorHeader config={config} experiment={experimentMetadata.experiment}/>\n        <ActiveUnits experiment={experimentMetadata.experiment} config={config} units={activeUnits} />\n        { (inactiveUnits.length > 0) &&\n        <InactiveUnits experiment={experimentMetadata.experiment} config={config} units={inactiveUnits}/>\n        }\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Pioreactors;\n\n","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport FlareIcon from '@mui/icons-material/Flare';\nimport { Client, Message } from \"paho-mqtt\";\nimport clsx from 'clsx';\nimport {useState, useEffect} from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport Button from \"@mui/material/Button\";\nimport TextField from '@mui/material/TextField';\nimport Divider from '@mui/material/Divider';\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport EditIcon from '@mui/icons-material/Edit';\nimport {getRelabelMap} from \"../utilities\"\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    width: \"100%\"\n\n  },\n}));\n\nfunction FlashLEDButton(props){\n  const classes = useStyles();\n\n  const [flashing, setFlashing] = useState(false)\n\n\n  const onClick = () => {\n    setFlashing(true)\n    const sendMessage = () => {\n      var message = new Message(\"1\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        \"$experiment\",\n        \"monitor\",\n        \"flicker_led_response_okay\",\n      ].join(\"/\");\n      message.qos = 0;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 1000)\n      }\n    }\n\n    sendMessage()\n    setTimeout(() => {setFlashing(false)}, 3600 ) // .9 * 4\n  }\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\"}} className={clsx({blinkled: flashing})} disabled={props.disabled} onClick={onClick} color=\"primary\">\n      <FlareIcon color={props.disabled ? \"disabled\" : \"primary\"} fontSize=\"15\" classes={{root: classes.textIcon}}/> <span > Identify </span>\n    </Button>\n)}\n\nfunction AssignLabels(props){\n  const classes = useStyles();\n  const [labels, setLabels] = useState({})\n  const [relabelMap, setRelabelMap] = useState({})\n  const [client, setClient] = useState(null)\n  const [confirmed, setConfirmed] = useState(false)\n  const activeUnits = props.config['cluster.inventory'] ? Object.entries(props.config['cluster.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]) : []\n\n\n  React.useEffect(() => {\n    getRelabelMap(setRelabelMap)\n  }, [])\n\n\n  useEffect(() => {\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `${props.config.remote.ws_url}/`,\n        \"webui_publishExpNameToMQTT\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${props.config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_publishExpNameToMQTT\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.connect();\n    setClient(client)\n  },[props.config])\n\n\n  const onSubmit = () => {\n    Object.entries(labels).map(unit_label => (\n      fetch('/api/unit_labels/current',{\n            method: \"PUT\",\n            body: JSON.stringify({label: unit_label[1], unit: unit_label[0]}),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n        })\n    ))\n    setConfirmed(true)\n  }\n\n  const onLabelChange = (unit) => (e) => setLabels({...labels, [unit]: e.target.value})\n  const count = Object.values(labels).reduce((accumulator, value) => accumulator + (value !== \"\"), 0)\n\n  return (\n    <div className={classes.root}>\n\n      <Grid container spacing={1}>\n\n        <Grid item xs={12}>\n          <p> Assign labels to Pioreactors in your cluster. These labels are temporary for this experiment, and will show up in charts, tables, and elsewhere in this interface.  </p>\n\n          <p>Labels can be changed later, too.</p>\n          <Divider style={{marginBottom: \"20px\"}}/>\n        </Grid>\n\n\n          {activeUnits.map((unit) => (\n              <React.Fragment key={unit}>\n              <Grid item lg={2} md={1}  xs={0}/>\n              <Grid item lg={8} md={10}  xs={12}>\n                <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-between\"}}>\n                  <div style={{width: \"140px\"}}>\n                    <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.0em\"}}/>\n                    <span style={{lineHeight: \"40px\"}}>{unit}</span>\n                  </div>\n                  <div>\n                    <TextField size=\"small\" defaultValue={relabelMap[unit]} placeholder=\"(Optional)\" onChange={onLabelChange(unit)} style={{width: \"140px\", marginRight: \"10px\"}}/>\n                  </div>\n                  <div>\n                    <FlashLEDButton client={client} disable={false} config={props.config} unit={unit}/>\n                  </div>\n                </div>\n              </Grid>\n              <Grid item lg={2} md={1} xs={0}/>\n              </React.Fragment>\n            )\n            )}\n          <Grid item xs={12} lg={4}/>\n          <Grid item xs={12} lg={8}>\n            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmit}\n                endIcon={confirmed ? <CheckIcon /> : <EditIcon /> }\n                disabled={(count === 0) || confirmed}\n              >\n                   {confirmed ? \"Assigned\" : (count > 0 ? `Assign ${count}` : \"Assign\")}\n               </Button>\n            </div>\n          </Grid>\n      </Grid>\n\n    </div>\n  );}\n\n\nexport default AssignLabels;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport FormGroup from '@mui/material/FormGroup';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport {Typography} from '@mui/material';\nimport Button from \"@mui/material/Button\";\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport SaveIcon from '@mui/icons-material/Save';\n\n//import CleaningScript from \"./components/CleaningScript\"\nimport AssignLabels from \"./components/AssignLabels\"\n//import RunFromExperimentProfile from \"./components/RunFromExperimentProfile\"\n//import StartSensors from \"./components/StartSensors\"\n//import StartCalculations from \"./components/StartCalculations\"\nimport {getConfig} from \"./utilities\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  skipButton: {\n    marginRight: theme.spacing(1),\n    float: \"right\",\n  },\n  instructions: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"60%\"\n  },\n  textField:{\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(2),\n    width: \"100%\"\n\n  },\n  thinTextField:{\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"100%\"\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\n\nconst filter = createFilterOptions();\n\nfunction FreeSoloCreateOption(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState({key: props.value});\n  const options = props.options\n  const updateParentCallback = props.updateParentCallback\n\n  React.useEffect( () => {\n    setValue({key: props.value});\n  }, [props.value]);\n\n  return (\n    <Autocomplete\n      value={value}\n      className={classes.textField}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            key: newValue,\n          });\n          updateParentCallback(newValue)\n\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            key: newValue.inputValue,\n          });\n          updateParentCallback(newValue.inputValue)\n\n        } else {\n          setValue(newValue);\n          updateParentCallback(newValue?.key)\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.key);\n        if ((inputValue !== '') && !isExisting) {\n          filtered.push({\n            inputValue,\n            key: `Add \"${inputValue}\"`,\n          });\n        }\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-addition\"\n      options={options}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        if (option.key){\n          return option.key;\n        }\n        return \"\"\n      }}\n      renderOption={(props, option) => <li {...props}>{option.key}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label={props.label} />\n      )}\n    />\n  );\n}\n\n\n\nfunction ExperimentSummaryForm(props) {\n  const classes = useStyles();\n  const timestamp = moment.utc()\n  const [formError, setFormError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\" \");\n  const [expName, setExpName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [organismUsed, setOrganismUsed] = React.useState(\"\");\n  const [mediaUsed, setMediaUsed] = React.useState(\"\");\n  const [historicalMediaUsed, setHistoricalMediaUsed] = React.useState([]);\n  const [historicalOrganismUsed, setHistoricalOrganismUsed] = React.useState([]);\n  const [historicalExperiments, setHistoricalExperiments] = React.useState({});\n\n  React.useEffect(() => {\n    function getHistoricalExperiments() {\n      fetch(\"/api/experiments\")\n        .then((response) => {\n          if (response.ok){\n            return response.json();\n          }\n        }).then(json => json.reduce((acc, {experiment}) => {\n              acc[experiment] = 1;\n              return acc;\n            }, {}))\n        .then(data => setHistoricalExperiments(data))\n    }\n\n\n    function populateDropDowns() {\n      fetch(\"/api/historical_media\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n          })\n        .then(json => setHistoricalMediaUsed(json))\n\n      fetch(\"/api/historical_organisms\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n          })\n        .then(json => setHistoricalOrganismUsed(json))\n    }\n    populateDropDowns();\n    getHistoricalExperiments();\n  }, [])\n\n\n  function populateFields(){\n    fetch(\"/api/experiments/latest\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExpName(data.experiment)\n        setDescription(data.description)\n        setOrganismUsed(data.organism_used)\n        setMediaUsed(data.media_used)\n      });\n  }\n\n\n  function killExistingJobs(){\n     fetch('/api/stop_all', {method: \"POST\"})\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (expName === \"\"){\n      setFormError(true)\n      setHelperText(\"Can't be blank.\")\n      return\n    }\n    else if (expName.includes(\"#\") || expName.includes(\"+\") || expName.includes(\"/\")) {\n      setFormError(true)\n      setHelperText(\"Can't use #, / or + characters in experiment name.\")\n      return\n    }\n\n    fetch('/api/experiments',{\n        method: \"POST\",\n        body: JSON.stringify({experiment : expName.trim(), created_at: timestamp.toISOString(), description: description, mediaUsed: mediaUsed, organismUsed: organismUsed }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok){\n          setHelperText(\" \")\n          setFormError(false);\n          killExistingJobs()\n          props.handleNext()\n        }\n        else if (res.status === 409) {\n          setFormError(true);\n          setHelperText(\"Experiment name already used. Please choose another.\")\n        }\n        else {\n          setFormError(true);\n          setHelperText(\"Sever error. See UI logs.\")\n        }\n      }\n     )\n  }\n\n  const onExpNameChange = (e) => {\n    var experimentNameProposed = e.target.value\n    setExpName(experimentNameProposed)\n    // realtime validation\n    if (experimentNameProposed.trim() in historicalExperiments){\n      setFormError(true);\n      setHelperText(\"Experiment name already used. Please choose another.\")\n    }\n    else if (experimentNameProposed.includes(\"#\") || experimentNameProposed.includes(\"+\") || experimentNameProposed.includes(\"/\")) {\n      setFormError(true)\n      setHelperText(\"Can't use #, / or + characters in experiment name.\")\n    }\n    else {\n      setHelperText(\" \")\n      setFormError(false)\n    }\n  }\n\n\n  const onDescChange = (e) => {\n    setDescription(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={8}>\n            <TextField\n              error={formError}\n              id=\"expName\"\n              label=\"Experiment name\"\n              value={expName}\n              required\n              className={classes.thinTextField}\n              onChange={onExpNameChange}\n              helperText={helperText}\n              />\n          </Grid>\n          <Grid item xs={12} md={6}>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TextField\n              label=\"Description (optional)\"\n              rows={2}\n              placeholder=\"Add a description. This description can be changed later.\"\n              multiline\n              value={description}\n              className={classes.textField}\n              onChange={onDescChange}\n              fullWidth={true}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <FreeSoloCreateOption\n              options={historicalOrganismUsed}\n              label=\"Organism / strain (optional)\"\n              updateParentCallback={setOrganismUsed}\n              value={organismUsed}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <FreeSoloCreateOption\n              options={historicalMediaUsed}\n              label=\"Media (optional)\"\n              updateParentCallback={setMediaUsed}\n              value={mediaUsed}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={4}/>\n          <Grid item xs={12} md={8}>\n            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n              <Button style={{marginRight: \"10px\", textTransform: \"none\"}} size=\"small\" color=\"primary\" onClick={populateFields}>Populate with previous experiment</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmit}\n                endIcon={<SaveIcon />}\n                disabled={(expName===\"\") || formError}\n              >\n                Save\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </FormGroup>\n    </div>\n  );\n}\n\n\n\n\n\nfunction StartNewExperimentContainer(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const countActiveUnits = props.config['cluster.inventory'] ? Object.entries(props.config['cluster.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]).length : 0\n\n\n  const getStepContent = (index) => {\n    return steps[index].content\n  }\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1){\n      window.location.href = \"/overview\"; // change to location\n    } else {\n\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n      window.scrollTo({top: 0})\n    }\n  };\n\n\n  const steps = [\n    {title: 'Experiment summary', content: <ExperimentSummaryForm config={props.config} handleNext={handleNext}/>, optional: false},\n  ]\n\n  if (countActiveUnits > 1){\n    steps.push({title: 'Assign labels', content: <AssignLabels config={props.config} handleNext={handleNext} />, optional: true})\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Start a new experiment\n        </Typography>\n        <div>\n          <div>\n            <div className={classes.instructions}>{getStepContent(activeStep)}</div>\n            <div>\n            {(activeStep !== 0) && (\n              <div>\n                <Button color=\"inherit\" onClick={handleNext} sx={{ mr: 1 }} className={classes.skipButton}>\n                  Skip / Next\n                </Button>\n              </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nfunction StartNewExperiment(props) {\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n    getConfig(setConfig)\n  }, [])\n\n  React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n  return (\n      <Grid container spacing={2} >\n        <Grid item xs={12} md={12}>\n          <StartNewExperimentContainer config={config}/>\n        </Grid>\n      </Grid>\n  )\n}\n\nexport default StartNewExperiment;\n\n","import React from \"react\";\n\nimport FormControl from '@mui/material/FormControl';\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from '@mui/styles';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { CodeFlaskReact } from \"react-codeflask\"\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nclass EditExperimentProfilesContent extends React.Component {\n  DEFAULT_CODE = `experiment_profile_name:\n\nmetadata:\n  description:\n  author:\n`\n  DEFAULT_FILENAME = \"\"\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: props.code || this.DEFAULT_CODE,\n      filename: props.filename || this.DEFAULT_FILENAME,\n      openSnackbar: false,\n      snackbarMsg: \"\",\n      isChanged: false,\n    }\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code, isChanged: true})\n  }\n\n  onFilenameChange = (e) => {\n    this.setState({filename: e.target.value.replace(/ |\\//g, \"_\"), isChanged: true})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  saveCurrentCode() {\n    if (this.state.filename === \"\") {\n      this.setState({isError: true, errorMsg: \"Filename can't be blank\"})\n      return\n    }\n\n    this.setState({saving: true, isError: false, isChanged: false})\n    fetch(\"/api/contrib/experiment_profiles\",{\n        method: \"POST\",\n        body: JSON.stringify({body :this.state.code, filename: this.state.filename + '.yaml'}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({saving: false})\n        this.setState({openSnackbar: true});\n        this.setState({snackbarMsg: `Experiment profile ${this.state.filename}.yaml saved.`});\n      } else {\n        res.json().then(parsedJson =>\n          this.setState({errorMsg: parsedJson['msg'], isError: true, saving: false, isChanged: true})\n        )\n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div style={{width: \"100%\", margin: \"10px\", display: \"flex\", justifyContent:\"space-between\"}}>\n            <FormControl>\n            <TextField\n              label=\"Filename\"\n              onChange={this.onFilenameChange}\n              required\n              value={this.state.filename}\n              styles={{width: \"200px\"}}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">.yaml</InputAdornment>,\n              }\n            }\n\n            />\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={3} />\n        <Grid container xs={3} direction=\"column\" alignItems=\"flex-end\">\n          <Grid item xs={12} />\n        </Grid>\n\n        <Grid item xs={12}>\n            <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"280px\", border: \"1px solid #ccc\"}}>\n              <CodeFlaskReact\n                code={this.state.code}\n                onChange={this.onTextChange}\n                editorRef={this.getCodeFlaskRef}\n                language={\"yaml\"}\n              />\n            </div>\n        </Grid>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{marginLeft: \"20px\"}}\n              onClick={this.saveCurrentCode}\n              endIcon={ <SaveIcon /> }\n              disabled={!this.state.isChanged}\n            >\n              Save\n           </Button>\n           <p style={{marginLeft: \"20px\"}}>{this.state.isError ? <Box color=\"error.main\">{this.state.errorMsg}</Box>: \"\"}</p>\n          </div>\n        </div>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={this.state.openSnackbar}\n        onClose={this.handleSnackbarClose}\n        message={this.state.snackbarMsg}\n        autoHideDuration={4000}\n        key={\"create-profile-snackbar\"}\n      />\n      </>\n    );\n  }\n}\n\n\nfunction ProfilesContainer(props){\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Create Experiment Profile\n            </Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <Button to={`/experiment-profiles`} component={Link} style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <ArrowBackIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Back\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditExperimentProfilesContent />\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about <a href=\"https://docs.pioreactor.com/user-guide/experiment-profiles-schema\" target=\"_blank\" rel=\"noopener noreferrer\">experiment profile schemas</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction CreateNewProfile(props) {\n\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ProfilesContainer />\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default CreateNewProfile;\n","import React from \"react\";\n\nimport FormControl from '@mui/material/FormControl';\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from '@mui/styles';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { CodeFlaskReact } from \"react-codeflask\"\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Snackbar from '@mui/material/Snackbar';\nimport { useSearchParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nclass EditExperimentProfilesContent extends React.Component {\n  DEFAULT_CODE = `experiment_profile_name:\n\nmetadata:\n  description:\n  author:\n`\n  DEFAULT_FILENAME = \"\"\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: props.code || this.DEFAULT_CODE,\n      filename: props.filename || this.DEFAULT_FILENAME,\n      filenameEditable: props.filename !== null,\n      openSnackbar: false,\n      isChanged: false,\n      snackbarMsg: \"\",\n    }\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code, isChanged: true})\n  }\n\n  onFilenameChange = (e) => {\n    this.setState({filename: e.target.value})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.code !== this.props.code) {\n      this.setState({code: this.props.code});\n    }\n  }\n\n  saveCurrentCode() {\n    if (this.state.filename === \"\") {\n      this.setState({isError: true, errorMsg: \"Filename can't be blank\"})\n      return\n    }\n\n    this.setState({saving: true, isError: false, isChanged: false})\n    fetch(\"/api/contrib/experiment_profiles\",{\n        method: \"POST\",\n        body: JSON.stringify({body :this.state.code, filename: this.state.filename + '.yaml'}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({saving: false})\n        this.setState({openSnackbar: true});\n        this.setState({snackbarMsg: `Experiment profile ${this.state.filename}.yaml saved.`});\n      } else {\n        res.json().then(parsedJson =>\n          this.setState({errorMsg: parsedJson['msg'], isError: true, saving: false})\n        )\n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div style={{width: \"100%\", margin: \"10px\", display: \"flex\", justifyContent:\"space-between\"}}>\n            <FormControl>\n            <TextField\n              label=\"Filename\"\n              onChange={this.onFilenameChange}\n              value={this.state.filename}\n              disabled={this.state.filenameEditable}\n              styles={{width: \"200px\"}}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">.yaml</InputAdornment>,\n              }\n            }\n\n            />\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={3} />\n        <Grid container xs={3} direction=\"column\" alignItems=\"flex-end\">\n          <Grid item xs={12} />\n        </Grid>\n\n        <Grid item xs={12}>\n            <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"280px\", border: \"1px solid #ccc\"}}>\n              <CodeFlaskReact\n                code={this.state.code}\n                onChange={this.onTextChange}\n                editorRef={this.getCodeFlaskRef}\n                language={\"yaml\"}\n              />\n            </div>\n        </Grid>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{marginLeft: \"20px\"}}\n              onClick={this.saveCurrentCode}\n              endIcon={ <SaveIcon /> }\n              disabled={!this.state.isChanged}\n            >\n              Save\n           </Button>\n           <p style={{marginLeft: \"20px\"}}>{this.state.isError ? <Box color=\"error.main\">{this.state.errorMsg}</Box>: \"\"}</p>\n          </div>\n        </div>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={this.state.openSnackbar}\n        onClose={this.handleSnackbarClose}\n        message={this.state.snackbarMsg}\n        autoHideDuration={4000}\n        key={\"edit-profile-snackbar\"}\n      />\n      </>\n    );\n  }\n}\n\n\nfunction ProfilesContainer(props){\n  const classes = useStyles();\n  const [queryParams, setQueryParams] = useSearchParams();\n  const [source, setSource] = React.useState('')\n  const filename = queryParams.get(\"profile\")\n\n  React.useEffect(() => {\n    fetch(`/api/contrib/experiment_profiles/${filename}`, {\n          method: \"GET\",\n      }).then(res => {\n        if (res.ok) {\n          return res.text();\n        }\n      }).then(text => {\n        setSource(text)\n      })\n  })\n\n  return(\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Edit Experiment Profile\n            </Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <Button to={`/experiment-profiles`} component={Link} style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <ArrowBackIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Back\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditExperimentProfilesContent code={source} filename={filename.split(\".\")[0]}/>\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about <a href=\"https://docs.pioreactor.com/user-guide/experiment-profiles-schema\" target=\"_blank\" rel=\"noopener noreferrer\">experiment profile schemas</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction EditProfile(props) {\n\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ProfilesContainer />\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default EditProfile;\n","import React from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport FormLabel from '@mui/material/FormLabel';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport {Typography} from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Select from '@mui/material/Select';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { CodeFlaskReact } from \"react-codeflask\"\nimport moment from \"moment\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\nclass EditableCodeDiv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"Loading...\",\n      openSnackbar: false,\n      filename: \"config.ini\",\n      snackbarMsg: \"\",\n      saving: false,\n      historicalConfigs: [{filename: \"config.ini\", data: \"\", timestamp: \"2000-01-01\"}],\n      timestamp_ix: 0,\n      errorMsg: \"\",\n      isError: false,\n      hasChangedSinceSave: true,\n      availableConfigs: [\n        {name: \"shared config.ini\", filename: \"config.ini\"},\n      ]\n    };\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n    this.deleteConfig = this.deleteConfig.bind(this);\n  }\n\n  getConfig(filename) {\n    fetch(`/api/configs/${filename}`)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        this.setState({code: text});\n      })\n  }\n\n  getListOfConfigFiles() {\n    fetch(\"/api/configs\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState(prevState => ({\n          availableConfigs: [...prevState.availableConfigs, ...json.filter(e => (e !== 'config.ini')).map(e => ({name: e, filename: e}))]\n        }));\n      })\n  }\n\n  getHistoricalConfigFiles(filename) {\n    fetch(\"/api/historical_configs/\" + filename)\n      .then(response => {\n        return response.json();\n      })\n      .then(listOfHistoricalConfigs => {\n        this.setState({\n          historicalConfigs: listOfHistoricalConfigs,\n          timestamp_ix: 0\n        });\n      })\n  }\n\n  saveCurrentCode() {\n    this.setState({saving: true, isError: false})\n    fetch(`/api/configs/${this.state.filename}`,{\n        method: \"PATCH\",\n        body: JSON.stringify({code :this.state.code, filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" saved and synced.\", hasChangedSinceSave: false, saving: false})\n        this.setState({openSnackbar: true});\n      } else {\n        res.json().then(parsedJson =>\n          this.setState({errorMsg: parsedJson['msg'], isError: true, hasChangedSinceSave: true, saving: false})\n        )\n      }\n    })\n  }\n\n  deleteConfig(){\n    fetch(`/api/configs/${this.state.filename}`,{\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" deleted.\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong deleting...\"})\n      }\n      this.setState({openSnackbar: true});\n      setTimeout(function () {\n        window.location.reload();\n      }, 750);\n    })\n  }\n\n  componentDidMount() {\n    this.getConfig(this.state.filename)\n    this.getListOfConfigFiles()\n    this.getHistoricalConfigFiles(this.state.filename)\n    this.setState({timestamp: this.state.historicalConfigs[0].timestamp})\n  }\n\n  onSelectionChange = (e) => {\n    const filename = e.target.value\n    this.setState({filename: filename})\n    this.getConfig(filename)\n    this.getHistoricalConfigFiles(filename)\n  }\n\n  onSelectionHistoricalChange = (e) => {\n    const timestamp = e.target.value\n    const ix = this.state.historicalConfigs.findIndex((c) => c.timestamp === timestamp)\n    const configBlob = this.state.historicalConfigs[ix]\n    this.setState({code: configBlob.data, timestamp_ix: ix})\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code, hasChangedSinceSave: true})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{width: \"100%\", margin: \"10px\", display: \"flex\", justifyContent:\"space-between\"}}>\n          <FormControl>\n            <div>\n              <FormLabel component=\"legend\">Config file</FormLabel>\n              <Select\n                labelId=\"configSelect\"\n                variant=\"standard\"\n                value={this.state.filename}\n                onChange={this.onSelectionChange}\n              >\n                {this.state.availableConfigs.map((v) => {\n                  return <MenuItem key={v.filename} value={v.filename}>{v.name}</MenuItem>\n                  }\n                )}\n              </Select>\n            </div>\n          </FormControl>\n          {this.state.historicalConfigs.length > 0 ? (\n          <FormControl style={{marginRight: \"20px\"}}>\n            <div>\n              <FormLabel component=\"legend\">Versions</FormLabel>\n              <Select\n                labelId=\"historicalConfigSelect\"\n                variant=\"standard\"\n                value={this.state.historicalConfigs.length > 0 ? this.state.historicalConfigs[this.state.timestamp_ix].timestamp : \"\"}\n                displayEmpty={true}\n                onChange={this.onSelectionHistoricalChange}\n              >\n                {this.state.historicalConfigs.map((v, i) => {\n                  return <MenuItem key={v.timestamp} value={v.timestamp}>{i === 0 ? \"Current\" : moment(v.timestamp).format(\"MMM DD [at] hh:mm a\") }</MenuItem>\n                  }\n                )}\n              </Select>\n            </div>\n          </FormControl>\n        ) : <div></div>}\n\n        </div>\n\n        <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"280px\", border: \"1px solid #ccc\"}}>\n          <CodeFlaskReact\n            code={this.state.code}\n            onChange={this.onTextChange}\n            editorRef={this.getCodeFlaskRef}\n            language={\"python\"}\n          />\n        </div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <div>\n            <LoadingButton\n              style={{margin: \"5px 12px 5px 12px\"}}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.saveCurrentCode}\n              disabled={!this.state.hasChangedSinceSave}\n              loading={this.state.saving}\n              loadingPosition=\"end\"\n              endIcon={<SaveIcon />}\n              >\n              {this.state.timestamp_ix === 0 ? \"Save\" : \"Revert\"}\n            </LoadingButton>\n            <p style={{marginLeft: 12}}>{this.state.isError ? <Box color=\"error.main\">{this.state.errorMsg}</Box>: \"\"}</p>\n          </div>\n          <Button\n            style={{margin: \"5px 10px 5px 10px\", textTransform: \"none\"}}\n            color=\"secondary\"\n            onClick={this.deleteConfig}\n            disabled={(this.state.filename === \"config.ini\")}\n            >\n            <DeleteIcon fontSize=\"15\" /> Delete config file\n          </Button>\n        </div>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n          open={this.state.openSnackbar}\n          onClose={this.handleSnackbarClose}\n          message={this.state.snackbarMsg}\n          autoHideDuration={2000}\n          key={\"edit-config-snackbar\"}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n\nfunction EditConfigContainer(){\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Configuration\n            </Box>\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableCodeDiv/>\n\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about Pioreactor  <a href=\"https://docs.pioreactor.com/user-guide/configuration\" target=\"_blank\" rel=\"noopener noreferrer\">configuration</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction EditConfig(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n             <EditConfigContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default EditConfig;\n\n","import React from 'react'\n\nimport { makeStyles } from '@mui/styles';\n\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport CheckIcon from '@mui/icons-material/Check';\nimport Icon from '@mui/material/Icon';\n\nconst useStyles = makeStyles({\n  button: props => (props.buttonStyle),\n  buttonDropdown: {},\n})\n\nconst SelectButton = React.forwardRef((\n  props,\n  ref,\n) => {\n  const { textPrefix, onChange = () => {}, onClick = () => {}, value: initialValue, children } = props\n  const classes = useStyles(props)\n  const anchorRef = (ref || React.useRef(null))\n  const [isOpen, setOpen] = React.useState(false)\n  const valueRef = React.useRef(initialValue)\n  valueRef.current = initialValue\n\n  const handleItemClick = (value) => (e) => {\n    setOpen(false)\n    Object.defineProperty(e, 'target', { writable: true, value: { value } })\n    valueRef.current = value\n    onChange(e)\n  }\n\n  const handleButtonClick = (e) => {\n    const value = valueRef.current\n    Object.defineProperty(e, 'target', { writable: true, value: { value } })\n    valueRef.current = value\n    onClick(e)\n  }\n\n  const items = React.Children\n    .map(children, child => {\n      if (!child) {\n        return null\n      }\n      const selected = valueRef.current === child.props.value\n      const valueReadable = child.props.children\n      const icon = selected ? <CheckIcon style={{marginRight: \"5px\", verticalAlign: \"-1px\"}}/>: <Icon style={{marginRight: \"5px\", verticalAlign: \"-1px\"}}/>\n      const item = (\n        <MenuItem\n          onClick={handleItemClick(child.props.value)}\n          selected={selected}\n          role=\"option\"\n          aria-selected={selected ? 'true' : undefined}\n          data-value-readable={valueReadable}\n          data-value={child.props.value}\n          value={undefined}\n        >\n          {icon}{valueReadable}\n        </MenuItem>\n      )\n      return item\n    })\n    .filter(item => item !== null)\n\n  const displayName = (value) =>\n    (items.find(item => item.props['data-value'] === value)).props['data-value-readable']\n\n  return <>\n    <ButtonGroup variant='contained' ref={anchorRef}>\n      <Button\n        className={classes.button}\n        onClick={handleButtonClick}\n        endIcon={props.endIcon}\n        disabled={props.disabled}\n      >\n        { textPrefix }{ displayName(valueRef.current) }\n      </Button>\n      <Button\n        className={classes.buttonDropdown}\n        size='small'\n        onClick={() => setOpen(true)}\n        disabled={props.disabled}\n      >\n        <ArrowDropDownIcon />\n      </Button>\n    </ButtonGroup>\n    <Menu\n      open={isOpen}\n      onClose={() => setOpen(false)}\n      getContentAnchorEl={null} // needed for anchorOrigin to work\n      anchorEl={anchorRef.current}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n    >\n      { items }\n    </Menu>\n  </>\n})\n\nSelectButton.displayName = 'SelectButton'\n\nexport default SelectButton","import clsx from 'clsx';\n\nimport React from \"react\";\nimport MarkdownView from 'react-showdown';\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Link from '@mui/material/Link';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport SystemUpdateAltIcon from '@mui/icons-material/SystemUpdateAlt';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { useConfirm } from 'material-ui-confirm';\nimport UnderlineSpan from \"./components/UnderlineSpan\";\nimport SelectButton from \"./components/SelectButton\";\nimport ScienceIcon from '@mui/icons-material/Science';\nimport FolderZipIcon from '@mui/icons-material/FolderZip';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst VisuallyHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1,\n});\n\nconst lostRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  lostRed: {\n    color: lostRed\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction UploadArchiveAndConfirm(props) {\n  const classes = useStyles()\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  const [errorMsg, setErrorMsg] = React.useState(null);\n  const handleClose = props.onClose\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0]\n\n    if (/^release_\\d{0,2}\\.\\d{0,2}\\.\\d{0,2}\\w{0,6}\\.zip$/.test(file.name)) {\n      setSelectedFile(event.target.files[0]);\n      setErrorMsg(null)\n    }\n    else {\n      setErrorMsg(\"Not a valid release archive file. It should be a zip file, starting with `release_`.\")\n    }\n  };\n\n  const handleFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        // Handle non-2xx responses here\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed with status ' + response.status);\n      }\n\n      const data = await response.json();\n      return data.save_path;\n    } catch (error) {\n      setErrorMsg(error.message)\n      return null;\n    }\n  };\n\n  const handleUpdate = async (savePath) => {\n    try {\n      await fetch(\"/api/update_app_from_release_archive\", {\n        method: \"POST\",\n        body: JSON.stringify({ release_archive_location: savePath }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUploadClick = async () => {\n    const savePath = await handleFileUpload();\n\n    if (savePath === null) {\n      // Exit the function if there was a problem in handleFileUpload\n      return;\n    }\n\n    await handleUpdate(savePath);\n    handleClose();\n    props.onSuccess()\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {props.title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.description}\n            <br/>\n            <br/>\n            <Button component=\"label\" style={{textTransform: 'none'}}>Choose file <VisuallyHiddenInput onChange={handleFileChange} accept=\".zip\" type=\"file\" /></Button>\n            {selectedFile == null ? \"\" : selectedFile.name}\n            <div style={{minHeight: \"30px\", alignItems: \"center\", display: \"flex\"}}>\n              {errorMsg   ? <p><CloseIcon className={clsx(classes.textIcon, classes.lostRed)}/>{errorMsg}</p>           : <React.Fragment/>}\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">Cancel</Button>\n          <Button disabled={selectedFile == null} onClick={handleUploadClick}>Update</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction UpdateSoftwareConfirmDialog(props) {\n  const confirm = useConfirm();\n  const [updating, setUpdating] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false)\n  const [installOption, setInstallOption] = React.useState(\"latest\")\n  const [showArchiveConfirm, setShowArchiveConfirm] = React.useState(false);\n\n  const updateVersion = () => {\n    setOpenSnackbar(true)\n    if (installOption === \"development\"){\n      fetch(\"/api/update_app_to_develop\", {method: \"POST\"})\n    } else if (installOption === \"latest\") {\n      fetch(\"/api/update_app\", {method: \"POST\"})\n    }\n  }\n\n  const handleClick = () => {\n    if (installOption === \"archive\") {\n      // Open the UploadArchiveAndConfirm dialog\n      setShowArchiveConfirm(true);\n    }\n    else {\n      confirm({\n        description: getDescription(),\n        title: getTitle(),\n        confirmationText: \"Update\",\n        confirmationButtonProps: {color: \"primary\"},\n        cancellationButtonProps: {color: \"secondary\"}, //style: {textTransform: 'none'}\n        }).then(() => {\n          updateVersion();\n          setUpdating(true)\n        }\n      )\n    }\n  };\n\n  const getIcon = () =>{\n    if ( installOption ===\"development\"){\n      return <ScienceIcon/>\n    }\n    else if (installOption === \"latest\") {\n      return <UpdateIcon/>\n    }\n    else if (installOption === \"archive\"){\n      return <FolderZipIcon/>\n    }\n  }\n\n  const getTitle = () => {\n    if (installOption === \"development\"){\n      return \"Update to development build?\"\n    }\n    else if (installOption === \"latest\") {\n      return \"Update to next release?\"\n    }\n    else if (installOption === \"archive\"){\n      return \"Update from release archive?\"\n    }\n  }\n\n  const getDescription = () => {\n    if (installOption === \"development\"){\n      return \"This requires an internet connection. To avoid possible data interruptions, we suggest updating between running experiments. We also recommend being on the latest release of software before doing this. Check you are on the latest software before updating.\"\n    }\n    else if (installOption === \"latest\") {\n      return \"This requires an internet connection. To avoid possible data interruptions, we suggest updating between running experiments.\"\n    }\n    else if (installOption === \"archive\"){\n      return \"To avoid possible data interruptions, we suggest updating between running experiments. Choose the release archive below.\"\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <SelectButton\n        buttonStyle={{textTransform: 'none'}}\n        value={installOption}\n        onClick={handleClick}\n        onChange={({ target: { value } }) =>\n          setInstallOption(value)\n        }\n        disabled={updating}\n        endIcon={getIcon()}\n      >\n        <MenuItem value={\"latest\"}>Update to next release</MenuItem>\n        <MenuItem value={\"development\"}>Update to development</MenuItem>\n        <MenuItem value={\"archive\"}>Update from release archive</MenuItem>\n      </SelectButton>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        message=\"Updating in the background. This may take a few minutes. You may leave this page.\"\n        autoHideDuration={20000}\n        key=\"snackbar-update\"\n      />\n      {showArchiveConfirm && (\n        <UploadArchiveAndConfirm\n          title={getTitle()}\n          description={getDescription()}\n          onSuccess={() => setOpenSnackbar(true)}\n          onClose={() => setShowArchiveConfirm(false)}\n        />\n      )}\n      </React.Fragment>\n  );\n}\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  const [version, setVersion] = React.useState(\"\")\n  const [uiVersion, setUIVersion] = React.useState(\"\")\n  const [latestVersion, setLatestVersion] = React.useState(\"\")\n\n\n  React.useEffect(() => {\n    async function getCurrentAppVersion() {\n         await fetch(\"/api/versions/app\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getCurrentUIVersion() {\n         await fetch(\"/api/versions/ui\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setUIVersion(data)\n        });\n      }\n\n    async function getLatestAppVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['tag_name'])\n        })\n        .catch(e => {\n          console.log(\"No internet connection?\")\n        })\n      }\n\n      getCurrentUIVersion()\n      getCurrentAppVersion()\n      getLatestAppVersion()\n  }, [])\n\n  return (\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Updates\n          </Box>\n        </Typography>\n        <div>\n          <div style={{float: \"right\", marginRight: \"0px\", marginLeft: \"10px\"}}>\n            <UpdateSoftwareConfirmDialog />\n          </div>\n          <Link color=\"inherit\" underline=\"none\" href={`https://github.com/Pioreactor/pioreactor/releases/tag/${latestVersion}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Button style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n              <OpenInNewIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> View latest release\n            </Button>\n          </Link>\n        </div>\n      </div>\n      <Divider/>\n      <Typography variant=\"subtitle2\">\n\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n          <SystemUpdateAltIcon style={{ fontSize: 14, verticalAlign: \"-1px\" }}/> Version installed:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          <UnderlineSpan title={`App: ${version}\\nUI:  ${uiVersion}`}> {version} </UnderlineSpan>\n        </Box>\n\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <UpdateIcon style={{ fontSize: 14, verticalAlign: \"-1px\" }}/>\n          Latest version available:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {latestVersion}\n        </Box>\n\n      </Typography>\n    </div>\n  )\n}\n\n\n\nfunction ChangelogContainer(){\n  const classes = useStyles();\n\n  const [changelog, setChangelog] = React.useState(\"\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"https://raw.githubusercontent.com/Pioreactor/pioreactor/master/CHANGELOG.md\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setChangelog(data)\n        }\n        ).catch(e => {\n          // no internet?\n          setChangelog(`\nCould not retrieve latest Changelog. Perhaps not connected to the internet.\n - You can find the latest changelog at this url: [https://github.com/pioreactor/pioreactor/master/CHANGELOG.md](https://github.com/pioreactor/pioreactor/master/CHANGELOG.md)\n - To update to the latest version of Pioreactor software, even without internet, see documentation here: [https://docs.pioreactor.com/user-guide/common-questions#im-using-a-local-access-point-but-id-like-to-install-plugins-update-software-etc](https://docs.pioreactor.com/user-guide/common-questions#im-using-a-local-access-point-but-id-like-to-install-plugins-update-software-etc).\n          `)\n        })\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" component=\"h6\">\n            Change log\n        </Typography>\n          <MarkdownView\n            markdown={changelog}\n          />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Updates(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PageHeader/>\n            <ChangelogContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Updates;\n\n","import { Hashicon } from \"@emeraldpay/hashicon-react\";\nimport React from \"react\";\n\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport {Typography} from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport Snackbar from '@mui/material/Snackbar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Avatar from '@mui/material/Avatar';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"25px\",\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  pluginList:{\n    width: \"92%\",\n    margin: \"auto\",\n    marginBottom: \"15px\"\n  },\n  primaryActionButton:{\n    marginLeft: \"5px\"\n  },\n  secondaryActionButton:{\n    marginLeft: \"15px\"\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldWide: {\n    marginTop: \"15px\",\n    width: \"320px\",\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n}));\n\n\nfunction InstallByNameDialog(props){\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [text, setText] = React.useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\")\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTextChange = evt => {\n    setText(evt.target.value)\n  }\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false)\n  }\n\n  const onSubmit = () => {\n    setSnackbarOpen(true);\n    setSnackbarMsg(`Installing ${text} in the background...`);\n    fetch('/api/install_plugin', {\n      method: \"POST\",\n      body: JSON.stringify({plugin_name: text}),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    setOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n\n    <Button style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\" onClick={handleClickOpen}>\n      <GetAppIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Install plugin by name\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        Install plugin by name\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          <TextField\n            size=\"small\"\n            id=\"plugin-name\"\n            label=\"Plugin name\"\n            variant=\"outlined\"\n            className={classes.textFieldWide}\n            onChange={handleTextChange}\n            value={text}\n          />\n        </div>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{marginTop: \"20px\"}}\n          onClick={onSubmit}\n          type=\"submit\"\n          endIcon={<GetAppIcon />}\n        >\n          Install\n        </Button>\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMsg}\n      autoHideDuration={10000}\n      key=\"snackbar-available\"\n    />\n    </React.Fragment>\n)}\n\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.headerMenu}>\n        <Typography variant=\"h5\" component=\"h2\">\n          <Box fontWeight=\"fontWeightBold\">\n            Plugins\n          </Box>\n        </Typography>\n        <div className={classes.headerButtons}>\n          <InstallByNameDialog />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\nfunction ListSuggestedPlugins({alreadyInstalledPluginsNames}){\n\n  const classes = useStyles();\n  const [availablePlugins, setSuggestedPlugins] = React.useState([])\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\")\n\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"https://raw.githubusercontent.com/Pioreactor/list-of-plugins/main/plugins.json\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          setSuggestedPlugins(json)\n        }).catch(e => {\n          // no internet?\n        })\n      }\n      getData()\n  }, [])\n\n  const installPlugin = (plugin_name) => () => {\n      setSnackbarOpen(true);\n      setSnackbarMsg(`Installing ${plugin_name} in the background...`);\n      fetch('/api/install_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n  }\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n    <div className={classes.pluginList}>\n     <List dense={true}>\n        {availablePlugins\n            .filter(plugin => (!alreadyInstalledPluginsNames.includes(plugin.name)))\n            .map(plugin =>\n          <ListItem key={plugin.name}>\n            <ListItemAvatar>\n              <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                <Hashicon value={plugin.name} size={40} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={plugin.name}\n              primaryTypographyProps={{style: {fontSize: '0.95rem'}}}\n              secondary={\n               <>\n                <Typography\n                  sx={{ display: 'block', fontStyle: \"italic\"}}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"text.primary\"\n                >\n                  {plugin.author}\n                </Typography>\n                <span>\n                 {plugin.description}\n                </span>\n               </>\n              }\n              style={{maxWidth: \"525px\"}}\n            />\n            <ListItemSecondaryAction sx={{display: {xs: 'contents', md: 'block'}}}>\n\n              <Button\n                onClick={installPlugin(plugin.name)}\n                variant=\"contained\"\n                size=\"small\"\n                aria-label=\"install\"\n                color=\"primary\"\n                endIcon={<GetAppIcon />}\n                className={classes.primaryActionButton}\n              >\n                Install\n              </Button>\n              <Button\n                component={Link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                to={plugin.homepage}\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"view homepage\"\n                disabled={!plugin.homepage || (plugin.homepage === \"Unknown\")}\n                endIcon={<OpenInNewIcon />}\n                className={classes.secondaryActionButton}\n              >\n                View\n              </Button>\n              </ListItemSecondaryAction>\n\n          </ListItem>,\n        )}\n      </List>\n    </div>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMsg}\n      autoHideDuration={10000}\n      key=\"snackbar-available\"\n    />\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ListInstalledPlugins({installedPlugins}){\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\")\n  const classes = useStyles();\n\n  const handleSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false)\n  }\n\n  const uninstallPlugin = (plugin_name) => () => {\n      setSnackbarOpen(true);\n      setSnackbarMsg(`Uninstalling ${plugin_name} in the background...`);\n      fetch('/api/uninstall_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n  }\n  if (installedPlugins.length > 0) {\n    return (\n      <React.Fragment>\n      <div className={classes.pluginList}>\n       <List dense={true}>\n          {installedPlugins.map(plugin =>\n            <ListItem key={plugin.name}>\n              <ListItemAvatar>\n                <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                  <Hashicon value={plugin.name} size={42} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${plugin.name} ${(plugin.version === \"Unknown\")  ? \"\" : \"(\" + plugin.version + \")\"}`}\n                primaryTypographyProps={{style: {fontSize: '0.95rem'}}}\n                secondary={\n                 <>\n                  <Typography\n                    sx={{ display: 'block', fontStyle: \"italic\" }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.primary\"\n                  >\n                    {plugin.author || \"unknown author\"}\n                  </Typography>\n                  <span>{`${plugin.description === \"Unknown\" ? \"No description provided.\" : plugin.description}`}</span>\n                 </>\n                }\n                style={{maxWidth: \"525px\"}}\n              />\n              <ListItemSecondaryAction sx={{display: {xs: 'contents', md: 'block'}}}>\n                <Button\n                  onClick={uninstallPlugin(plugin.source.startsWith(\"plugins/\") ? plugin.source.slice(8, -3) : plugin.name)}\n                  variant=\"text\"\n                  size=\"small\"\n                  color=\"primary\"\n                  aria-label=\"delete\"\n                  endIcon={<DeleteIcon />}\n                  className={classes.primaryActionButton}\n                >\n                  Uninstall\n                </Button>\n                { !plugin.source.startsWith(\"plugins/\") &&\n                  <Button\n                    component={Link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    to={plugin.homepage}\n                    variant=\"text\"\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"view homepage\"\n                    disabled={!plugin.homepage || (plugin.homepage === \"Unknown\")}\n                    endIcon={<OpenInNewIcon />}\n                    className={classes.secondaryActionButton}\n                  >\n                    View\n                  </Button>\n                }\n                { plugin.source.startsWith(\"plugins/\") &&\n                  <Button\n                    component={Link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    to={`/api/installed_plugins/${plugin.source.slice(8)}`}\n                    variant=\"text\"\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"view homepage\"\n                    endIcon={<OpenInNewIcon />}\n                    className={classes.secondaryActionButton}\n                  >\n                    View\n                  </Button>\n                }\n              </ListItemSecondaryAction>\n            </ListItem>,\n          )}\n        </List>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={snackbarOpen}\n        onClose={handleSnackbarClose}\n        message={snackbarMsg}\n        autoHideDuration={7000}\n        key=\"snackbar-installation\"\n      />\n      </React.Fragment>\n    )\n  }\n  else {\n    return (\n      <div style={{textAlign: \"center\", marginBottom: '50px', marginTop: \"50px\"}}>\n        <Typography>\n          <Box fontWeight=\"fontWeightRegular\">\n            No installed plugins. Try installing one below, or read more about <a href=\"https://docs.pioreactor.com/user-guide/using-community-plugins\" target=\"_blank\" rel=\"noopener noreferrer\">Pioreactor plugins</a>.\n          </Box>\n        </Typography>\n      </div>\n  )}\n}\n\n\nfunction PluginContainer(){\n  const classes = useStyles();\n\n  const [installedPlugins, setInstalledPlugins] = React.useState([])\n  const [isFetchComplete, setIsFetchComplete] = React.useState(false)\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/api/installed_plugins\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          setIsFetchComplete(true)\n          setInstalledPlugins(json)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p> Discover, install, and manage Pioreactor plugins created by the community. These plugins can provide new functionalities for your Pioreactor (additional hardware may be necessary), or new automations to control dosing, temperature and LED tasks.</p>\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Installed plugins\n         </Typography>\n\n          {isFetchComplete && (\n           <ListInstalledPlugins installedPlugins={installedPlugins}/>\n          )}\n\n          {!isFetchComplete && (\n            <div style={{textAlign: \"center\", marginBottom: '50px', marginTop: \"50px\"}}>\n              <CircularProgress size={33}/>\n            </div>\n          )}\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Suggested plugins from the community\n         </Typography>\n          <ListSuggestedPlugins alreadyInstalledPluginsNames={installedPlugins.map(plugin => plugin.name)}/>\n\n\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about Pioreactor <a href=\"https://docs.pioreactor.com/user-guide/using-community-plugins\" target=\"_blank\" rel=\"noopener noreferrer\">plugins</a>.</p>\n\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Plugins(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PageHeader/>\n            <PluginContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\n\nexport default Plugins;\n","import React from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nconst useStyles = makeStyles((theme) => ({\n  cardContent: {\n    padding: \"10px\"\n  },\n  DisplayProfileCard: {\n    maxHeight: \"350px\",\n    overflow: \"auto\",\n    backgroundColor: \"rgb(248,248,248)\",\n    letterSpacing: \"0em\",\n    margin: \"10px auto 10px auto\",\n    position: \"relative\",\n    width: \"98%\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"0px\",\n    boxShadow: \"none\"\n  },\n}));\n\n\nconst humanReadableDuration = (actionType, hoursElapsed) => {\n  if (hoursElapsed === 0){\n    return `${actionType} immediately`\n  }\n  else if (hoursElapsed < 1./60){\n    return `${actionType} after ${Math.round(hoursElapsed * 60 * 60 * 10) / 10} seconds`\n  }\n  else if (hoursElapsed < 1){\n    return `${actionType} after ${Math.round(hoursElapsed * 60 * 10) / 10} minutes`\n  }\n  else if (hoursElapsed === 1){\n    return `${actionType} after ${hoursElapsed} hour`\n  }\n  else {\n    return `${actionType} after ${hoursElapsed} hours`\n  }\n\n}\n\n\n\nconst DisplayProfile = ({ data }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.DisplayProfileCard}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\">\n          {data.experiment_profile_name}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\" gutterBottom>\n          Created by {data.metadata.author}\n        </Typography>\n        {data.metadata.description &&\n          <>\n            <Typography variant=\"body2\">\n                <b>Description:</b> {data.metadata.description}\n            </Typography>\n            <br/>\n          </>\n        }\n        {data.labels && Object.keys(data.labels).length > 0 && (\n          <>\n          <Typography variant=\"body2\">\n              <b>Labels:</b>\n          </Typography>\n          {Object.keys(data.labels).map(worker => (\n              <Typography key={worker} variant=\"body2\" style={{ marginLeft: '2em' }}>\n                  {worker} ⇝ {data.labels[worker]}\n              </Typography>\n          ))}\n          <br/>\n          </>\n        )}\n\n        {Object.keys(data.common).length > 0 &&\n         <>\n          <Typography variant=\"body2\">\n              <b>All Pioreactor(s) do:</b>\n          </Typography>\n          {data.common && Object.keys(data.common).map(job => (\n              <React.Fragment key={job}>\n                <Typography  variant=\"body2\" style={{ marginLeft: '2em' }}>\n                    <b>Job</b>: {job}\n                </Typography>\n                {data.common[job].actions.sort((a, b) => a.hours_elapsed > b.hours_elapsed).map((action, index) => (\n                    <React.Fragment key={`common-action-${index}`}>\n                      <Typography variant=\"body2\" style={{ marginLeft: '4em' }}>\n                          <b>Action {index + 1}</b>: {humanReadableDuration(action.type, action.hours_elapsed)}\n                      </Typography>\n                        {Object.keys(action.options || {}).map((option, index) => (\n                          <Typography key={`common-${option}-${action}-${index}`} variant=\"body2\" style={{ marginLeft: '8em' }}>\n                            {option}: {action.options[option]}\n                          </Typography>\n                        ))}\n                    </React.Fragment>\n                ))}\n              </React.Fragment>\n          ))}\n          <br/>\n          </>\n        }\n        {Object.keys(data.pioreactors).length > 0 && Object.keys(data.pioreactors).map(pioreactor => (\n            <React.Fragment key={pioreactor}>\n                <Typography variant=\"body2\">\n                    <b>{pioreactor} does:</b>\n                </Typography>\n                {Object.keys(data.pioreactors[pioreactor].jobs).map(job => (\n                    <React.Fragment key={`${pioreactor}-${job}`}>\n                      <Typography key={`${pioreactor}-${job}`}  variant=\"body2\" style={{ marginLeft: '2em' }}>\n                          <b>Job</b>: {job}\n                      </Typography>\n                      {data.pioreactors[pioreactor].jobs[job].actions.sort((a, b) => a.hours_elapsed > b.hours_elapsed).map((action, index) => (\n                          <React.Fragment key={`${pioreactor}-action-${index}`}>\n                            <Typography variant=\"body2\" style={{ marginLeft: '4em' }}>\n                                <b>Action {index + 1}</b>: {humanReadableDuration(action.type, action.hours_elapsed)}\n                            </Typography>\n                              {Object.keys(action.options || {}).map( (option, index) => (\n                                <Typography key={`${pioreactor}-${option}-${action}-${index}`} variant=\"body2\" style={{ marginLeft: '8em' }}>\n                                  {option}: {action.options[option]}\n                                </Typography>\n                              ))}\n                          </React.Fragment>\n                      ))}\n                    </React.Fragment>\n                ))}\n              <br/>\n            </React.Fragment>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\n\n\nexport default DisplayProfile;\n\n","import React from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nconst useStyles = makeStyles((theme) => ({\n  cardContent: {\n    padding: \"10px\",\n  },\n  DisplayProfileCard: {\n    maxHeight: \"350px\",\n    overflow: \"auto\",\n    backgroundColor: \"rgb(248,248,248)\",\n    letterSpacing: \"0em\",\n    margin: \"10px auto 10px auto\",\n    position: \"relative\",\n    width: \"98%\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"0px\",\n    boxShadow: \"none\"\n  },\n}));\n\n\n\nconst DisplaySourceCode = ({ sourceCode }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.DisplayProfileCard}>\n      <CardContent className={classes.cardContent}>\n        <pre style={{whiteSpace: \"pre-wrap\"}}>\n          {sourceCode}\n        </pre>\n      </CardContent>\n    </Card>\n  );\n};\n\n\nexport default DisplaySourceCode;\n\n","import React from \"react\";\n\nimport FormControl from '@mui/material/FormControl';\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from '@mui/styles';\nimport Select from '@mui/material/Select';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Divider from '@mui/material/Divider';\nimport CardContent from '@mui/material/Card';\nimport {getConfig} from \"./utilities\"\nimport FormLabel from '@mui/material/FormLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport DisplayProfile from \"./components/DisplayProfile\"\nimport DisplaySourceCode from \"./components/DisplaySourceCode\"\nimport CloseIcon from '@mui/icons-material/Close';\nimport CodeIcon from '@mui/icons-material/Code';\nimport {runPioreactorJob} from \"./utilities\"\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Link } from 'react-router-dom';\nimport SelectButton from \"./components/SelectButton\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ViewTimelineOutlinedIcon from '@mui/icons-material/ViewTimelineOutlined';\nimport PlayDisabledIcon from '@mui/icons-material/PlayDisabled';\nimport { Client, Message } from \"paho-mqtt\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  },\n  headerMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down('lg')]:{\n      flexFlow: \"nowrap\",\n      flexDirection: \"column\",\n    }\n  },\n  headerButtons: {display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"},\n  textIcon: {\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction ExperimentProfilesContent(props) {\n  const classes = useStyles();\n  const config = props.config\n\n  const [experimentProfilesAvailable, setExperimentProfilesAvailable] = React.useState([])\n  const [selectedExperimentProfile, setSelectedExperimentProfile] = React.useState('')\n  const [confirmed, setConfirmed] = React.useState(false)\n  const [viewSource, setViewSource] = React.useState(false)\n  const [source, setSource] = React.useState(\"\")\n  const [dryRun, setDryRun] = React.useState(false)\n  const [isProfileActive, setIsProfileActive] = React.useState(false)\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n  const [client, setClient] = React.useState(null);\n  const [runningProfileName, setRunningProfileName] = React.useState(null);\n\n\n  React.useEffect(() => {\n    fetch(\"/api/contrib/experiment_profiles\")\n      .then(response => {\n        return response.json();\n      })\n      .then(profiles => {\n        const profilesByKey = profiles.reduce((acc, cur) => ({ ...acc, [cur.file]: cur.experimentProfile}), {})\n        setExperimentProfilesAvailable(profilesByKey)\n        setSelectedExperimentProfile(Object.keys(profilesByKey)[0] ?? \"\")\n      })\n    fetch(\"/api/experiments/latest\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExperimentMetadata(data)\n      });\n\n  }, [])\n\n\n  React.useEffect(() => {\n    if (!config['cluster.topology']){\n      return\n    }\n\n    if (experimentMetadata.length === 0){\n      return\n    }\n\n    const onSuccess = () => {\n      client.subscribe(`pioreactor/${config['cluster.topology']?.leader_hostname}/${experimentMetadata.experiment}/experiment_profile/+`, { qos: 1 })\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `${config.remote.ws_url}/`,\n        \"webui_Profiles\" + Math.floor(Math.random()*10000)\n      )}\n    else {\n      client = new Client(\n        `${config['cluster.topology']['leader_address']}`, 9001,\n        \"webui_Profiles\" + Math.floor(Math.random()*10000)\n      );\n    }\n    client.connect({userName: 'pioreactor', password: 'raspberry', onSuccess: onSuccess});\n    client.onMessageArrived = onMessageArrived;\n    setClient(client)\n\n  },[config, experimentMetadata])\n\n\n  const onMessageArrived = (message) => {\n    const payload = message.payloadString\n    const setting = message.topic.split(\"/\")[4]\n    if ((setting === \"$state\") && (payload === \"ready\")){\n      setIsProfileActive(true)\n    }\n    else if ((setting === \"$state\") && (payload === \"disconnected\")){\n      setIsProfileActive(false)\n      setConfirmed(false)\n    }\n    else if(setting === \"experiment_profile_name\") {\n      setRunningProfileName(payload === \"\" ? null : payload)\n      props.setRunningProfileName(payload === \"\" ? null : payload)\n    }\n  }\n\n  const onSubmit = () => runPioreactorJob(config['cluster.topology']?.leader_hostname, 'experiment_profile', ['execute', selectedExperimentProfile], dryRun ? {'dry-run': null} : {}, () => setConfirmed(true))\n\n  const onStop = () => {\n    var message = new Message(\"disconnected\");\n    message.destinationName = `pioreactor/${config['cluster.topology']?.leader_hostname}/${experimentMetadata.experiment}/experiment_profile/$state/set`\n    client.publish(message)\n    setIsProfileActive(false)\n  }\n\n  const onSelectExperimentProfileChange = (e) => {\n    setSelectedExperimentProfile(e.target.value)\n    setViewSource(false)\n  }\n\n  const deleteProfile = () => {\n    fetch(`/api/contrib/experiment_profiles/${selectedExperimentProfile.split('/').pop()}`, {\n          method: \"DELETE\",\n      }).then(res => {\n          if (res.ok) {\n            window.location.reload();\n          }\n      })\n  }\n\n  const getSourceAndView = (e) => {\n    if (!viewSource){\n      fetch(`/api/contrib/experiment_profiles/${selectedExperimentProfile.split('/').pop()}`, {\n            method: \"GET\",\n        }).then(res => {\n          if (res.ok) {\n            return res.text();\n          }\n        }).then(text => {\n          setSource(text)\n        })\n    }\n    setViewSource(!viewSource)\n  }\n\n\n  return (\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div style={{width: \"100%\", margin: \"10px\", display: \"flex\", justifyContent:\"space-between\"}}>\n            <FormControl style={{minWidth: \"300px\"}}>\n              <FormLabel component=\"legend\">Experiment profile</FormLabel>\n              <Select\n                labelId=\"profileSelect\"\n                variant=\"standard\"\n                value={selectedExperimentProfile}\n                onChange={onSelectExperimentProfileChange}\n                label=\"Experiment profile\"\n              >\n                {Object.keys(experimentProfilesAvailable).map((file) => {\n                  const profile = experimentProfilesAvailable[file]\n                  return <MenuItem key={file} value={file}>{profile.experiment_profile_name} (from {file.split('/').pop()})</MenuItem>\n                  }\n                )}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={2} />\n        <Grid container item xs={4} direction=\"column\" alignItems=\"flex-end\">\n          <Grid item xs={4} />\n          <Grid item xs={8} >\n            <Button\n              variant=\"text\"\n              size=\"small\"\n              color=\"primary\"\n              aria-label=\"edit source code\"\n              style={{textTransform: \"none\"}}\n              to={`/edit-experiment-profile?profile=${selectedExperimentProfile.split(\"/\").pop()}`}\n              component={Link}\n              disabled={isProfileActive}\n            >\n              <EditIcon fontSize=\"15\" classes={{root: classes.textIcon}} /> Edit\n            </Button>\n            <Button\n              variant=\"text\"\n              size=\"small\"\n              color=\"primary\"\n              aria-label=\"view source code\"\n              disabled={selectedExperimentProfile === \"\"}\n              onClick={getSourceAndView}\n              style={{textTransform: \"none\"}}\n            >\n              <CodeIcon fontSize=\"15\" classes={{root: classes.textIcon}} /> {viewSource ? \"View description\": \"View source\"}\n            </Button>\n            <Button\n              variant=\"text\"\n              size=\"small\"\n              color=\"secondary\"\n              aria-label=\"delete profile\"\n              onClick={deleteProfile}\n              style={{marginRight: \"10px\", textTransform: \"none\"}}\n            >\n              <DeleteIcon fontSize=\"15\" classes={{root: classes.textIcon}} /> Delete\n            </Button>\n          </Grid>\n\n        </Grid>\n\n        <Grid item xs={12}>\n          {selectedExperimentProfile !== \"\" && !viewSource &&\n            <DisplayProfile data={experimentProfilesAvailable[selectedExperimentProfile]} />\n          }\n          {selectedExperimentProfile !== \"\" && viewSource &&\n            <DisplaySourceCode sourceCode={source}/>\n          }\n        </Grid>\n        <div style={{display: \"flex\", justifyContent: \"flex-end\", marginLeft: \"20px\"}}>\n            <SelectButton\n              variant=\"contained\"\n              color=\"primary\"\n              value={dryRun ? \"execute_dry_run\" : \"execute\"}\n              onClick={onSubmit}\n              endIcon={dryRun ? <PlayDisabledIcon />  : <PlayArrowIcon />}\n              disabled={confirmed || (isProfileActive)}\n              onChange={({target: { value } }) =>\n                setDryRun(value === \"execute_dry_run\")\n              }\n            >\n              <MenuItem value={\"execute\"}>Run profile</MenuItem>\n              <MenuItem value={\"execute_dry_run\"}>Dry-run profile</MenuItem>\n           </SelectButton>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            style={{marginLeft: \"20px\"}}\n            onClick={onStop}\n            endIcon={ <CloseIcon /> }\n            disabled={!isProfileActive}\n          >\n            Stop\n         </Button>\n        </div>\n      </Grid>\n  );\n}\n\nfunction ProfilesContainer(props){\n  const classes = useStyles();\n  const [runningProfileName, setRunningProfileName] = React.useState(null)\n\n  return(\n    <React.Fragment>\n      <div>\n        <div className={classes.headerMenu}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Experiment Profiles\n            </Box>\n          </Typography>\n          <div className={classes.headerButtons}>\n            <Button to={`/create-experiment-profile`} component={Link} style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <AddIcon fontSize=\"15\" classes={{root: classes.textIcon}}/> Create new profle\n            </Button>\n          </div>\n        </div>\n        <Divider/>\n        <div style={{margin: \"10px 2px 10px 2px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", flexFlow: \"wrap\"}}>\n          <Typography variant=\"subtitle2\" style={{flexGrow: 1}}>\n            <div style={{display:\"inline\"}}>\n              <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\"}}>\n                <ViewTimelineOutlinedIcon style={{ fontSize: 12, verticalAlign: \"-1px\" }}/> Profile running:&nbsp;\n              </Box>\n              <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"1%\", display:\"inline-block\"}}>\n                {runningProfileName ?? \"None\"}\n              </Box>\n            </div>\n\n          </Typography>\n        </div>\n\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <ExperimentProfilesContent config={props.config} setRunningProfileName={setRunningProfileName}/>\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}>Learn more about <a href=\"https://docs.pioreactor.com/user-guide/experiment-profiles\" target=\"_blank\" rel=\"noopener noreferrer\">experiment profiles</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Profiles(props) {\n    const [config, setConfig] = React.useState({})\n\n    React.useEffect(() => {\n      getConfig(setConfig)\n    }, [])\n\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ProfilesContainer config={config}/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Profiles;\n","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Drawer from '@mui/material/Drawer';\nimport Badge from '@mui/material/Badge';\nimport Divider from '@mui/material/Divider';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport IconButton from '@mui/material/IconButton';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport Toolbar from '@mui/material/Toolbar';\nimport {AppBar, Typography, Button} from '@mui/material';\nimport PioreactorIcon from './PioreactorIcon';\nimport LibraryAddOutlinedIcon from '@mui/icons-material/LibraryAddOutlined';\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport InsertChartOutlinedIcon from '@mui/icons-material/InsertChartOutlined';\nimport ViewTimelineOutlinedIcon from '@mui/icons-material/ViewTimelineOutlined';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Sidebar, Menu, MenuItem} from \"react-pro-sidebar\";\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarRoot: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1\n    }\n  },\n  listItemIcon: {\n    minWidth: \"40px\"\n  },\n  divider: {\n    marginTop: \"15px\",\n    marginBottom: \"15px\",\n  },\n\n}));\n\n\n\nexport default function SideNavAndHeader() {\n  const classes = useStyles();\n  const location = useLocation()\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [version, setVersion] = React.useState(null)\n  const [latestVersion, setLatestVersion] = React.useState(null)\n\n  React.useEffect(() => {\n    async function getCurrentApp() {\n         await fetch(\"/api/versions/app\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestVersion() {\n         // TODO: what happens when there is not internet connection?\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['tag_name'])\n        }).catch(e => {\n          // no internet?\n        });\n      }\n\n      getCurrentApp()\n      getLatestVersion()\n  }, [])\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  function isSelected(path) {\n    return (location.pathname === path)\n  }\n\n\n  const list = () => (\n    <Sidebar width=\"230px\">\n      <Menu\n          style={{minWidth: \"230px\", width: \"230px\"}}\n          renderExpandIcon={({level, active, disabled}) => null }\n          menuItemStyles={{\n            label:  {whiteSpace: \"pre-wrap\"},\n            button: ({ level, active, disabled }) => {\n              // only apply styles on first level elements of the tree\n              if (level === 0)\n                return {\n                  color: disabled ? '#00000050' : (active ? '#5331ca' : 'inherit'),\n                  backgroundColor: active ? '#5331ca14' : undefined,\n                };\n            },\n            icon: ({level, active, disabled}) => {\n              return {\n                color: disabled ? '#00000050' : (active ? '#5331ca' : '#0000008a'),\n              };\n            }\n          }}\n        >\n        <MenuItem\n          icon={<DashboardOutlinedIcon/>}\n          component={<Link to=\"/overview\" className=\"link\" />}\n          active={(isSelected(\"/\") || isSelected(\"/overview\"))}\n          >\n          Overview\n        </MenuItem>\n\n        <MenuItem\n          icon={<PioreactorIcon viewBox=\"-3 0 24 24\"/>}\n          component={<Link to=\"/pioreactors\" className=\"link\" />}\n          active={isSelected(\"/pioreactors\")}\n          >\n          Pioreactors\n        </MenuItem>\n\n        <MenuItem\n          icon={<ViewTimelineOutlinedIcon/> }\n          component={<Link to=\"/experiment-profiles\" className=\"link\" />}\n          active={isSelected(\"/experiment-profiles\")}\n          >\n          Profiles\n        </MenuItem>\n\n\n        <MenuItem\n          icon={<SettingsOutlinedIcon/> }\n          component={<Link to=\"/config\" className=\"link\" />}\n          active={isSelected(\"/config\")}\n          >\n          Configuration\n\n        </MenuItem>\n\n        <MenuItem\n          icon={<SaveAltIcon/> }\n          component={<Link to=\"/export-data\" className=\"link\" />}\n          active={isSelected(\"/export-data\")}\n          >\n          Export data\n        </MenuItem>\n\n        <MenuItem\n          icon={<InsertChartOutlinedIcon/> }\n          component={<Link to=\"/experiments\" className=\"link\" />}\n          active={isSelected(\"/experiments\")}\n          >\n          Past experiments\n        </MenuItem>\n\n\n        <Divider className={classes.divider} />\n\n        <MenuItem\n          icon={<LibraryAddOutlinedIcon/> }\n          component={<Link to=\"/plugins\" className=\"link\" />}\n          active={isSelected(\"/plugins\")}\n          >\n          Plugins\n        </MenuItem>\n\n        <MenuItem\n          icon={\n            <Badge variant=\"dot\" color=\"secondary\" invisible={!((version) && (latestVersion) && (version !== latestVersion))}>\n                <UpdateIcon/>\n            </Badge>\n            }\n          component={<Link to=\"/updates\" className=\"link\" />}\n          active={isSelected(\"/updates\")}\n          >\n          Updates\n        </MenuItem>\n\n\n        <MenuItem\n          icon={<HelpOutlineIcon/> }\n          component={<Link target=\"_blank\" rel=\"noopener noreferrer\" to={{pathname: \"https://docs.pioreactor.com\"}}  className=\"link\" />}\n          suffix={<OpenInNewIcon style={{fontSize:\"15px\", verticalAlign: \"middle\"}}/>}\n          >\n          Help\n        </MenuItem>\n\n\n        <MenuItem\n          icon={<ChatOutlinedIcon/> }\n          component={<Link target=\"_blank\" rel=\"noopener noreferrer\" to={{pathname: \"https://forum.pioreactor.com\"}}  className=\"link\" />}\n          suffix={<OpenInNewIcon style={{fontSize:\"15px\", verticalAlign: \"middle\"}}/>}\n          >\n          Forums\n        </MenuItem>\n\n\n      </Menu>\n    </Sidebar>\n  );\n  return (\n    <React.Fragment>\n      <div className={classes.appBarRoot}>\n        <AppBar position=\"fixed\" >\n          <Toolbar variant=\"dense\">\n\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              classes={{root: classes.menuButton}}\n              sx={{ display: { xs: 'block', sm: 'none' } }}\n              size=\"large\">\n              <MenuIcon />\n            </IconButton>\n\n\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link color=\"inherit\" underline=\"none\" to=\"/\" className={classes.title}>\n                <img alt=\"pioreactor logo\" src=\"/white_colour.png\" style={{width: \"120px\", height: \"29px\"}}/> <\n              /Link>\n            </Typography>\n            <Button component={Link} target=\"_blank\" rel=\"noopener noreferrer\" to={{pathname: \"https://docs.pioreactor.com\"}} color=\"inherit\" style={{textTransform: \"none\"}}>\n              Help <HelpOutlineIcon style={{ fontSize: 18, verticalAlign: \"middle\", marginLeft: 5 }}/>\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Drawer\n        variant=\"temporary\"\n        anchor=\"left\"\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n        sx={{ display: { xs: 'block', sm: 'none' } }}\n      >\n        {list()}\n      </Drawer>\n      <Drawer\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        variant=\"permanent\"\n        open\n        className={classes.drawer}\n        sx={{ display: { xs: 'none', sm: 'block' } }}\n      >\n        <Toolbar />\n        {list()}\n      </Drawer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, errorMsg: \"\" };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n    this.setState({errorMsg: error.message})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n      <React.Fragment>\n        <div style={{maxWidth: 700, margin: \"auto\"}}>\n          <div>\n            <h1>Something went wrong with the PioreactorUI!</h1>\n            <h3>Don't worry. It's our fault. Here's what you can do:</h3>\n            <p> Looks like there's a bug in the UI. See the below for error information. We would appreciate it\n            if you create an issue in <a href=\"https://github.com/Pioreactor/pioreactorui/issues\">Github</a> for us, with the information below.</p>\n          </div>\n          <div>\n            <code>\n            {this.state.errorMsg}\n            </code>\n          </div>\n        </div>\n      </React.Fragment>\n      )\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createTheme} from '@mui/material/styles';\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { StyledEngineProvider } from '@mui/material/styles';\n\n\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\nimport ErrorSnackbar from \"./components/ErrorSnackbar\";\nimport ExperimentOverview from \"./ExperimentOverview\";\nimport ExportData from \"./ExportData\";\nimport Pioreactors from \"./Pioreactors\";\nimport StartNewExperiment from \"./StartNewExperiment\";\nimport CreateExperimentProfile from \"./CreateExperimentProfile\";\nimport EditExperimentProfile from \"./EditExperimentProfile\";\nimport EditConfig from \"./EditConfig\";\nimport Updates from \"./Updates\";\nimport Plugins from \"./Plugins\";\nimport Profiles from \"./Profiles\";\n//import Analysis from \"./Analysis\";\nimport Experiments from \"./Experiments\";\nimport SideNavAndHeader from \"./components/SideNavAndHeader\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport { ConfirmProvider } from 'material-ui-confirm';\nimport { ProSidebarProvider } from \"react-pro-sidebar\";\n\nimport \"@fontsource/roboto/300.css\"\nimport \"@fontsource/roboto/400.css\"\nimport \"@fontsource/roboto/500.css\"\nimport \"@fontsource/roboto/700.css\"\nimport './styles.css';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: \"#f6f6f7\",\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#5331CA',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      main: '#f44336',\n    },\n  },\n});\n\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <ProSidebarProvider>\n            <ScrollToTop/>\n            <ConfirmProvider>\n              <CssBaseline />\n              <MainSite />\n            </ConfirmProvider>\n            </ProSidebarProvider>\n          </Router>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </React.StrictMode>\n  );\n}\n\nfunction MainSite() {\n  return (\n    <div style={{display: 'flex'}}>\n      <ErrorBoundary>\n        <SideNavAndHeader />\n        <main style={{flexGrow: 1, paddingTop: theme.spacing(9), paddingLeft: theme.spacing(4), paddingRight: theme.spacing(4)}}>\n          <div className=\"pageContainer\">\n            <Routes>\n              <Route path=\"/export-data\" element={<ExportData title=\"Pioreactor ~ Export data\"/>}/>\n              <Route path=\"/start-new-experiment\" element={<StartNewExperiment title=\"Pioreactor ~ Start new experiment\" />}/>\n              <Route path=\"/overview\" element={<ExperimentOverview title=\"Pioreactor ~ Overview\"/>}/>\n              <Route path=\"/plugins\" element={<Plugins title=\"Pioreactor ~ Plugins\"/>}/>\n              <Route path=\"/experiments\" element={<Experiments title=\"Pioreactor ~ Past experiments\"/>}/>\n              <Route path=\"/experiment-profiles\" element={<Profiles title=\"Pioreactor ~ Experiment profiles\"/>}/>\n              <Route path=\"/create-experiment-profile\" element={<CreateExperimentProfile title=\"Pioreactor ~ Create experiment profile\"/>}/>\n              <Route path=\"/edit-experiment-profile\" element={<EditExperimentProfile title=\"Pioreactor ~ Edit experiment profile\"/>}/>\n              <Route path=\"/config\" element={<EditConfig title=\"Pioreactor ~ Configuration\"/>}/>\n              <Route path=\"/pioreactors\" element={ <Pioreactors title=\"Pioreactor ~ Pioreactors\"/>}/>\n              <Route path=\"/updates\" element={<Updates title=\"Pioreactor ~ Updates\"/>}/>\n              <Route path=\"/\" element={<ExperimentOverview title=\"Pioreactor ~ Overview\"/>}/>\n            </Routes>\n            <ErrorSnackbar />\n            <TactileButtonNotification />\n          </div>\n        </main>\n      </ErrorBoundary>\n    </div>\n)}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\n\nimport SvgIcon from '@mui/material/SvgIcon';\n\n\nfunction PioreactorIcon(props) {\n  return (\n    <SvgIcon {...props} >\n        <g id=\"PioreactorIcon1\" stroke=\"none\" strokeWidth=\"1\" fill={props.fillColor || \"none\"} fillRule=\"evenodd\">\n            <g id=\"PioreactorIcon2\" transform=\"translate(-728.000000, -1502.000000)\" stroke=\"currentColor\" strokeWidth=\"1.8\">\n                <g id=\"PioreactorIcon3\" transform=\"translate(729.000000, 1503.000000)\">\n                    <path d=\"M1.4,18.9 L1.4,14.7 L0,14.7 L0,11.2 L2.799,11.2 L2.8,0 L14,0 L13.999,11.2 L16.8,11.2 L16.8,14.7 L15.399,14.7 L15.4,18.9 L1.4,18.9 Z\" id=\"Combined-Shape\"></path>\n                    <circle id=\"Oval\" cx=\"8.4\" cy=\"13.3\" r=\"2.1\"></circle>\n                </g>\n            </g>\n        </g>\n    </SvgIcon>\n  );\n}\n\nexport default PioreactorIcon;\n"],"sourceRoot":""}
